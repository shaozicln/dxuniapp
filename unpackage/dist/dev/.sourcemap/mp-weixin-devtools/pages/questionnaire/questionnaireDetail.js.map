{"version":3,"names":["questionnaire","common_vendor","ref","submitting","JSON","parse","index","getStorageSync","onMounted","pages","getCurrentPages","currentPage","length","data","options","currentQuestionnaire","decodeURIComponent","allQuestionnaires","storedQuestionnaire","find","q","id","value","questions","forEach","question","answer","type","min","textAnswer","navigateBack","handleBack","delta","getQuestionTag","scoringTypeId","isBooleanQuestion","qtype","isOptionSelected","questionId","optionId","_a","includes","handleTextInput","e","detail","selectOption","opt","indexOf","splice","push","filter","selectStar","star","getSliderPosition","max","percent","concat","Math","handleSliderChanging","handleSliderChange","getStarScore","userInfo","calculateTotalScore","total","selectedOption","submitQuestionnaire","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","allAnswered","submitData","res","wrap","_callee$","_context","prev","next","abrupt","every","trim","showToast","title","icon","mainData","questionnaireId","publishId","academicYearSemester","questionnaireName","questionnaireType","questionnaireCategory","evalType","evalTarget","evaluationRequirement","kclx","skdd","courseNo","classSerial","courseName","studentClass","courseDepartment","teacherId","teacherName","teacherDepartment","teacherTitle","evaluatorId","evaluatorName","name","evaluatorType","evaluatorDepartment","totalScore","obtainedScore","evaluationTime","targetScores","map","scoreValue","singleChoice","fillInBlank","selectedOptions","round","reduce","sum","gradingMethodId","gmtype","scoreTime","Date","toISOString","utils_request_request","post","sent","code","status","__f__","findIndex","setStorageSync","stringify","setTimeout","msg","t0","finish","stop","apply","arguments","resetQuestionnaire","showModal","content","success","confirm","wx","createPage","MiniProgramPage"],"sources":["questionnaireDetail.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcXVlc3Rpb25uYWlyZS9xdWVzdGlvbm5haXJlRGV0YWlsLnZ1ZQ"],"sourcesContent":["<template>\r\n\t<view class=\"questionnaire-detail-page\">\r\n\t\t<view class=\"page-header\" v-if=\"questionnaire\">\r\n\t\t\t<view class=\"back-button\" @click=\"handleBack\">\r\n\t\t\t\t<text class=\"back-icon\">←</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"header-title\">{{ questionnaire.title }}</view>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"loading-state\" v-else>\r\n\t\t\t<text>加载中...</text>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"questionnaire-content\" v-if=\"questionnaire\">\r\n\t\t\t<view class=\"question-item\" v-for=\"(question, qIndex) in questionnaire.questions\" :key=\"qIndex\">\r\n\t\t\t\t<view class=\"question-number\">{{ qIndex + 1 }}. {{ getQuestionTag(question) }}</view>\r\n\t\t\t\t<view class=\"question-text\">{{ question.text }}</view>\r\n\r\n\t\t\t\t<view class=\"question-options\">\r\n\t\t\t\t\t<!-- 1. 单选（圆圈） -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'single'\" class=\"options-single\">\r\n\t\t\t\t\t\t<view class=\"option-single\" v-for=\"(option, oIndex) in question.options\" :key=\"oIndex\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: isOptionSelected(question.id, option.id) }\"\r\n\t\t\t\t\t\t\t@click=\"selectOption(question.id, option.id)\">\r\n\t\t\t\t\t\t\t<view class=\"radio-marker\">\r\n\t\t\t\t\t\t\t\t<view class=\"radio-dot\" v-if=\"isOptionSelected(question.id, option.id)\"></view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text>{{ option.text }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 2. 多选（方块） -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'multiple'\" class=\"options-multiple\">\r\n\t\t\t\t\t\t<view class=\"option-multiple\" v-for=\"(option, oIndex) in question.options\" :key=\"oIndex\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: isOptionSelected(question.id, option.id) }\"\r\n\t\t\t\t\t\t\t@click=\"selectOption(question.id, option.id)\">\r\n\t\t\t\t\t\t\t<view class=\"checkbox-marker\">\r\n\t\t\t\t\t\t\t\t<text class=\"check-icon\" v-if=\"isOptionSelected(question.id, option.id)\">✓</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text>{{ option.text }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 3. 星级评分（打星） -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'rating'\" class=\"options-rating\">\r\n\t\t\t\t\t\t<view class=\"star-item\" v-for=\"star in 5\" :key=\"star\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: question.answer !== null && star <= question.answer }\"\r\n\t\t\t\t\t\t\t@click=\"selectStar(question.id, star)\">\r\n\t\t\t\t\t\t\t★\r\n\t\t\t\t\t\t\t<view class=\"star-text\">{{ getStarScore(star) }}分</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 4. 滑动条打分 -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'slider'\" class=\"options-slider\">\r\n\t\t\t\t\t\t<view class=\"slider-container\">\r\n\t\t\t\t\t\t\t<view class=\"slider-tooltip-wrapper\" :style=\"{ left: getSliderPosition(question) }\">\r\n\t\t\t\t\t\t\t\t<view class=\"slider-tooltip\">{{ question.answer }}分</view>\r\n\t\t\t\t\t\t\t\t<view class=\"tooltip-arrow\"></view>\r\n\t\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t\t<slider :min=\"1\" :max=\"10\" :step=\"1\" :value=\"question.answer || 1\"\r\n\t\t\t\t\t\t\t\t@changing=\"handleSliderChanging(question.id, $event)\"\r\n\t\t\t\t\t\t\t\t@change=\"handleSliderChange(question.id, $event)\" activeColor=\"#42b983\"\r\n\t\t\t\t\t\t\t\tbackgroundColor=\"#eaeaea\" block-size=\"32rpx\" block-color=\"#42b983\"\r\n\t\t\t\t\t\t\t\tblock-border-radius=\"50%\"></slider>\r\n\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t<view class=\"slider-labels\">\r\n\t\t\t\t\t\t\t<text>1分</text>\r\n\t\t\t\t\t\t\t<text>10分</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 5. 是否选择题（关键修改：添加条件判断） -->\r\n\t\t\t\t\t<view v-if=\"isBooleanQuestion(question)\" class=\"options-boolean\">\r\n\t\t\t\t\t\t<view class=\"option-boolean\" v-for=\"(option, oIndex) in question.options\" :key=\"oIndex\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: isOptionSelected(question.id, option.id) }\"\r\n\t\t\t\t\t\t\t@click=\"selectOption(question.id, option.id)\">\r\n\t\t\t\t\t\t\t<view class=\"radio-marker\">\r\n\t\t\t\t\t\t\t\t<view class=\"radio-dot\" v-if=\"isOptionSelected(question.id, option.id)\"></view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text>{{ option.text }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 6. 特殊问题的文本框逻辑（只对特定类型显示） -->\r\n\t\t\t\t\t<view class=\"options-open\" v-if=\"question.qtype === 4 && question.scoringTypeId === 5 && \r\n\t\t\t\t\t                isOptionSelected(question.id, 1)\">\r\n\t\t\t\t\t\t<textarea v-model=\"question.textAnswer\" placeholder=\"请输入相关问题...\" class=\"open-textarea\"\r\n\t\t\t\t\t\t\t@input=\"handleTextInput(question.id, $event)\"></textarea>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 7. 纯文本框问题 -->\r\n\t\t\t\t\t<view class=\"options-open\" v-if=\"question.qtype === 4 && question.scoringTypeId === 6\">\r\n\t\t\t\t\t\t<textarea v-model=\"question.textAnswer\" placeholder=\"请输入文本...\" class=\"open-textarea\"\r\n\t\t\t\t\t\t\t@input=\"handleTextInput(question.id, $event)\"></textarea>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"bottom-actions\" v-if=\"questionnaire\">\r\n\t\t\t<view class=\"reset-btn\" v-if=\"questionnaire.status === 'completed'\" @click=\"resetQuestionnaire\">\r\n\t\t\t\t重新填写\r\n\t\t\t</view>\r\n\t\t\t<button class=\"submit-btn\" v-if=\"questionnaire.status !== 'completed'\" @click=\"submitQuestionnaire\"\r\n\t\t\t\t:disabled=\"submitting\">\r\n\t\t\t\t{{ submitting ? '提交中...' : '提交问卷' }}\r\n\t\t\t</button>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup>\r\n\timport {\r\n\t\tref,\r\n\t\tonMounted\r\n\t} from 'vue';\r\n\timport {\r\n\t\tpost\r\n\t} from '@/utils/request/request.js'\r\n\r\n\tconst questionnaire = ref(null);\r\n\tconst submitting = ref(false);\r\n\t\r\n\tconst currentCourse = ref(JSON.parse(uni.getStorageSync('currentCourse') || '{}'));\r\n\r\n\tonMounted(() => {\r\n\t\tconst pages = getCurrentPages();\r\n\t\tconst currentPage = pages[pages.length - 1];\r\n\t\tconst data = currentPage.options.data;\r\n\t\tif (data) {\r\n\t\t\tconst currentQuestionnaire = JSON.parse(decodeURIComponent(data));\r\n\t\t\tconst allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\r\n\t\t\tconst storedQuestionnaire = allQuestionnaires.find(q => q.id === currentQuestionnaire.id);\r\n\t\t\tquestionnaire.value = storedQuestionnaire || currentQuestionnaire;\r\n\r\n\t\t\tif (questionnaire.value) {\r\n\t\t\t\tquestionnaire.value.questions.forEach(question => {\r\n\t\t\t\t\tif (question.answer === null || question.answer === undefined) {\r\n\t\t\t\t\t\tif (question.type === 'slider') {\r\n\t\t\t\t\t\t\tquestion.answer = question.min || 0;\r\n\t\t\t\t\t\t} else if (question.type === 'rating') {\r\n\t\t\t\t\t\t\tquestion.answer = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 初始化文本答案字段\r\n\t\t\t\t\tif (question.textAnswer === undefined) {\r\n\t\t\t\t\t\tquestion.textAnswer = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tuni.navigateBack();\r\n\t\t}\r\n\t});\r\n\r\n\tconst handleBack = () => {\r\n\t\tuni.navigateBack({\r\n\t\t\tdelta: 1\r\n\t\t});\r\n\t};\r\n\r\n\tconst getQuestionTag = (question) => {\r\n\t\tswitch (question.scoringTypeId) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn '[单选题]';\r\n\t\t\tcase 2:\r\n\t\t\t\treturn '[多选题]';\r\n\t\t\tcase 3:\r\n\t\t\t\treturn '[打星题]';\r\n\t\t\tcase 4:\r\n\t\t\t\treturn '[滑动打分题]';\r\n\t\t\tcase 5:\r\n\t\t\t\treturn '[反馈问题指标题]';\r\n\t\t\tcase 6:\r\n\t\t\t\treturn '[文本题]';\r\n\t\t\tdefault:\r\n\t\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\r\n\t// 判断是否为是否题（包括通用和特殊是否题）\r\n\tconst isBooleanQuestion = (question) => {\r\n\t\t// 只对需要显示是否选项的题目返回true\r\n\t\treturn question.type === 'boolean' ||\r\n\t\t\t(question.qtype === 4 && question.scoringTypeId === 5);\r\n\t};\r\n\r\n\tconst isOptionSelected = (questionId, optionId) => {\r\n\t\tif (!questionnaire.value) return false;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (!question || !question.answer) return false;\r\n\t\treturn question.type === 'single' || question.type === 'boolean' ?\r\n\t\t\tquestion.answer === optionId :\r\n\t\t\tquestion.answer?.includes(optionId);\r\n\t};\r\n\r\n\tconst submitScore = async (questionId, scoreValue) => {\r\n\t\tif (submitting.value) return;\r\n\r\n\t\ttry {\r\n\t\t\tsubmitting.value = true;\r\n\r\n\t\t\tconst now = new Date();\r\n\t\t\tconst scoreTime = `${now.getFullYear()}-${\r\n\t\t\t      (now.getMonth() + 1).toString().padStart(2, '0')\r\n\t\t\t    }-${\r\n\t\t\t      now.getDate().toString().padStart(2, '0')\r\n\t\t\t    } ${\r\n\t\t\t      now.getHours().toString().padStart(2, '0')\r\n\t\t\t    }:${\r\n\t\t\t      now.getMinutes().toString().padStart(2, '0')\r\n\t\t\t    }:${\r\n\t\t\t      now.getSeconds().toString().padStart(2, '0')\r\n\t\t\t    }`;\r\n\r\n\t\t\tconst scoreData = {\r\n\t\t\t\tscoreId: 1,\r\n\t\t\t\ttargetId: 1,\r\n\t\t\t\ttargetUserId: 1,\r\n\t\t\t\tquestionnaireId: questionnaire.value.id,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tscoreValue: scoreValue,\r\n\t\t\t\tscoreLevel: scoreValue >= 8 ? 'A' : scoreValue >= 6 ? 'B' : scoreValue >= 4 ? 'C' : 'D',\r\n\t\t\t\tisModified: 0,\r\n\t\t\t\tscoreTime: scoreTime,\r\n\t\t\t\tlastModifyTime: scoreTime\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log('提交的数据:', scoreData);\r\n\t\t\tconst res = await post('/question/score', scoreData);\r\n\t\t\tconsole.log('接口返回结果:', res);\r\n\r\n\t\t\tif (res.code === 200) {\r\n\t\t\t\tconsole.log(`问题 ${questionId} 分数提交成功`, res.data);\r\n\t\t\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\t\t\tif (question) {\r\n\t\t\t\t\tif (question.scoreId) {\r\n\t\t\t\t\t\tquestion.isModified = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tquestion.scoreId = res.data?.scoreId;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: `提交失败: ${res.msg || '未知错误'}`,\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('提交分数异常:', err);\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '网络错误，提交失败',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tsubmitting.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTextInput = (questionId, e) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) {\r\n\t\t\tquestion.textAnswer = e.detail.value;\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectOption = (questionId, optionId) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (!question) return;\r\n\r\n\t\tif (question.type === 'single' || question.type === 'boolean') {\r\n\t\t\tquestion.answer = optionId;\r\n\t\t\tconst selectedOption = question.options.find(opt => opt.id === optionId);\r\n\t\t\t// if (selectedOption) {\r\n\t\t\t// \tsubmitScore(questionId, selectedOption.value || 0);\r\n\t\t\t// }\r\n\t\t} else if (question.type === 'multiple') {\r\n\t\t\tif (!question.answer) question.answer = [];\r\n\t\t\tconst index = question.answer.indexOf(optionId);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tquestion.answer.splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tquestion.answer.push(optionId);\r\n\t\t\t}\r\n\t\t\tconst selectedOptions = question.options.filter(opt => question.answer.includes(opt.id));\r\n\t\t\t// const score = selectedOptions.length ?\r\n\t\t\t// \tMath.round(selectedOptions.reduce((sum, opt) => sum + (opt.value || 0), 0) / selectedOptions.length) :\r\n\t\t\t// \t0;\r\n\t\t\t// submitScore(questionId, score);\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectStar = (questionId, star) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) {\r\n\t\t\tquestion.answer = star;\r\n\t\t\t// const score = Math.round((star / 5) * 100);\r\n\t\t\t// submitScore(questionId, score);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getSliderPosition = (question) => {\r\n\t\tconst value = question.answer || 1;\r\n\t\tconst min = 1;\r\n\t\tconst max = 10;\r\n\t\tconst percent = ((value - min) / (max - min)) * 100;\r\n\t\treturn `${Math.max(0, Math.min(100, percent))}%`;\r\n\t};\r\n\r\n\tconst handleSliderChanging = (questionId, e) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) question.answer = e.detail.value;\r\n\t};\r\n\r\n\tconst handleSliderChange = (questionId, e) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) {\r\n\t\t\tquestion.answer = e.detail.value;\r\n\t\t\t// const score = Math.round((e.detail.value / 10) * 100);\r\n\t\t\t// submitScore(questionId, score);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStarScore = (star) => {\r\n\t\treturn star * 2;\r\n\t};\r\n\r\n\tconst userInfo = JSON.parse(uni.getStorageSync('userInfo') || '[]');\r\n\t\r\n\t// 计算试卷得分\r\n\tconst calculateTotalScore = () => {\r\n\t  let total = 0;\r\n\t  questionnaire.value.questions.forEach(question => {\r\n\t    if (question.type === 'single') {\r\n\t      const selectedOption = question.options.find(opt => opt.id === question.answer);\r\n\t      total += selectedOption?.value || 0;\r\n\t    } \r\n\t    // TODO：其他题型的得分计算逻辑\r\n\t  });\r\n\t  return total;\r\n\t};\r\n\r\n\t// 在submitQuestionnaire方法中添加\r\n\tconst submitQuestionnaire = async () => {\r\n\t\tif (!questionnaire.value || submitting.value) return;\r\n\r\n\t\t// 验证所有问题是否已回答（保持原有的验证逻辑）\r\n\t\tconst allAnswered = questionnaire.value.questions.every(question => {\r\n\t\t\t// 可选问题可以不回答\r\n\t\t\tif (question.qtype === 3) return true;\r\n\r\n\t\t\t// 特殊类型验证\r\n\t\t\tif (question.qtype === 4) {\r\n\t\t\t\tif (question.scoringTypeId === 5) {\r\n\t\t\t\t\t// 必须选择是/否，选是则文本框必填\r\n\t\t\t\t\tif (question.answer === null || question.answer === undefined) return false;\r\n\t\t\t\t\treturn question.answer !== 1 || (question.textAnswer && question.textAnswer.trim() !==\r\n\t\t\t\t\t\t'');\r\n\t\t\t\t}\r\n\t\t\t\tif (question.scoringTypeId === 6) {\r\n\t\t\t\t\t// 文本框必填\r\n\t\t\t\t\treturn question.textAnswer && question.textAnswer.trim() !== '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 其他问题必须回答\r\n\t\t\treturn question.answer !== null && question.answer !== undefined &&\r\n\t\t\t\t(question.type !== 'multiple' || question.answer.length > 0);\r\n\t\t});\r\n\r\n\r\n\t\tif (!allAnswered) {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '请完成所有必填问题',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsubmitting.value = true;\r\n\r\n\t\t\t// 1. 构建提交数据\r\n\t\t\tconst submitData = {\r\n\t\t\t\t  mainData: {\r\n\t\t\t\t    questionnaireId: questionnaire.value.id,\r\n\t\t\t\t    publishId: questionnaire.value.publishId || \"202305001\",\r\n\t\t\t\t    academicYearSemester: questionnaire.value.academicYearSemester || \"2025-2026学年 第一学期\",\r\n\t\t\t\t    questionnaireName: questionnaire.value.title,\r\n\t\t\t\t    questionnaireType: \"课程评估\",\r\n\t\t\t\t    questionnaireCategory: '',\r\n\t\t\t\t    evalType: \"绩效评估\",\r\n\t\t\t\t    evalTarget: \"课堂教师\",\r\n\t\t\t\t    evaluationRequirement: \"必修课评估\",\r\n\t\t\t\t    kclx: questionnaire.value.kclx,\r\n\t\t\t\t    skdd: questionnaire.value.skdd,\r\n\t\t\t\t    courseNo: questionnaire.value.courseNo,\r\n\t\t\t\t    classSerial: questionnaire.value.classSerial,\r\n\t\t\t\t    courseName: questionnaire.value.courseName,\r\n\t\t\t\t    studentClass: '',\r\n\t\t\t\t    courseDepartment: '',\r\n\t\t\t\t\tteacherId: \"T1001\",\r\n\t\t\t\t\tteacherName: questionnaire.value.teacherName,\r\n\t\t\t\t    teacherDepartment: \"计算机学院\",\r\n\t\t\t\t    teacherTitle: \"副教授\",\r\n\t\t\t\t    evaluatorId: userInfo.teacherId,\r\n\t\t\t\t    evaluatorName: userInfo.name,\r\n\t\t\t\t    evaluatorType: \"教师\",\r\n\t\t\t\t    evaluatorDepartment: \"计算机学院\",\r\n\t\t\t\t    totalScore: 100.00,\r\n\t\t\t\t    obtainedScore: calculateTotalScore(),\r\n\t\t\t\t    evaluationTime: \"2024-03-15T14:30:00\"\r\n\t\t\t\t  },\r\n\t\t\t\ttargetScores: questionnaire.value.questions.map(question => {\r\n\t\t\t\t\t// 根据问题类型构建不同的得分数据\r\n\t\t\t\t\tlet scoreValue = null;\r\n\t\t\t\t\tlet singleChoice = null;\r\n\t\t\t\t\tlet fillInBlank = null;\r\n\r\n\t\t\t\t\tif (question.type === 'slider') {\r\n\t\t\t\t\t\tscoreValue = question.answer;\r\n\t\t\t\t\t} else if (question.type === 'rating') {\r\n\t\t\t\t\t\tscoreValue = question.answer * 2; // 转换为10分制\r\n\t\t\t\t\t} else if (question.type === 'single' || question.type === 'boolean') {\r\n\t\t\t\t\t\tsingleChoice = question.answer;\r\n\t\t\t\t\t\t// 如果选项有分值，使用选项分值\r\n\t\t\t\t\t\tconst selectedOption = question.options.find(opt => opt.id === question\r\n\t\t\t\t\t\t.answer);\r\n\t\t\t\t\t\tif (selectedOption && selectedOption.value) {\r\n\t\t\t\t\t\t\tscoreValue = selectedOption.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (question.type === 'multiple') {\r\n\t\t\t\t\t\t// 多选可以计算选中项的平均分\r\n\t\t\t\t\t\tconst selectedOptions = question.options.filter(opt => question.answer\r\n\t\t\t\t\t\t\t.includes(opt.id));\r\n\t\t\t\t\t\tif (selectedOptions.length > 0) {\r\n\t\t\t\t\t\t\tscoreValue = Math.round(selectedOptions.reduce((sum, opt) => sum + (opt\r\n\t\t\t\t\t\t\t\t.value || 0), 0) / selectedOptions.length);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (question.textAnswer) {\r\n\t\t\t\t\t\tfillInBlank = question.textAnswer;\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tquestionnaireId: questionnaire.value.id,\r\n\t\t\t\t\t\tquestionId: question.id,\r\n\t\t\t\t\t\tgradingMethodId: question.gmtype || 1,\r\n\t\t\t\t\t\tscoreValue,\r\n\t\t\t\t\t\tsingleChoice,\r\n\t\t\t\t\t\tfillInBlank,\r\n\t\t\t\t\t\tscoreTime: new Date().toISOString()\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\t\t// 2. 调用提交接口\r\n\t\t\tconst res = await post('/result/submit', submitData);\r\n\r\n\t\t\tif (res.code === 200) {\r\n\t\t\t\t// 3. 提交成功处理\r\n\t\t\t\tquestionnaire.value.status = 'completed';\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"ok\");\r\n\r\n\t\t\t\t// 更新本地存储\r\n\t\t\t\tconst allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\r\n\t\t\t\tconst index = allQuestionnaires.findIndex(q => q.id === questionnaire.value.id);\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tallQuestionnaires[index] = questionnaire.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tallQuestionnaires.push(questionnaire.value);\r\n\t\t\t\t}\r\n\t\t\t\tuni.setStorageSync('questionnaires', JSON.stringify(allQuestionnaires));\r\n\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '问卷提交成功',\r\n\t\t\t\t\ticon: 'success'\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetTimeout(() => uni.navigateBack({\r\n\t\t\t\t\tdelta: 1\r\n\t\t\t\t}), 800);\r\n\t\t\t} else {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: `提交失败: ${res.msg || '未知错误'}`,\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('提交问卷异常:', err);\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '网络错误，提交失败',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tsubmitting.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst resetQuestionnaire = () => {\r\n\t\tuni.showModal({\r\n\t\t\ttitle: '提示',\r\n\t\t\tcontent: '确定重新填写？当前答案将清空',\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.confirm && questionnaire.value) {\r\n\t\t\t\t\tquestionnaire.value.questions.forEach(question => {\r\n\t\t\t\t\t\tquestion.answer = null;\r\n\t\t\t\t\t\tquestion.textAnswer = ''; // 清空文本答案\r\n\t\t\t\t\t\tif (question.type === 'slider') {\r\n\t\t\t\t\t\t\tquestion.answer = question.min || 0;\r\n\t\t\t\t\t\t} else if (question.type === 'rating') {\r\n\t\t\t\t\t\t\tquestion.answer = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tquestionnaire.value.status = 'pending';\r\n\t\t\t\t\tconst allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\r\n\t\t\t\t\tconst index = allQuestionnaires.findIndex(q => q.id === questionnaire.value.id);\r\n\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\tallQuestionnaires[index] = JSON.parse(JSON.stringify(questionnaire.value));\r\n\t\t\t\t\t\tuni.setStorageSync('questionnaires', JSON.stringify(allQuestionnaires));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '已重置，可重新填写',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.questionnaire-detail-page {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tmin-height: 100vh;\r\n\t\tfont-size: 16px;\r\n\t\tpadding-bottom: 140rpx;\r\n\t}\r\n\r\n\t.page-header {\r\n\t\theight: 120rpx;\r\n\t\tbackground-color: #87CEEB;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 0 30rpx;\r\n\t\tposition: relative;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.back-button {\r\n\t\tposition: absolute;\r\n\t\tleft: 30rpx;\r\n\t\twidth: 60rpx;\r\n\t\theight: 60rpx;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.back-icon {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.header-title {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: 500;\r\n\t\ttext-align: center;\r\n\t\tmax-width: calc(100% - 120rpx);\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.questionnaire-content {\r\n\t\tpadding: 30rpx;\r\n\t}\r\n\r\n\t.question-item {\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 16rpx;\r\n\t\tpadding: 30rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tfont-size: 28rpx;\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 15rpx;\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tcolor: #f56c6c;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tcolor: #409eff;\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tcolor: #faad14;\r\n\t}\r\n\r\n\t.question-text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 25rpx;\r\n\t\tline-height: 1.6;\r\n\t}\r\n\r\n\t/* 单选样式 */\r\n\t.options-single {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 15rpx;\r\n\t}\r\n\r\n\t.option-single {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 25rpx 30rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.option-single.selected {\r\n\t\tborder-color: #42b983;\r\n\t\tbackground-color: #f6ffed;\r\n\t}\r\n\r\n\t.radio-marker {\r\n\t\twidth: 30rpx;\r\n\t\theight: 30rpx;\r\n\t\tborder: 2rpx solid #999;\r\n\t\tborder-radius: 50%;\r\n\t\tmargin-right: 20rpx;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.option-single.selected .radio-marker,\r\n\t.option-boolean.selected .radio-marker {\r\n\t\tborder-color: #42b983;\r\n\t}\r\n\r\n\t.radio-dot {\r\n\t\tposition: absolute;\r\n\t\tleft: 50%;\r\n\t\ttop: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 16rpx;\r\n\t\theight: 16rpx;\r\n\t\tbackground-color: #42b983;\r\n\t\tborder-radius: 50%;\r\n\t}\r\n\r\n\t/* 多选样式 */\r\n\t.options-multiple {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 15rpx;\r\n\t}\r\n\r\n\t.option-multiple {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 25rpx 30rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.option-multiple.selected {\r\n\t\tborder-color: #42b983;\r\n\t\tbackground-color: #f6ffed;\r\n\t}\r\n\r\n\t.checkbox-marker {\r\n\t\twidth: 30rpx;\r\n\t\theight: 30rpx;\r\n\t\tborder: 2rpx solid #999;\r\n\t\tborder-radius: 6rpx;\r\n\t\tmargin-right: 20rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.option-multiple.selected .checkbox-marker {\r\n\t\tbackground-color: #42b983;\r\n\t\tborder-color: #42b983;\r\n\t}\r\n\r\n\t.check-icon {\r\n\t\tcolor: white;\r\n\t\tfont-size: 20rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t/* 星级评分样式 */\r\n\t.options-rating {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tpadding: 10rpx 0;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.star-item {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 15rpx 5rpx;\r\n\t\tfont-size: 40rpx;\r\n\t\tcolor: #ccc;\r\n\t\ttransition: all 0.2s;\r\n\t\tcursor: pointer;\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.star-item.selected {\r\n\t\tcolor: #faad14;\r\n\t}\r\n\r\n\t.star-text {\r\n\t\tfont-size: 22rpx;\r\n\t\tmargin-top: 8rpx;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t/* 滑动条样式 */\r\n\t.options-slider {\r\n\t\tpadding: 40rpx 20rpx 20rpx;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.slider-container {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 600rpx;\r\n\t\tpadding: 0 10rpx;\r\n\t\tposition: relative;\r\n\t\theight: 80rpx;\r\n\t}\r\n\r\n\t.slider-tooltip-wrapper {\r\n\t\tposition: absolute;\r\n\t\ttop: -50rpx;\r\n\t\ttransform: translateX(-50%);\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.slider-tooltip {\r\n\t\tbackground-color: #42b983;\r\n\t\tcolor: white;\r\n\t\tpadding: 8rpx 16rpx;\r\n\t\tborder-radius: 8rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\twhite-space: nowrap;\r\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.2);\r\n\t}\r\n\r\n\t.tooltip-arrow {\r\n\t\twidth: 0;\r\n\t\theight: 0;\r\n\t\tborder-left: 10rpx solid transparent;\r\n\t\tborder-right: 10rpx solid transparent;\r\n\t\tborder-top: 10rpx solid #42b983;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\tslider {\r\n\t\twidth: 100%;\r\n\t\theight: 80rpx;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\t.slider-labels {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 600rpx;\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #666;\r\n\t\tmargin-top: 10rpx;\r\n\t\tpadding: 0 10rpx;\r\n\t}\r\n\r\n\t/* 是否题样式（一行显示，均匀分布） */\r\n\t.options-boolean {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\tgap: 20rpx;\r\n\t\tpadding: 10rpx 0;\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.option-boolean {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 25rpx 30rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666;\r\n\t\ttransition: all 0.2s;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.option-boolean.selected {\r\n\t\tborder-color: #42b983;\r\n\t\tbackground-color: #f6ffed;\r\n\t}\r\n\r\n\t/* 开放问题样式 */\r\n\t.options-open {\r\n\t\tpadding: 10rpx 0;\r\n\t}\r\n\r\n\t.open-textarea {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 200rpx;\r\n\t\tpadding: 20rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #333;\r\n\t\tline-height: 1.6;\r\n\t\tresize: vertical;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.bottom-actions {\r\n\t\tposition: fixed;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\tpadding: 20rpx 30rpx;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-top: 1rpx solid #eaeaea;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 99;\r\n\t\tbox-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.submit-btn {\r\n\t\tbackground-color: #42b983;\r\n\t\tcolor: #fff;\r\n\t\tborder: none;\r\n\t\tborder-radius: 60rpx;\r\n\t\twidth: 600rpx;\r\n\t\tpadding: 25rpx 0;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 30rpx;\r\n\t\tbox-shadow: 0 4rpx 10rpx rgba(66, 185, 131, 0.3);\r\n\t}\r\n\r\n\t.submit-btn:disabled {\r\n\t\tbackground-color: #a0d9b9;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.reset-btn {\r\n\t\twidth: 600rpx;\r\n\t\tpadding: 25rpx 0;\r\n\t\ttext-align: center;\r\n\t\tcolor: #42b983;\r\n\t\tborder: 1rpx solid #42b983;\r\n\t\tborder-radius: 60rpx;\r\n\t\tfont-size: 30rpx;\r\n\t\tbackground-color: #fff;\r\n\t}\r\n\r\n\t.loading-state {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\theight: 300rpx;\r\n\t\tcolor: #999;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/PJ-system/uniapp/pages/questionnaire/questionnaireDetail.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}