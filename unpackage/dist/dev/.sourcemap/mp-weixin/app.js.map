{"version":3,"file":"app.js","sources":["App.vue","main.js"],"sourcesContent":["<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\t// 标记：是否已完成首次登录态检查（防止 onShow 重复触发）\n\t\t\t\thasInitedLoginCheck: false,\n\t\t\t\tPAGE_PATHS: {\n\t\t\t\t\tLOGIN: '/pages/login/login', \n\t\t\t\t\tINDEX: '/pages/index/index',\n\t\t\t\t\tMY: '/pages/my/my'\n\t\t\t\t},\n\t\t\t\tAUTHORIZED_PAGES: [] // 初始为空，在 onLaunch 中初始化\n\t\t\t}\n\t\t},\n\t\tonLaunch: function() {\n\t\t\tconsole.log('App Launch');\n\t\t\t// 初始化已授权页面白名单（使用统一路径配置，避免错误）\n\t\t\tthis.AUTHORIZED_PAGES = [\n\t\t\t\tthis.PAGE_PATHS.INDEX,\n\t\t\t\tthis.PAGE_PATHS.MY\n\t\t\t];\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.checkOpenidStatus();\n\t\t\t\tthis.hasInitedLoginCheck = true;\n\t\t\t}, 300);\n\t\t},\n\t\tonShow: function() {\n\t\t\tconsole.log('App Show');\n\t\t\t// 控制 onShow 触发时机：仅在“首次检查未完成”或“从后台切回且登录态可能变化”时执行\n\t\t\tif (!this.hasInitedLoginCheck) {\n\t\t\t\tthis.checkOpenidStatus();\n\t\t\t\tthis.hasInitedLoginCheck = true;\n\t\t\t} else {\n\t\t\t\t// 场景2：从后台切回，仅在“登录态存在变化风险”时检查（如用户可能在其他端登出）\n\t\t\t\t// 优化：可增加“切后台时间判断”，超过 30 分钟才重新检查（避免频繁执行）\n\t\t\t\tconst lastHideTime = this.$options.globalData.lastHideTime || 0;\n\t\t\t\tconst currentTime = Date.now();\n\t\t\t\tif (currentTime - lastHideTime > 30 * 60 * 1000) { // 30分钟\n\t\t\t\t\tthis.checkOpenidStatus();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonHide: function() {\n\t\t\tconsole.log('App Hide');\n\t\t\t// 记录切后台时间（用于 onShow 时判断是否需要重新检查登录态）\n\t\t\tthis.$options.globalData.lastHideTime = Date.now();\n\t\t},\n\t\tmethods: {\n\t\t\t// 封装：检查 openid 登录态 + 控制跳转（核心优化）\n\t\t\tcheckOpenidStatus() {\n\t\t\t\t// 1. 读取 openid（增加异常捕获，避免存储读取失败导致逻辑中断）\n\t\t\t\tlet openid = '';\n\t\t\t\ttry {\n\t\t\t\t\topenid = uni.getStorageSync('openid') || '';\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error('读取 openid 失败：', err);\n\t\t\t\t\topenid = '';\n\t\t\t\t}\n\t\t\t\tconst pages = getCurrentPages();\n\t\t\t\tconst currentPage = pages.length > 0 ? pages[pages.length - 1].route : '';\n\t\t\t\tconst currentPageWithPrefix = currentPage ? `/${currentPage}` : '';\n\t\t\t\tconsole.log('当前页面路径：', currentPageWithPrefix);\n\t\t\t\t// 登录态判断 + 跳转控制（核心逻辑：仅在“当前页不符合权限”时跳转）\n\t\t\t\tif (openid) {\n\t\t\t\t\t// 已登录：判断当前页是否在授权白名单内\n\t\t\t\t\tif (!this.AUTHORIZED_PAGES.includes(currentPageWithPrefix)) {\n\t\t\t\t\t\t// 未在白名单 → 跳首页（避免重复跳转：先判断是否已在首页）\n\t\t\t\t\t\tif (currentPageWithPrefix !== this.PAGE_PATHS.INDEX) {\n\t\t\t\t\t\t\tthis.redirectToPage(this.PAGE_PATHS.INDEX, '首页');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (currentPageWithPrefix !== this.PAGE_PATHS.LOGIN) {\n\t\t\t\t\t\tthis.redirectToPage(this.PAGE_PATHS.LOGIN, '登录页');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 封装：统一跳转方法\n\t\t\tredirectToPage(targetPath, pageName) {\n\t\t\t\t// 先校验目标路径是否存在\n\t\t\t\tconst pagesConfig = uni.getAppBaseInfo().pages || [];\n\t\t\t\tconst isPathValid = pagesConfig.some(page => page.path === targetPath.slice(1)); \n\t\t\t\tif (!isPathValid) {\n\t\t\t\t\tconsole.error(`跳转失败：${pageName}路径${targetPath}未在 pages.json 中注册`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// 执行跳转（用 redirectTo 关闭当前页，防止返回无效页面）\n\t\t\t\tuni.redirectTo({\n\t\t\t\t\turl: targetPath,\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tconsole.log(`跳转${pageName}成功`);\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\t// 特殊处理：若目标是 tabbar 页，redirectTo 会失败，自动切换为 switchTab\n\t\t\t\t\t\tif (err.errMsg.includes('can not redirectTo a tabbar page')) {\n\t\t\t\t\t\t\tconsole.warn(`(${pageName}是 tabbar 页) 自动切换为 switchTab 跳转`);\n\t\t\t\t\t\t\tuni.switchTab({\n\t\t\t\t\t\t\t\turl: targetPath,\n\t\t\t\t\t\t\t\tsuccess: () => console.log(`switchTab 跳转${pageName}成功`),\n\t\t\t\t\t\t\t\tfail: (tabErr) => console.error(`switchTab 跳转${pageName}失败：`, tabErr)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error(`跳转${pageName}失败：`, err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t// 全局数据：存储切后台时间（跨生命周期访问）\n\t\tglobalData: {\n\t\t\tlastHideTime: 0\n\t\t}\n\t}\n</script>\n\n<style>\n\tbody {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n</style>","import App from './App'\nimport { request, get, post, put, del } from '@/utils/request/request.js'\n\n// #ifndef VUE3\nimport Vue from 'vue'\nimport './uni.promisify.adaptor'\n\n// 全局注册基础URL\nVue.prototype.$URL = 'https://jxpj.neau.edu.cn/api/v1'\n\n// 全局注册请求方法\nVue.prototype.$request = request\nVue.prototype.$get = get\nVue.prototype.$post = post\nVue.prototype.$put = put\nVue.prototype.$del = del\n\nVue.config.productionTip = false\nApp.mpType = 'app'\nconst app = new Vue({\n  ...App\n})\napp.$mount()\n// #endif\n\n// #ifdef VUE3\nimport { createSSRApp } from 'vue'\n\nexport function createApp() {\n  const app = createSSRApp(App)\n  \n  app.config.globalProperties.$URL = 'https://jxpj.neau.edu.cn/api/v1'\n  \n  app.config.globalProperties.$request = request\n  app.config.globalProperties.$get = get\n  app.config.globalProperties.$post = post\n  app.config.globalProperties.$put = put\n  app.config.globalProperties.$del = del\n  \n  return {app};\n}\n// #endif\r\n"],"names":["uni","createSSRApp","App","request","get","post","put","del"],"mappings":"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"}