{"version":3,"file":"login.js","sources":["pages/login/login.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vbG9naW4udnVl"],"sourcesContent":["<template>\n  <view class=\"login-container\">\n    <view class=\"form-box\" v-if=\"showLoginForm\">\n      <view class=\"title\">{{ form.teacherId ? '欢迎回来' : '请登录' }}</view>\n      <input \n        class=\"input\" \n        placeholder=\"请输入教工号/学工号(例：Z10005)\" \n        @input=\"form.teacherId = $event.detail.value.trim()\" \n        :value=\"form.teacherId\"\n        :disabled=\"isLoading\"\n      />\n      <input\n        class=\"input\" \n        placeholder=\"请输入姓名\" \n        @input=\"form.name = $event.detail.value.trim()\" \n        :value=\"form.name\"\n        :disabled=\"isLoading\"\n      />\n      <button \n        class=\"main-btn\" \n        @tap=\"handleLogin\"\n        :disabled=\"!form.teacherId || !form.name || isLoading\" \n      >\n        {{ isLoading ? '登录中...' : '请点击登录' }}\n      </button>\n    </view>\n    <view class=\"campus-net-tip\">若无法登录，请检查是否连接校园网</view>\n    <!-- 加载提示（Token校验/登录过程中显示） -->\n    <view class=\"loading-box\" v-if=\"isLoading && !showLoginForm\">\n      <!-- uni-app内置loading组件（兼容多端） -->\n      <uni-loading type=\"spin\" size=\"36\"></uni-loading>\n      <view class=\"loading-text\">正在验证登录状态...</view>\n    </view>\n    <view \n      class=\"msg\" \n      :class=\"msgType === 'error' ? 'error-msg' : 'success-msg'\" \n      v-if=\"msg\"\n    >\n      {{ msg }}\n    </view>\n  </view>\n</template>\n\n<script>\nimport { get, post } from '/src/utils/request/request'\nexport default {\n  data() {\n    console.log('登录页组件初始化 - data数据初始化完成')\n    return {\n      showLoginForm: false,  // 是否显示登录表单\n      form: {\n        teacherId: '',       // 教工号/学工号\n        name: ''             // 姓名\n      },\n      msg: '',               // 提示消息\n      msgType: '',           // 消息类型：error/success\n      isLoading: false,      // 加载状态\n      msgTimer: null         // 消息定时器（防止重复触发）\n    };\n  },\n\n  onLoad() {\n    console.log('登录页onLoad生命周期触发 - 开始执行初始化逻辑')\n    // 一进入页面就执行「自动获取code+请求token」+「本地Token校验」\n    this.initLoginFlow() \n  },\n\n  methods: {\n    showMsg(message, type = 'error') {\n      console.log(`[消息提示] 类型: ${type}, 内容: ${message}`)\n      if (this.msgTimer) {\n        clearTimeout(this.msgTimer)\n      }\n      this.msg = message\n      this.msgType = type\n      this.msgTimer = setTimeout(() => {\n        console.log('消息提示自动关闭')\n        this.msg = ''\n      }, 5000)\n    },\n\n    /**\n     * 先自动调用微信登录获取code，请求后端/loginByCode获取token\n     * 再校验本地Token，决定是否显示登录表单\n     */\n    async initLoginFlow() {\n      console.log('进入initLoginFlow - 启动自动登录流程（获取code+请求token）')\n      this.isLoading = true\n      try {\n        // 自动获取微信登录code（无需用户操作）\n        const wxLoginRes = await new Promise((resolve, reject) => {\n          uni.login({\n            provider: 'weixin', \n            success: (res) => {\n              if (res.code) {\n                console.log('自动获取微信code成功:', res.code)\n                resolve(res.code)\n              } else {\n                reject(new Error(`自动获取code失败: ${res.errMsg}`))\n              }\n            },\n            fail: (err) => {\n              reject(new Error(`微信登录接口调用失败: ${err.errMsg}`))\n            }\n          })\n        })\n\n        // 自动调用后端/loginByCode，传递code获取token\n        console.log('自动调用后端/loginByCode接口，传递code请求token')\n        const autoLoginRes = await post('https://jxpj.neau.edu.cn/api/v1/loginByCode', {\n          weixincode: wxLoginRes, // 传递自动获取的微信code\n        })\n\n        // 若自动获取token成功，先存储到本地\n        if (autoLoginRes?.token) {\n          console.log('自动登录成功，获取到token:', autoLoginRes.token)\n          // 存储自动获取的token（若后端返回openid也一并存储）\n          uni.setStorageSync('autoToken', autoLoginRes.token)\n          this.showMsg('自动获取登录凭证成功', 'success')\n        } else {\n          console.log('自动登录未获取到有效token，需后续用户手动登录')\n          this.showMsg('未获取到相关信息，请手动登录', 'error')\n        }\n\n      } catch (err) {\n        console.error('自动登录流程异常:', err)\n        this.showMsg('自动登录失败，请重试', 'error')\n      } finally {\n        // 无论自动登录成功与否，都校验本地Token（决定是否显示表单）\n        await this.checkLocalToken() \n        this.isLoading = false\n        console.log('自动登录流程完成，进入本地Token校验阶段')\n      }\n    },\n\n    // 校验本地Token：有则直接跳转，无则显示登录表单（逻辑保留，增加兼容性）\n    async checkLocalToken() {\n      console.log('进入checkLocalToken方法 - 开始校验本地登录状态')\n      this.isLoading = true\n      try {\n        // 关键修改2：同时校验「自动登录的token」和「手动登录的token」\n        const localAutoToken = uni.getStorageSync('autoToken') // 自动登录的token\n        const localManualToken = uni.getStorageSync('token')   // 手动登录的token\n        const localUser = uni.getStorageSync('userInfo')\n\n        console.log('从本地存储获取数据:', {\n          hasAutoToken: !!localAutoToken,\n          hasManualToken: !!localManualToken,\n          hasUserInfo: !!localUser\n        })\n\n        // 有任意有效token+完整用户信息 → 直接跳首页\n        if ((localAutoToken || localManualToken) && localUser?.teacherId) {\n          console.log('本地验证通过: 存在有效Token和完整用户信息')\n          this.showMsg('已登录，正在跳转', 'success')\n          setTimeout(() => {\n            uni.setStorageSync('isLogin', true)\n            uni.switchTab({ url: '/pages/index/index' })\n          }, 1000)\n        } else {\n          // 无有效token/用户信息 → 显示登录表单\n          console.log('本地无有效Token，需要用户手动登录')\n          this.showLoginForm = true\n        }\n\n      } catch (err) {\n        console.error('Token校验过程发生异常:', err)\n        this.showMsg('登录状态校验异常，请重试')\n        this.showLoginForm = true\n      } finally {\n        this.isLoading = false\n        console.log('checkLocalToken方法执行完成')\n      }\n    },\n\n    /**\n     * 用户手动登录逻辑（保留原功能，兼容用户手动输入信息的场景）\n     */\n    async handleLogin() {\n      console.log('进入handleLogin方法 - 执行用户手动登录逻辑')\n      this.isLoading = true\n      try {\n        //  校验用户输入（教工号/姓名不能为空）\n        if (!this.form.teacherId.trim() || !this.form.name.trim()) {\n          throw new Error('请输入完整的教工号和姓名')\n        }\n\n        // 获取微信code\n        const wxLoginRes = await new Promise((resolve, reject) => {\n          uni.login({\n            provider: 'weixin',\n            success: (res) => res.code ? resolve(res.code) : reject(new Error(`获取code失败: ${res.errMsg}`)),\n            fail: (err) => reject(new Error(`微信登录接口失败: ${err.errMsg}`))\n          })\n        })\n\n        // 调用后端/loginByCode（传递code+用户信息，获取最终token）\n        const loginRes = await post('https://jxpj.neau.edu.cn/api/v1/login', {\n          weixincode: wxLoginRes,\n          username: this.form.teacherId.trim(), \n         password: this.form.teacherId.trim()        \n        })\n\n        //处理手动登录结果\n        if (loginRes?.token) {\n          console.log('手动登录成功，获取到token:', loginRes.token)\n          // 构造完整用户信息\n          const userInfo = {\n            teacherId: this.form.teacherId.trim(),\n            name: this.form.name.trim(),\n            loginTime: new Date().toLocaleString(),\n            token: loginRes.token,\n          }\n\n          // 存储手动登录的信息（覆盖自动登录的临时token）\n          uni.setStorageSync('token', loginRes.token)\n          uni.setStorageSync('userInfo', userInfo)\n          uni.setStorageSync('isLogin', true)\n\n          this.showMsg('登录成功，即将跳转', 'success')\n          setTimeout(() => {\n            uni.switchTab({ url: '/pages/index/index' })\n          }, 1000)\n\n        } else {\n          const errorMsg = loginRes?.msg || '登录失败，请检查教工号和姓名'\n          throw new Error(errorMsg)\n        }\n\n      } catch (err) {\n        console.error('手动登录异常:', err)\n        this.showMsg(err.message || '登录异常，请重试')\n      } finally {\n        this.isLoading = false\n      }\n    }\n\n  },\n\n  onUnload() {\n    console.log('登录页onUnload生命周期触发')\n    if (this.msgTimer) {\n      clearTimeout(this.msgTimer)\n    }\n  }\n};\n</script>\n<style scoped>\n.login-container {\n  padding: 40rpx 30rpx;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 60rpx;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e6f7ff 100%);\n  min-height: 100vh;\n  width: 100%;\n}\n\n\n.form-box {\n  width: 100%;\n  max-width: 500rpx;\n  display: flex;\n  flex-direction: column;\n  gap: 30rpx;\n  background: #fff;\n  padding: 60rpx 40rpx;\n  border-radius: 20rpx;\n  box-shadow: 0 8rpx 24rpx rgba(0, 123, 255, 0.1);\n}\n\n.loading-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20rpx;\n  color: #409eff;\n  font-size: 28rpx;\n}\n\n/* 标题样式 */\n.title {\n  font-size: 36rpx;\n  font-weight: 600;\n  color: #333;\n  text-align: center;\n  margin-bottom: 20rpx;\n}\n\n/* 提示文本样式 */\n.tip {\n  font-size: 28rpx;\n  color: #666;\n  text-align: center;\n  margin-bottom: 10rpx;\n  line-height: 1.5;\n}\n\n/* 输入框样式 */\n.input {\n  width: 95%;\n  height: 80rpx;\n  border: 1px solid #dcdcdc;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  font-size: 28rpx;\n  transition: all 0.3s ease;\n}\n\n/* 输入框聚焦样式 */\n.input:focus {\n  border-color: #409eff;\n  box-shadow: 0 0 0 2rpx rgba(64, 158, 255, 0.2);\n  outline: none;\n}\n\n/* 输入框禁用样式 */\n.input:disabled {\n  background-color: #f5f5f5;\n  color: #999;\n  cursor: not-allowed;\n}\n\n/* 主按钮样式 */\n.main-btn {\n  height: 90rpx;\n  font-size: 32rpx;\n  border-radius: 45rpx;\n  background: linear-gradient(90deg, #409eff, #66b1ff);\n  color: #fff;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20rpx;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n\n/* 按钮禁用样式 */\n.main-btn[disabled] {\n  background: #c6e2ff;\n  cursor: not-allowed;\n}\n\n/* 消息提示基础样式 */\n.msg {\n  font-size: 26rpx;\n  text-align: center;\n  margin-top: 20rpx;\n  padding: 16rpx 20rpx;\n  border-radius: 10rpx;\n  width: 100%;\n  max-width: 500rpx;\n}\n\n/* 错误消息样式 */\n.error-msg {\n  color: #f56c6c;\n  background: rgba(245, 108, 108, 0.1);\n  border: 1px solid #fde2e2;\n}\n\n/* 成功消息样式 */\n.success-msg {\n  color: #67c23a;\n  background: rgba(103, 194, 58, 0.1);\n  border: 1px solid #e1f3d8;\n}\n\n/* 校园网提示样式 */\n.campus-net-tip {\n  font-size: 30rpx;\n  color: #666;\n  text-align: center;\n  padding: 10rpx 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10rpx;\n  margin-top: 10rpx;\n}\n\n</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/dxuniapp/pages/login/login.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","post"],"mappings":"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"}