{"version":3,"file":"login.js","sources":["pages/login/login.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vbG9naW4udnVl"],"sourcesContent":["<template>\r\n\t<view class=\"login-container\">\r\n\t\t<view class=\"form-box\" v-if=\"showLoginForm\">\r\n\t\t\t<view class=\"title\">{{ form.userID ? '欢迎回来' : '请登录' }}</view>\r\n\t\t\t<input class=\"input\" placeholder=\"请输入教工号/学工号(例：Z10005)\" @input=\"form.userID = $event.detail.value.trim()\"\r\n\t\t\t\t:value=\"form.userID\" :disabled=\"isLoading\" />\r\n\t\t\t<input class=\"input\" placeholder=\"请输入姓名\" @input=\"form.name = $event.detail.value.trim()\" :value=\"form.name\"\r\n\t\t\t\t:disabled=\"isLoading\" />\r\n\t\t\t<button class=\"main-btn\" @tap=\"handleLogin\" :disabled=\"!form.userID || !form.name || isLoading\">\r\n\t\t\t\t{{ isLoading ? '登录中...' : '请点击登录' }}\r\n\t\t\t</button>\r\n\t\t</view>\r\n\t\t<view class=\"campus-net-tip\">若无法登录，请检查是否连接校园网</view>\r\n\t\t<view class=\"loading-box\" v-if=\"isLoading && !showLoginForm\">\r\n\t\t\t<uni-loading type=\"spin\" size=\"36\"></uni-loading>\r\n\t\t\t<view class=\"loading-text\">正在验证登录状态...</view>\r\n\t\t</view>\r\n\t\t<view class=\"msg\" :class=\"msgType === 'error' ? 'error-msg' : 'success-msg'\" v-if=\"msg\">\r\n\t\t\t{{ msg }}\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n<script>\r\n\timport {\r\n\t\tget,\r\n\t\tpost\r\n\t} from '/utils/request/request'\r\n\timport {\r\n\t\tloginMsgUtil\r\n\t} from '/utils/login/msgUtil'\r\n\timport {\r\n\t\tloginFlowUtil\r\n\t} from '/utils/login/flowUtil'\r\n\timport {\r\n\t\tloginStorageUtil\r\n\t} from '/utils/login/storageUtil'\r\n\timport {\r\n\t\tgetInfo\r\n\t} from '/utils/login/getInfo.js'\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\tconsole.log('登录页组件初始化 - data数据初始化完成')\r\n\t\t\treturn {\r\n\t\t\t\tshowLoginForm: false,\r\n\t\t\t\tform: {\r\n\t\t\t\t\tuserID: '',\r\n\t\t\t\t\tname: ''\r\n\t\t\t\t},\r\n\t\t\t\tmsg: '',\r\n\t\t\t\tmsgType: '',\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tmsgTimer: null\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tonLoad() {\r\n\t\t\tconsole.log('登录页onLoad生命周期触发 - 开始执行初始化逻辑')\r\n\t\t\tthis.initLoginFlow()\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\tasync initLoginFlow() {\r\n\t\t\t\tconsole.log('进入initLoginFlow - 启动自动登录流程')\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst wxCode = await loginFlowUtil.getWxCode();\r\n\t\t\t\t\tconsole.log('自动获取微信code成功:', wxCode)\r\n\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tautoLoginRes,\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t} = await loginFlowUtil.autoLogin(wxCode);\r\n\r\n\t\t\t\t\tif (autoLoginRes?.token && userID) {\r\n\t\t\t\t\t\tconsole.log('后端获取成功，成功获取到用户信息', {\r\n\t\t\t\t\t\t\ttoken: autoLoginRes.token\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconst userInfo = loginStorageUtil.buildUserInfo(\r\n\t\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\t\tautoLoginRes.name,\r\n\t\t\t\t\t\t\tautoLoginRes.token,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tloginStorageUtil.saveAutoLoginData(autoLoginRes.token, userInfo);\r\n\t\t\t\t\t\t// 调用 getInfo 获取身份：确保 await 等待完成后再执行后续逻辑\r\n\t\t\t\t\t\tconsole.log('自动登录成功，开始获取用户身份信息')\r\n\t\t\t\t\t\tawait getInfo._handleGetInfoRequest(() => {\r\n\t\t\t\t\t\t\tthis.showLoginForm = true;\r\n\t\t\t\t\t\t\tloginMsgUtil.showMsg(this, '身份验证失败，请重新登录', 'error');\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tloginMsgUtil.showMsg(this, '自动登录成功，正在跳转', 'success');\r\n\t\t\t\t\t} else if (autoLoginRes?.token) {\r\n\t\t\t\t\t\tconsole.log('自动登录仅获取到token，缺少用户信息')\r\n\t\t\t\t\t\tloginStorageUtil.saveAutoLoginData(autoLoginRes.token);\r\n\t\t\t\t\t\tloginMsgUtil.showMsg(this, '需补充用户信息，请手动登录', 'error');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('自动登录失败，未获取到有效token')\r\n\t\t\t\t\t\tloginMsgUtil.showMsg(this, '自动登录失败，请手动登录', 'error');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error('自动登录流程异常:', {\r\n\t\t\t\t\t\terrMsg: err.message,\r\n\t\t\t\t\t\tstack: err.stack\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloginMsgUtil.showMsg(this, `自动登录失败: ${err.message || '网络异常'}`, 'error');\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tawait this.checkLocalToken()\r\n\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t\tconsole.log('自动登录流程结束，已执行本地Token校验')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tasync checkLocalToken() {\r\n\t\t\t\tconsole.log('进入checkLocalToken - 校验本地登录状态')\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tlocalAutoToken,\r\n\t\t\t\t\t\tlocalManualToken,\r\n\t\t\t\t\t\tlocalUser\r\n\t\t\t\t\t} = loginStorageUtil.getLocalLoginData();\r\n\t\t\t\t\tconsole.log('本地存储数据校验:', {\r\n\t\t\t\t\t\thasAutoToken: !!localAutoToken,\r\n\t\t\t\t\t\thasManualToken: !!localManualToken,\r\n\t\t\t\t\t\thasUserInfo: !!localUser,\r\n\t\t\t\t\t\tuserID: localUser?.userID || '无',\r\n\t\t\t\t\t\tuserIdentity: localUser?.userIdentity || '未获取' \r\n\t\t\t\t\t})\r\n\t\t\t\t\tlet completeUser = {\r\n\t\t\t\t\t\t...localUser\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (!completeUser.userIdentity) {\r\n\t\t\t\t\t\tcompleteUser.userIdentity = completeUser.teacherID?.startsWith('Z') ?\r\n\t\t\t\t\t\t\t'教师' :\r\n\t\t\t\t\t\t\t(completeUser.studentID ? '学生' : '未登录');\r\n\t\t\t\t\t\tuni.setStorageSync('userInfo', completeUser);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 判定登录状态：身份有效性判断\r\n\t\t\t\t\tconst hasValidToken = localAutoToken || localManualToken;\r\n\t\t\t\t\tconst hasCompleteUser = completeUser?.userID && completeUser?.userIdentity; \r\n\r\n\t\t\t\t\tif (hasValidToken && hasCompleteUser) {\r\n\t\t\t\t\t\tconsole.log('本地登录状态有效，跳转首页', {\r\n\t\t\t\t\t\t\tuserIdentity: completeUser.userIdentity\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tuni.setStorageSync('isLogin', true)\r\n\t\t\t\t\t\t\tuni.switchTab({\r\n\t\t\t\t\t\t\t\turl: '/pages/index/index'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, 1000)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('本地登录状态无效（缺Token或身份），显示登录表单')\r\n\t\t\t\t\t\tthis.showLoginForm = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error('本地Token校验异常:', {\r\n\t\t\t\t\t\terrMsg: err.message,\r\n\t\t\t\t\t\tstack: err.stack\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloginMsgUtil.showMsg(this, '登录状态校验失败，请重试', 'error');\r\n\t\t\t\t\tthis.showLoginForm = true\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t\tconsole.log('localToken校验流程结束')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tasync handleLogin() {\r\n\t\t\t\tconsole.log('进入handleLogin - 执行手动登录')\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\ttrimmedUserID,\r\n\t\t\t\t\t\ttrimmedName\r\n\t\t\t\t\t} = loginFlowUtil.validateInput(\r\n\t\t\t\t\t\tthis.form.userID,\r\n\t\t\t\t\t\tthis.form.name\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst wxCode = await loginFlowUtil.getWxCode();\r\n\t\t\t\t\tconst loginRes = await loginFlowUtil.manualLogin(wxCode, trimmedUserID);\r\n\r\n\t\t\t\t\tif (loginRes?.token) {\r\n\t\t\t\t\t\tconsole.log('手动登录成功，获取到token:', loginRes.token)\r\n\t\t\t\t\t\tconst userInfo = loginStorageUtil.buildUserInfo(\r\n\t\t\t\t\t\t\ttrimmedUserID,\r\n\t\t\t\t\t\t\ttrimmedName,\r\n\t\t\t\t\t\t\tloginRes.token,\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tloginStorageUtil.saveManualLoginData(loginRes.token, userInfo);\r\n\t\t\t\t\t\t// 调用 getInfo 获取身份：等待完成后再跳转\r\n\t\t\t\t\t\tconsole.log('手动登录成功，开始获取用户身份信息')\r\n\t\t\t\t\t\tawait getInfo._handleGetInfoRequest(() => {\r\n\t\t\t\t\t\t\tthis.showLoginForm = true;\r\n\t\t\t\t\t\t\tloginMsgUtil.showMsg(this, '身份验证失败，请重新登录', 'error');\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tloginMsgUtil.showMsg(this, '登录成功，正在跳转', 'success');\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tuni.switchTab({\r\n\t\t\t\t\t\t\t\turl: '/pages/index/index'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, 1000)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(loginRes?.msg || '登录失败，请检查账号信息是否正确')\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error('手动登录异常:', {\r\n\t\t\t\t\t\terrMsg: err.message,\r\n\t\t\t\t\t\tstack: err.stack\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloginMsgUtil.showMsg(this, err.message || '登录异常，请重试', 'error');\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonUnload() {\r\n\t\t\tconsole.log('登录页onUnload生命周期触发')\r\n\t\t\tloginMsgUtil.clearMsgTimer(this);\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.login-container {\r\n\t\tpadding: 40rpx 30rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tgap: 60rpx;\r\n\t\tbackground: linear-gradient(135deg, #f0f9ff 0%, #e6f7ff 100%);\r\n\t\tmin-height: 100vh;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\r\n\t.form-box {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 30rpx;\r\n\t\tbackground: #fff;\r\n\t\tpadding: 60rpx 40rpx;\r\n\t\tborder-radius: 20rpx;\r\n\t\tbox-shadow: 0 8rpx 24rpx rgba(0, 123, 255, 0.1);\r\n\t}\r\n\r\n\t.loading-box {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 20rpx;\r\n\t\tcolor: #409eff;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n\r\n\t/* 标题样式 */\r\n\t.title {\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: 600;\r\n\t\tcolor: #333;\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\r\n\t/* 提示文本样式 */\r\n\t.tip {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 10rpx;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t/* 输入框样式 */\r\n\t.input {\r\n\t\twidth: 95%;\r\n\t\theight: 80rpx;\r\n\t\tborder: 1px solid #dcdcdc;\r\n\t\tborder-radius: 10rpx;\r\n\t\tpadding: 0 20rpx;\r\n\t\tfont-size: 28rpx;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t/* 输入框聚焦样式 */\r\n\t.input:focus {\r\n\t\tborder-color: #409eff;\r\n\t\tbox-shadow: 0 0 0 2rpx rgba(64, 158, 255, 0.2);\r\n\t\toutline: none;\r\n\t}\r\n\r\n\t/* 输入框禁用样式 */\r\n\t.input:disabled {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tcolor: #999;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 主按钮样式 */\r\n\t.main-btn {\r\n\t\theight: 90rpx;\r\n\t\tfont-size: 32rpx;\r\n\t\tborder-radius: 45rpx;\r\n\t\tbackground: linear-gradient(90deg, #409eff, #66b1ff);\r\n\t\tcolor: #fff;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tmargin-top: 20rpx;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background 0.3s ease;\r\n\t}\r\n\r\n\t/* 按钮禁用样式 */\r\n\t.main-btn[disabled] {\r\n\t\tbackground: #c6e2ff;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 消息提示基础样式 */\r\n\t.msg {\r\n\t\tfont-size: 26rpx;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 20rpx;\r\n\t\tpadding: 16rpx 20rpx;\r\n\t\tborder-radius: 10rpx;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500rpx;\r\n\t\t/* 补充完整：原代码截断为\"max-width: 5\"，此处修正为500rpx，与表单宽度一致 */\r\n\t}\r\n\r\n\t/* 错误消息样式 */\r\n\t.error-msg {\r\n\t\tcolor: #f56c6c;\r\n\t\tbackground: rgba(245, 108, 108, 0.1);\r\n\t\tborder: 1px solid #fde2e2;\r\n\t}\r\n\r\n\t/* 成功消息样式 */\r\n\t.success-msg {\r\n\t\tcolor: #67c23a;\r\n\t\tbackground: rgba(103, 194, 58, 0.1);\r\n\t\tborder: 1px solid #e1f3d8;\r\n\t}\r\n\r\n\t/* 校园网提示样式 */\r\n\t.campus-net-tip {\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tpadding: 10rpx 0;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 10rpx;\r\n\t\tmargin-top: 10rpx;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/Uniapp/pages/login/login.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","loginFlowUtil","loginStorageUtil","getInfo","loginMsgUtil"],"mappings":";;;;;;AAwCC,MAAK,YAAU;AAAA,EACd,OAAO;AACNA,kBAAAA,MAAY,MAAA,OAAA,+BAAA,wBAAwB;AACpC,WAAO;AAAA,MACN,eAAe;AAAA,MACf,MAAM;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,MACN;AAAA,MACD,KAAK;AAAA,MACL,SAAS;AAAA,MACT,WAAW;AAAA,MACX,UAAU;AAAA;EAEX;AAAA,EAED,SAAS;AACRA,kBAAAA,MAAY,MAAA,OAAA,+BAAA,6BAA6B;AACzC,SAAK,cAAc;AAAA,EACnB;AAAA,EAED,SAAS;AAAA,IACR,MAAM,gBAAgB;AACrBA,oBAAAA,MAAA,MAAA,OAAA,+BAAY,4BAA4B;AACxC,WAAK,YAAY;AACjB,UAAI;AACH,cAAM,SAAS,MAAMC,mCAAc;AACnCD,sBAAAA,MAAY,MAAA,OAAA,+BAAA,iBAAiB,MAAM;AAEnC,cAAM;AAAA,UACL;AAAA,UACA;AAAA,QACD,IAAI,MAAMC,qBAAa,cAAC,UAAU,MAAM;AAExC,aAAI,6CAAc,UAAS,QAAQ;AAClCD,wBAAAA,MAAY,MAAA,OAAA,+BAAA,oBAAoB;AAAA,YAC/B,OAAO,aAAa;AAAA,WACpB;AACD,gBAAM,WAAWE,wBAAAA,iBAAiB;AAAA,YACjC;AAAA,YACA,aAAa;AAAA,YACb,aAAa;AAAA;AAEdA,kCAAAA,iBAAiB,kBAAkB,aAAa,OAAO,QAAQ;AAE/DF,wBAAAA,MAAY,MAAA,OAAA,+BAAA,mBAAmB;AAC/B,gBAAMG,oBAAAA,QAAQ,sBAAsB,MAAM;AACzC,iBAAK,gBAAgB;AACrBC,gCAAAA,aAAa,QAAQ,MAAM,gBAAgB,OAAO;AAAA,UACnD,CAAC;AAEDA,8BAAAA,aAAa,QAAQ,MAAM,eAAe,SAAS;AAAA,mBACzC,6CAAc,OAAO;AAC/BJ,wBAAAA,MAAA,MAAA,OAAA,+BAAY,sBAAsB;AAClCE,kCAAAA,iBAAiB,kBAAkB,aAAa,KAAK;AACrDE,8BAAAA,aAAa,QAAQ,MAAM,iBAAiB,OAAO;AAAA,eAC7C;AACNJ,wBAAAA,MAAY,MAAA,OAAA,+BAAA,oBAAoB;AAChCI,8BAAAA,aAAa,QAAQ,MAAM,gBAAgB,OAAO;AAAA,QACnD;AAAA,MAEC,SAAO,KAAK;AACbJ,sBAAAA,MAAc,MAAA,SAAA,gCAAA,aAAa;AAAA,UAC1B,QAAQ,IAAI;AAAA,UACZ,OAAO,IAAI;AAAA,SACX;AACDI,yCAAa,QAAQ,MAAM,WAAW,IAAI,WAAW,MAAM,IAAI,OAAO;AAAA,MACvE,UAAU;AACT,cAAM,KAAK,gBAAgB;AAC3B,aAAK,YAAY;AACjBJ,sBAAAA,MAAY,MAAA,OAAA,gCAAA,uBAAuB;AAAA,MACpC;AAAA,IACA;AAAA,IAED,MAAM,kBAAkB;;AACvBA,oBAAAA,MAAA,MAAA,OAAA,gCAAY,8BAA8B;AAC1C,WAAK,YAAY;AACjB,UAAI;AACH,cAAM;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QACD,IAAIE,wBAAAA,iBAAiB;AACrBF,sBAAAA,MAAY,MAAA,OAAA,gCAAA,aAAa;AAAA,UACxB,cAAc,CAAC,CAAC;AAAA,UAChB,gBAAgB,CAAC,CAAC;AAAA,UAClB,aAAa,CAAC,CAAC;AAAA,UACf,SAAQ,uCAAW,WAAU;AAAA,UAC7B,eAAc,uCAAW,iBAAgB;AAAA,SACzC;AACD,YAAI,eAAe;AAAA,UAClB,GAAG;AAAA;AAEJ,YAAI,CAAC,aAAa,cAAc;AAC/B,uBAAa,iBAAe,kBAAa,cAAb,mBAAwB,WAAW,QAC9D,OACC,aAAa,YAAY,OAAO;AAClCA,wBAAAA,MAAI,eAAe,YAAY,YAAY;AAAA,QAC5C;AAEA,cAAM,gBAAgB,kBAAkB;AACxC,cAAM,mBAAkB,6CAAc,YAAU,6CAAc;AAE9D,YAAI,iBAAiB,iBAAiB;AACrCA,wBAAAA,mDAAY,iBAAiB;AAAA,YAC5B,cAAc,aAAa;AAAA,WAC3B;AACD,qBAAW,MAAM;AAChBA,gCAAI,eAAe,WAAW,IAAI;AAClCA,0BAAAA,MAAI,UAAU;AAAA,cACb,KAAK;AAAA,aACL;AAAA,UACD,GAAE,GAAI;AAAA,eACD;AACNA,wBAAAA,MAAY,MAAA,OAAA,gCAAA,4BAA4B;AACxC,eAAK,gBAAgB;AAAA,QACtB;AAAA,MAEC,SAAO,KAAK;AACbA,sBAAAA,qDAAc,gBAAgB;AAAA,UAC7B,QAAQ,IAAI;AAAA,UACZ,OAAO,IAAI;AAAA,SACX;AACDI,4BAAAA,aAAa,QAAQ,MAAM,gBAAgB,OAAO;AAClD,aAAK,gBAAgB;AAAA,MACtB,UAAU;AACT,aAAK,YAAY;AACjBJ,sBAAAA,MAAA,MAAA,OAAA,gCAAY,kBAAkB;AAAA,MAC/B;AAAA,IACA;AAAA,IAED,MAAM,cAAc;AACnBA,oBAAAA,MAAA,MAAA,OAAA,gCAAY,wBAAwB;AACpC,WAAK,YAAY;AACjB,UAAI;AACH,cAAM;AAAA,UACL;AAAA,UACA;AAAA,QACC,IAAEC,qBAAa,cAAC;AAAA,UACjB,KAAK,KAAK;AAAA,UACV,KAAK,KAAK;AAAA;AAGX,cAAM,SAAS,MAAMA,mCAAc;AACnC,cAAM,WAAW,MAAMA,qBAAa,cAAC,YAAY,QAAQ,aAAa;AAEtE,YAAI,qCAAU,OAAO;AACpBD,wBAAA,MAAA,MAAA,OAAA,gCAAY,oBAAoB,SAAS,KAAK;AAC9C,gBAAM,WAAWE,wBAAAA,iBAAiB;AAAA,YACjC;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT;AAAA;AAEDA,kCAAAA,iBAAiB,oBAAoB,SAAS,OAAO,QAAQ;AAE7DF,wBAAAA,MAAY,MAAA,OAAA,gCAAA,mBAAmB;AAC/B,gBAAMG,oBAAAA,QAAQ,sBAAsB,MAAM;AACzC,iBAAK,gBAAgB;AACrBC,gCAAAA,aAAa,QAAQ,MAAM,gBAAgB,OAAO;AAAA,UACnD,CAAC;AAEDA,8BAAAA,aAAa,QAAQ,MAAM,aAAa,SAAS;AACjD,qBAAW,MAAM;AAChBJ,0BAAAA,MAAI,UAAU;AAAA,cACb,KAAK;AAAA,aACL;AAAA,UACD,GAAE,GAAI;AAAA,eACD;AACN,gBAAM,IAAI,OAAM,qCAAU,QAAO,kBAAkB;AAAA,QACpD;AAAA,MAEC,SAAO,KAAK;AACbA,sBAAAA,MAAA,MAAA,SAAA,gCAAc,WAAW;AAAA,UACxB,QAAQ,IAAI;AAAA,UACZ,OAAO,IAAI;AAAA,SACX;AACDI,4BAAY,aAAC,QAAQ,MAAM,IAAI,WAAW,YAAY,OAAO;AAAA,MAC9D,UAAU;AACT,aAAK,YAAY;AAAA,MAClB;AAAA,IACD;AAAA,EACA;AAAA,EAED,WAAW;AACVJ,kBAAAA,MAAY,MAAA,OAAA,gCAAA,mBAAmB;AAC/BI,qCAAa,cAAc,IAAI;AAAA,EAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOF,GAAG,WAAW,eAAe;"}