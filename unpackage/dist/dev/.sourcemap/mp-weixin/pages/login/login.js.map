{"version":3,"file":"login.js","sources":["pages/login/login.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vbG9naW4udnVl"],"sourcesContent":["<template>\r\n\t<view class=\"login-container\">\r\n\t\t<view class=\"form-box\" v-if=\"showLoginForm\">\r\n\t\t\t<view class=\"title\">{{ form.teacherId ? '欢迎回来' : '请登录' }}</view>\r\n\t\t\t<input class=\"input\" placeholder=\"请输入教工号/学工号(例：Z10005)\" @input=\"form.teacherId = $event.detail.value.trim()\"\r\n\t\t\t\t:value=\"form.teacherId\" :disabled=\"isLoading\" />\r\n\t\t\t<input class=\"input\" placeholder=\"请输入姓名\" @input=\"form.name = $event.detail.value.trim()\" :value=\"form.name\"\r\n\t\t\t\t:disabled=\"isLoading\" />\r\n\t\t\t<button class=\"main-btn\" @tap=\"handleLogin\" :disabled=\"!form.teacherId || !form.name || isLoading\">\r\n\t\t\t\t{{ isLoading ? '登录中...' : '请点击登录' }}\r\n\t\t\t</button>\r\n\t\t</view>\r\n\t\t<view class=\"campus-net-tip\">若无法登录，请检查是否连接校园网</view>\r\n\t\t<!-- 加载提示（Token校验/登录过程中显示） -->\r\n\t\t<view class=\"loading-box\" v-if=\"isLoading && !showLoginForm\">\r\n\t\t\t<!-- uni-app内置loading组件（兼容多端） -->\r\n\t\t\t<uni-loading type=\"spin\" size=\"36\"></uni-loading>\r\n\t\t\t<view class=\"loading-text\">正在验证登录状态...</view>\r\n\t\t</view>\r\n\t\t<view class=\"msg\" :class=\"msgType === 'error' ? 'error-msg' : 'success-msg'\" v-if=\"msg\">\r\n\t\t\t{{ msg }}\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tget,\r\n\t\tpost\r\n\t} from '/src/utils/request/request'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\tconsole.log('登录页组件初始化 - data数据初始化完成')\r\n\t\t\treturn {\r\n\t\t\t\tshowLoginForm: false, // 是否显示登录表单\r\n\t\t\t\tform: {\r\n\t\t\t\t\tteacherId: '', // 教工号/学工号\r\n\t\t\t\t\tname: '' // 姓名\r\n\t\t\t\t},\r\n\t\t\t\tmsg: '', // 提示消息\r\n\t\t\t\tmsgType: '', // 消息类型：error/success\r\n\t\t\t\tisLoading: false, // 加载状态\r\n\t\t\t\tmsgTimer: null // 消息定时器（防止重复触发）\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tonLoad() {\r\n\t\t\tconsole.log('登录页onLoad生命周期触发 - 开始执行初始化逻辑')\r\n\t\t\t// 一进入页面就执行「自动获取code+请求token」+「本地Token校验」\r\n\t\t\tthis.initLoginFlow()\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\tshowMsg(message, type = 'error') {\r\n\t\t\t\tconsole.log(`[消息提示] 类型: ${type}, 内容: ${message}`)\r\n\t\t\t\tif (this.msgTimer) {\r\n\t\t\t\t\tclearTimeout(this.msgTimer)\r\n\t\t\t\t}\r\n\t\t\t\tthis.msg = message\r\n\t\t\t\tthis.msgType = type\r\n\t\t\t\tthis.msgTimer = setTimeout(() => {\r\n\t\t\t\t\tconsole.log('消息提示自动关闭')\r\n\t\t\t\t\tthis.msg = ''\r\n\t\t\t\t}, 5000)\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 先自动调用微信登录获取code，请求后端/loginByCode获取token\r\n\t\t\t * 再校验本地Token，决定是否显示登录表单\r\n\t\t\t */\r\n\t\t\tasync initLoginFlow() {\r\n\t\t\t\tconsole.log('进入initLoginFlow - 启动自动登录流程（获取code+请求token）')\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 自动获取微信登录code（无需用户操作）\r\n\t\t\t\t\tconst wxLoginRes = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tuni.login({\r\n\t\t\t\t\t\t\tprovider: 'weixin',\r\n\t\t\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t\t\tif (res.code) {\r\n\t\t\t\t\t\t\t\t\tconsole.log('自动获取微信code成功:', res.code)\r\n\t\t\t\t\t\t\t\t\tresolve(res.code)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treject(new Error(`自动获取code失败: ${res.errMsg}`))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\t\t\treject(new Error(`微信登录接口调用失败: ${err.errMsg}`))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// 自动调用后端/loginByCode，传递code获取token\r\n\t\t\t\t\tconsole.log('自动调用后端/loginByCode接口，传递code请求token')\r\n\t\t\t\t\t// const autoLoginRes = await post('https://jxpj.neau.edu.cn/api/v1/loginByCode', {\r\n\t\t\t\t\tconst autoLoginRes = await post('http://localhost:8080/loginByCode', {\r\n\t\t\t\t\t\tweixincode: wxLoginRes, // 传递自动获取的微信code\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// 若自动获取token成功，先存储到本地\r\n\t\t\t\t\tif (autoLoginRes?.token) {\r\n\t\t\t\t\t\tconsole.log('自动登录成功，获取到token:', autoLoginRes.token)\r\n\t\t\t\t\t\t// 存储自动获取的token（若后端返回openid也一并存储）\r\n\t\t\t\t\t\tuni.setStorageSync('autoToken', autoLoginRes.token)\r\n\t\t\t\t\t\tthis.showMsg('自动获取登录凭证成功', 'success')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('自动登录未获取到有效token，需后续用户手动登录')\r\n\t\t\t\t\t\tthis.showMsg('未获取到相关信息，请手动登录', 'error')\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error('自动登录流程异常:', err)\r\n\t\t\t\t\tthis.showMsg('自动登录失败，请重试', 'error')\r\n\t\t\t\t} finally {\r\n\t\t\t\t\t// 无论自动登录成功与否，都校验本地Token（决定是否显示表单）\r\n\t\t\t\t\tawait this.checkLocalToken()\r\n\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t\tconsole.log('自动登录流程完成，进入本地Token校验阶段')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 校验本地Token：有则直接跳转，无则显示登录表单（逻辑保留，增加兼容性）\r\n\t\t\tasync checkLocalToken() {\r\n\t\t\t\tconsole.log('进入checkLocalToken方法 - 开始校验本地登录状态')\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 关键修改2：同时校验「自动登录的token」和「手动登录的token」\r\n\t\t\t\t\tconst localAutoToken = uni.getStorageSync('autoToken') // 自动登录的token\r\n\t\t\t\t\tconst localManualToken = uni.getStorageSync('token') // 手动登录的token\r\n\t\t\t\t\tconst localUser = uni.getStorageSync('userInfo')\r\n\r\n\t\t\t\t\tconsole.log('从本地存储获取数据:', {\r\n\t\t\t\t\t\thasAutoToken: !!localAutoToken,\r\n\t\t\t\t\t\thasManualToken: !!localManualToken,\r\n\t\t\t\t\t\thasUserInfo: !!localUser\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// 有任意有效token+完整用户信息 → 直接跳首页\r\n\t\t\t\t\tif ((localAutoToken || localManualToken) && localUser?.teacherId) {\r\n\t\t\t\t\t\tconsole.log('本地验证通过: 存在有效Token和完整用户信息')\r\n\t\t\t\t\t\tthis.showMsg('已登录，正在跳转', 'success')\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tuni.setStorageSync('isLogin', true)\r\n\t\t\t\t\t\t\tuni.switchTab({\r\n\t\t\t\t\t\t\t\turl: '/pages/index/index'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, 1000)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 无有效token/用户信息 → 显示登录表单\r\n\t\t\t\t\t\tconsole.log('本地无有效Token，需要用户手动登录')\r\n\t\t\t\t\t\tthis.showLoginForm = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error('Token校验过程发生异常:', err)\r\n\t\t\t\t\tthis.showMsg('登录状态校验异常，请重试')\r\n\t\t\t\t\tthis.showLoginForm = true\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t\tconsole.log('checkLocalToken方法执行完成')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 用户手动登录逻辑（保留原功能，兼容用户手动输入信息的场景）\r\n\t\t\t */\r\n\t\t\tasync handleLogin() {\r\n\t\t\t\tconsole.log('进入handleLogin方法 - 执行用户手动登录逻辑')\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\ttry {\r\n\t\t\t\t\t//  校验用户输入（教工号/姓名不能为空）\r\n\t\t\t\t\tif (!this.form.teacherId.trim() || !this.form.name.trim()) {\r\n\t\t\t\t\t\tthrow new Error('请输入完整的教工号和姓名')\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 获取微信code\r\n\t\t\t\t\tconst wxLoginRes = await new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tuni.login({\r\n\t\t\t\t\t\t\tprovider: 'weixin',\r\n\t\t\t\t\t\t\tsuccess: (res) => res.code ? resolve(res.code) : reject(new Error(\r\n\t\t\t\t\t\t\t\t`获取code失败: ${res.errMsg}`)),\r\n\t\t\t\t\t\t\tfail: (err) => reject(new Error(`微信登录接口失败: ${err.errMsg}`))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// 调用后端/loginByCode（传递code+用户信息，获取最终token）\r\n\t\t\t\t\t// const loginRes = await post('https://jxpj.neau.edu.cn/api/v1/login', {\r\n\t\t\t\t\tconst loginRes = await post('http://127.0.0.1:8080/login', {\r\n\t\t\t\t\t\tweixincode: wxLoginRes,\r\n\t\t\t\t\t\tusername: this.form.teacherId.trim(),\r\n\t\t\t\t\t\tpassword: this.form.teacherId.trim()\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t//处理手动登录结果\r\n\t\t\t\t\tif (loginRes?.token) {\r\n\t\t\t\t\t\tconsole.log('手动登录成功，获取到token:', loginRes.token)\r\n\t\t\t\t\t\t// 构造完整用户信息\r\n\t\t\t\t\t\tconst userInfo = {\r\n\t\t\t\t\t\t\tteacherId: this.form.teacherId.trim(),\r\n\t\t\t\t\t\t\tname: this.form.name.trim(),\r\n\t\t\t\t\t\t\tloginTime: new Date().toLocaleString(),\r\n\t\t\t\t\t\t\ttoken: loginRes.token,\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// 存储手动登录的信息（覆盖自动登录的临时token）\r\n\t\t\t\t\t\tuni.setStorageSync('token', loginRes.token)\r\n\t\t\t\t\t\tuni.setStorageSync('userInfo', userInfo)\r\n\t\t\t\t\t\tuni.setStorageSync('isLogin', true)\r\n\r\n\t\t\t\t\t\tthis.showMsg('登录成功，即将跳转', 'success')\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tuni.switchTab({\r\n\t\t\t\t\t\t\t\turl: '/pages/index/index'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, 1000)\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst errorMsg = loginRes?.msg || '登录失败，请检查教工号和姓名'\r\n\t\t\t\t\t\tthrow new Error(errorMsg)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error('手动登录异常:', err)\r\n\t\t\t\t\tthis.showMsg(err.message || '登录异常，请重试')\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonUnload() {\r\n\t\t\tconsole.log('登录页onUnload生命周期触发')\r\n\t\t\tif (this.msgTimer) {\r\n\t\t\t\tclearTimeout(this.msgTimer)\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n<style scoped>\r\n\t.login-container {\r\n\t\tpadding: 40rpx 30rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tgap: 60rpx;\r\n\t\tbackground: linear-gradient(135deg, #f0f9ff 0%, #e6f7ff 100%);\r\n\t\tmin-height: 100vh;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\r\n\t.form-box {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 30rpx;\r\n\t\tbackground: #fff;\r\n\t\tpadding: 60rpx 40rpx;\r\n\t\tborder-radius: 20rpx;\r\n\t\tbox-shadow: 0 8rpx 24rpx rgba(0, 123, 255, 0.1);\r\n\t}\r\n\r\n\t.loading-box {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgap: 20rpx;\r\n\t\tcolor: #409eff;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n\r\n\t/* 标题样式 */\r\n\t.title {\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: 600;\r\n\t\tcolor: #333;\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\r\n\t/* 提示文本样式 */\r\n\t.tip {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 10rpx;\r\n\t\tline-height: 1.5;\r\n\t}\r\n\r\n\t/* 输入框样式 */\r\n\t.input {\r\n\t\twidth: 95%;\r\n\t\theight: 80rpx;\r\n\t\tborder: 1px solid #dcdcdc;\r\n\t\tborder-radius: 10rpx;\r\n\t\tpadding: 0 20rpx;\r\n\t\tfont-size: 28rpx;\r\n\t\ttransition: all 0.3s ease;\r\n\t}\r\n\r\n\t/* 输入框聚焦样式 */\r\n\t.input:focus {\r\n\t\tborder-color: #409eff;\r\n\t\tbox-shadow: 0 0 0 2rpx rgba(64, 158, 255, 0.2);\r\n\t\toutline: none;\r\n\t}\r\n\r\n\t/* 输入框禁用样式 */\r\n\t.input:disabled {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tcolor: #999;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 主按钮样式 */\r\n\t.main-btn {\r\n\t\theight: 90rpx;\r\n\t\tfont-size: 32rpx;\r\n\t\tborder-radius: 45rpx;\r\n\t\tbackground: linear-gradient(90deg, #409eff, #66b1ff);\r\n\t\tcolor: #fff;\r\n\t\tborder: none;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tmargin-top: 20rpx;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background 0.3s ease;\r\n\t}\r\n\r\n\t/* 按钮禁用样式 */\r\n\t.main-btn[disabled] {\r\n\t\tbackground: #c6e2ff;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t/* 消息提示基础样式 */\r\n\t.msg {\r\n\t\tfont-size: 26rpx;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 20rpx;\r\n\t\tpadding: 16rpx 20rpx;\r\n\t\tborder-radius: 10rpx;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500rpx;\r\n\t}\r\n\r\n\t/* 错误消息样式 */\r\n\t.error-msg {\r\n\t\tcolor: #f56c6c;\r\n\t\tbackground: rgba(245, 108, 108, 0.1);\r\n\t\tborder: 1px solid #fde2e2;\r\n\t}\r\n\r\n\t/* 成功消息样式 */\r\n\t.success-msg {\r\n\t\tcolor: #67c23a;\r\n\t\tbackground: rgba(103, 194, 58, 0.1);\r\n\t\tborder: 1px solid #e1f3d8;\r\n\t}\r\n\r\n\t/* 校园网提示样式 */\r\n\t.campus-net-tip {\r\n\t\tfont-size: 30rpx;\r\n\t\tcolor: #666;\r\n\t\ttext-align: center;\r\n\t\tpadding: 10rpx 0;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgap: 10rpx;\r\n\t\tmargin-top: 10rpx;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/PJ-system/uniapp/pages/login/login.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","post"],"mappings":"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"}