{"version":3,"file":"login.js","sources":["pages/login/login.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vbG9naW4udnVl"],"sourcesContent":["<template>\n\t<view class=\"login-container\">\n\t\t<view class=\"form-box\" v-if=\"showLoginForm\">\n\t\t\t<view class=\"title\">{{ form.userID ? '欢迎回来' : '请登录' }}</view>\n\t\t\t<input class=\"input\" placeholder=\"请输入教工号/学工号(例：Z10005)\" @input=\"form.userID = $event.detail.value.trim()\"\n\t\t\t\t:value=\"form.userID\" :disabled=\"isLoading\" />\n\t\t\t<input class=\"input\" placeholder=\"请输入姓名\" @input=\"form.name = $event.detail.value.trim()\" :value=\"form.name\"\n\t\t\t\t:disabled=\"isLoading\" />\n\t\t\t<button class=\"main-btn\" @tap=\"handleLogin\" :disabled=\"!form.userID || !form.name || isLoading\">\n\t\t\t\t{{ isLoading ? '登录中...' : '请点击登录' }}\n\t\t\t</button>\n\t\t</view>\n\t\t<view class=\"campus-net-tip\">若无法登录，请检查是否连接校园网</view>\n\t\t<view class=\"loading-box\" v-if=\"isLoading && !showLoginForm\">\n\t\t\t<uni-loading type=\"spin\" size=\"36\"></uni-loading>\n\t\t\t<view class=\"loading-text\">正在验证登录状态...</view>\n\t\t</view>\n\t\t<view class=\"msg\" :class=\"msgType === 'error' ? 'error-msg' : 'success-msg'\" v-if=\"msg\">\n\t\t\t{{ msg }}\n\t\t</view>\n\t</view>\n</template>\n<script>\n// 导入拆分后的工具\nimport { get, post } from '/utils/request/request'\nimport { loginMsgUtil } from '/utils/login/msgUtil'\nimport { loginFlowUtil } from '/utils/login/flowUtil'\nimport { loginStorageUtil } from '/utils/login/storageUtil'\n\nexport default {\n  data() {\n    console.log('登录页组件初始化 - data数据初始化完成')\n    return {\n      showLoginForm: false, // 是否显示登录表单\n      form: {\n        userID: '', \n        name: ''   \n      },\n      msg: '',          // 提示消息\n      msgType: '',      // 消息类型：error/success\n      isLoading: false, // 加载状态\n      msgTimer: null    // 消息定时器（防止重复触发）\n    };\n  },\n\n  onLoad() {\n    console.log('登录页onLoad生命周期触发 - 开始执行初始化逻辑')\n    this.initLoginFlow() \n  },\n\n  methods: {\n    async initLoginFlow() {\n      console.log('进入initLoginFlow - 启动自动登录流程')\n      this.isLoading = true\n      try { \n        //  获取微信code\n        const wxCode = await loginFlowUtil.getWxCode();\n        console.log('自动获取微信code成功:', wxCode)\n\n        // 调用自动登录接口\n        const { autoLoginRes, userID } = await loginFlowUtil.autoLogin(wxCode);\n\n        //  处理自动登录结果\n        if (autoLoginRes?.token && userID) {\n          console.log('后端获取成功，成功获取到用户信息', { token: autoLoginRes.token })\n          const userInfo = loginStorageUtil.buildUserInfo(\n            userID,\n            autoLoginRes.name,\n            autoLoginRes.token\n          );\n          // 存储自动登录数据\n          loginStorageUtil.saveAutoLoginData(autoLoginRes.token, userInfo);\n          // 显示成功消息\n          loginMsgUtil.showMsg(this, '自动登录成功，正在跳转', 'success');\n        } else if (autoLoginRes?.token) {\n          console.log('自动登录仅获取到token，缺少用户信息')\n          loginStorageUtil.saveAutoLoginData(autoLoginRes.token);\n          loginMsgUtil.showMsg(this, '需补充用户信息，请手动登录', 'error');\n        } else {\n          console.log('自动登录失败，未获取到有效token')\n          loginMsgUtil.showMsg(this, '自动登录失败，请手动登录', 'error');\n        }\n\n      } catch (err) {\n        console.error('自动登录流程异常:', err)\n        loginMsgUtil.showMsg(this, `自动登录失败: ${err.message || '网络异常'}`, 'error');\n      } finally {\n        // 无论自动登录结果如何，都校验本地状态\n        await this.checkLocalToken()\n        this.isLoading = false\n        console.log('自动登录流程结束，已执行本地Token校验')\n      }\n    },\n    async checkLocalToken() {\n      console.log('进入checkLocalToken - 校验本地登录状态')\n      this.isLoading = true\n      try {\n        // 获取本地登录数据\n        const { localAutoToken, localManualToken, localUser } = loginStorageUtil.getLocalLoginData();\n        console.log('本地存储数据校验:', {\n          hasAutoToken: !!localAutoToken,\n          hasManualToken: !!localManualToken,\n          hasUserInfo: !!localUser,\n          userID: localUser?.userID || '无'\n        })\n\n        // 补全用户身份字段\n        let completeUser = loginStorageUtil.completeUserIdentity(localUser);\n        if (completeUser !== localUser) {\n          uni.setStorageSync('userInfo', completeUser); \n        }\n\n        //  判定登录状态：有效则跳转首页\n        const hasValidToken = localAutoToken || localManualToken;\n        const hasCompleteUser = completeUser?.userID && (completeUser.teacherID || completeUser.studentID);\n        \n        if (hasValidToken && hasCompleteUser) {\n          console.log('本地登录状态有效，跳转首页')\n          setTimeout(() => {\n            uni.setStorageSync('isLogin', true)\n            uni.switchTab({ url: '/pages/index/index' })\n          }, 1000)\n        } else {\n          console.log('本地登录状态无效，显示登录表单')\n          this.showLoginForm = true\n        }\n\n      } catch (err) {\n        console.error('本地Token校验异常:', err)\n        loginMsgUtil.showMsg(this, '登录状态校验失败，请重试', 'error');\n        this.showLoginForm = true\n      } finally {\n        this.isLoading = false\n        console.log('localToken校验流程结束')\n      }\n    },\n    async handleLogin() {\n      console.log('进入handleLogin - 执行手动登录')\n      this.isLoading = true\n      try {\n        //  校验输入格式\n        const { trimmedUserID, trimmedName } = loginFlowUtil.validateInput(\n          this.form.userID,\n          this.form.name\n        );\n\n        // 获取微信code\n        const wxCode = await loginFlowUtil.getWxCode();\n\n        // 调用手动登录接口\n        const loginRes = await loginFlowUtil.manualLogin(wxCode, trimmedUserID);\n\n        // 处理登录结果\n        if (loginRes?.token) {\n          console.log('手动登录成功，获取到token:', loginRes.token)\n          const userInfo = loginStorageUtil.buildUserInfo(\n            trimmedUserID,\n            trimmedName,\n            loginRes.token\n          );\n          // 存储手动登录数据\n          loginStorageUtil.saveManualLoginData(loginRes.token, userInfo);\n          // 显示成功消息并跳转\n          loginMsgUtil.showMsg(this, '登录成功，正在跳转', 'success');\n          setTimeout(() => {\n            uni.switchTab({ url: '/pages/index/index' })\n          }, 1000)\n        } else {\n          throw new Error(loginRes?.msg || '登录失败，请检查账号信息是否正确')\n        }\n\n      } catch (err) {\n        console.error('手动登录异常:', err)\n        loginMsgUtil.showMsg(this, err.message || '登录异常，请重试', 'error');\n      } finally {\n        this.isLoading = false\n      }\n    }\n  },\n  onUnload() {\n    console.log('登录页onUnload生命周期触发')\n    loginMsgUtil.clearMsgTimer(this);\n  }\n};\n</script>\n<style scoped>\n\t.login-container {\n\t\tpadding: 40rpx 30rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 60rpx;\n\t\tbackground: linear-gradient(135deg, #f0f9ff 0%, #e6f7ff 100%);\n\t\tmin-height: 100vh;\n\t\twidth: 100%;\n\t}\n\n\n\t.form-box {\n\t\twidth: 100%;\n\t\tmax-width: 500rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 30rpx;\n\t\tbackground: #fff;\n\t\tpadding: 60rpx 40rpx;\n\t\tborder-radius: 20rpx;\n\t\tbox-shadow: 0 8rpx 24rpx rgba(0, 123, 255, 0.1);\n\t}\n\n\t.loading-box {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tgap: 20rpx;\n\t\tcolor: #409eff;\n\t\tfont-size: 28rpx;\n\t}\n\n\t/* 标题样式 */\n\t.title {\n\t\tfont-size: 36rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #333;\n\t\ttext-align: center;\n\t\tmargin-bottom: 20rpx;\n\t}\n\n\t/* 提示文本样式 */\n\t.tip {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t\ttext-align: center;\n\t\tmargin-bottom: 10rpx;\n\t\tline-height: 1.5;\n\t}\n\n\t/* 输入框样式 */\n\t.input {\n\t\twidth: 95%;\n\t\theight: 80rpx;\n\t\tborder: 1px solid #dcdcdc;\n\t\tborder-radius: 10rpx;\n\t\tpadding: 0 20rpx;\n\t\tfont-size: 28rpx;\n\t\ttransition: all 0.3s ease;\n\t}\n\n\t/* 输入框聚焦样式 */\n\t.input:focus {\n\t\tborder-color: #409eff;\n\t\tbox-shadow: 0 0 0 2rpx rgba(64, 158, 255, 0.2);\n\t\toutline: none;\n\t}\n\n\t/* 输入框禁用样式 */\n\t.input:disabled {\n\t\tbackground-color: #f5f5f5;\n\t\tcolor: #999;\n\t\tcursor: not-allowed;\n\t}\n\n\t/* 主按钮样式 */\n\t.main-btn {\n\t\theight: 90rpx;\n\t\tfont-size: 32rpx;\n\t\tborder-radius: 45rpx;\n\t\tbackground: linear-gradient(90deg, #409eff, #66b1ff);\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmargin-top: 20rpx;\n\t\tcursor: pointer;\n\t\ttransition: background 0.3s ease;\n\t}\n\n\t/* 按钮禁用样式 */\n\t.main-btn[disabled] {\n\t\tbackground: #c6e2ff;\n\t\tcursor: not-allowed;\n\t}\n\n\t/* 消息提示基础样式 */\n\t\t.msg {\r\n\t\t\tfont-size: 26rpx;\r\n\t\t\ttext-align: center;\r\n\t\t\tmargin-top: 20rpx;\r\n\t\t\tpadding: 16rpx 20rpx;\r\n\t\t\tborder-radius: 10rpx;\r\n\t\t\twidth: 100%;\r\n\t\t\tmax-width: 500rpx; /* 补充完整：原代码截断为\"max-width: 5\"，此处修正为500rpx，与表单宽度一致 */\r\n\t\t}\r\n\t\r\n\t\t/* 错误消息样式 */\r\n\t\t.error-msg {\r\n\t\t\tcolor: #f56c6c;\r\n\t\t\tbackground: rgba(245, 108, 108, 0.1);\r\n\t\t\tborder: 1px solid #fde2e2;\r\n\t\t}\r\n\t\r\n\t\t/* 成功消息样式 */\r\n\t\t.success-msg {\r\n\t\t\tcolor: #67c23a;\r\n\t\t\tbackground: rgba(103, 194, 58, 0.1);\r\n\t\t\tborder: 1px solid #e1f3d8;\r\n\t\t}\r\n\t\r\n\t\t/* 校园网提示样式 */\r\n\t\t.campus-net-tip {\r\n\t\t\tfont-size: 30rpx;\r\n\t\t\tcolor: #666;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 10rpx 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\tgap: 10rpx;\r\n\t\t\tmargin-top: 10rpx;\r\n\t\t}\r\n\t</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/Uniapp/pages/login/login.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","loginFlowUtil","loginStorageUtil","loginMsgUtil"],"mappings":";;;;;AA6BA,MAAK,YAAU;AAAA,EACb,OAAO;AACLA,kBAAAA,MAAA,MAAA,OAAA,+BAAY,wBAAwB;AACpC,WAAO;AAAA,MACL,eAAe;AAAA;AAAA,MACf,MAAM;AAAA,QACJ,QAAQ;AAAA,QACR,MAAM;AAAA,MACP;AAAA,MACD,KAAK;AAAA;AAAA,MACL,SAAS;AAAA;AAAA,MACT,WAAW;AAAA;AAAA,MACX,UAAU;AAAA;AAAA;EAEb;AAAA,EAED,SAAS;AACPA,kBAAAA,MAAA,MAAA,OAAA,+BAAY,6BAA6B;AACzC,SAAK,cAAc;AAAA,EACpB;AAAA,EAED,SAAS;AAAA,IACP,MAAM,gBAAgB;AACpBA,oBAAAA,MAAY,MAAA,OAAA,+BAAA,4BAA4B;AACxC,WAAK,YAAY;AACjB,UAAI;AAEF,cAAM,SAAS,MAAMC,mCAAc;AACnCD,sBAAAA,MAAA,MAAA,OAAA,+BAAY,iBAAiB,MAAM;AAGnC,cAAM,EAAE,cAAc,OAAS,IAAE,MAAMC,qBAAAA,cAAc,UAAU,MAAM;AAGrE,aAAI,6CAAc,UAAS,QAAQ;AACjCD,8BAAY,MAAA,OAAA,+BAAA,oBAAoB,EAAE,OAAO,aAAa,OAAO;AAC7D,gBAAM,WAAWE,wBAAAA,iBAAiB;AAAA,YAChC;AAAA,YACA,aAAa;AAAA,YACb,aAAa;AAAA;AAGfA,kCAAAA,iBAAiB,kBAAkB,aAAa,OAAO,QAAQ;AAE/DC,8BAAAA,aAAa,QAAQ,MAAM,eAAe,SAAS;AAAA,mBAC1C,6CAAc,OAAO;AAC9BH,wBAAAA,MAAY,MAAA,OAAA,+BAAA,sBAAsB;AAClCE,kCAAAA,iBAAiB,kBAAkB,aAAa,KAAK;AACrDC,8BAAAA,aAAa,QAAQ,MAAM,iBAAiB,OAAO;AAAA,eAC9C;AACLH,wBAAAA,MAAA,MAAA,OAAA,+BAAY,oBAAoB;AAChCG,8BAAAA,aAAa,QAAQ,MAAM,gBAAgB,OAAO;AAAA,QACpD;AAAA,MAEA,SAAO,KAAK;AACZH,sBAAAA,MAAA,MAAA,SAAA,+BAAc,aAAa,GAAG;AAC9BG,yCAAa,QAAQ,MAAM,WAAW,IAAI,WAAW,MAAM,IAAI,OAAO;AAAA,MACxE,UAAU;AAER,cAAM,KAAK,gBAAgB;AAC3B,aAAK,YAAY;AACjBH,sBAAAA,MAAA,MAAA,OAAA,+BAAY,uBAAuB;AAAA,MACrC;AAAA,IACD;AAAA,IACD,MAAM,kBAAkB;AACtBA,oBAAAA,kDAAY,8BAA8B;AAC1C,WAAK,YAAY;AACjB,UAAI;AAEF,cAAM,EAAE,gBAAgB,kBAAkB,UAAQ,IAAME,wBAAAA,iBAAiB;AACzEF,sBAAAA,mDAAY,aAAa;AAAA,UACvB,cAAc,CAAC,CAAC;AAAA,UAChB,gBAAgB,CAAC,CAAC;AAAA,UAClB,aAAa,CAAC,CAAC;AAAA,UACf,SAAQ,uCAAW,WAAU;AAAA,SAC9B;AAGD,YAAI,eAAeE,wBAAAA,iBAAiB,qBAAqB,SAAS;AAClE,YAAI,iBAAiB,WAAW;AAC9BF,wBAAAA,MAAI,eAAe,YAAY,YAAY;AAAA,QAC7C;AAGA,cAAM,gBAAgB,kBAAkB;AACxC,cAAM,mBAAkB,6CAAc,YAAW,aAAa,aAAa,aAAa;AAExF,YAAI,iBAAiB,iBAAiB;AACpCA,wBAAAA,MAAA,MAAA,OAAA,gCAAY,eAAe;AAC3B,qBAAW,MAAM;AACfA,gCAAI,eAAe,WAAW,IAAI;AAClCA,0BAAAA,MAAI,UAAU,EAAE,KAAK,sBAAsB;AAAA,UAC5C,GAAE,GAAI;AAAA,eACF;AACLA,wBAAAA,MAAY,MAAA,OAAA,gCAAA,iBAAiB;AAC7B,eAAK,gBAAgB;AAAA,QACvB;AAAA,MAEA,SAAO,KAAK;AACZA,sBAAAA,MAAc,MAAA,SAAA,gCAAA,gBAAgB,GAAG;AACjCG,4BAAAA,aAAa,QAAQ,MAAM,gBAAgB,OAAO;AAClD,aAAK,gBAAgB;AAAA,MACvB,UAAU;AACR,aAAK,YAAY;AACjBH,sBAAAA,MAAY,MAAA,OAAA,gCAAA,kBAAkB;AAAA,MAChC;AAAA,IACD;AAAA,IACD,MAAM,cAAc;AAClBA,oBAAAA,MAAA,MAAA,OAAA,gCAAY,wBAAwB;AACpC,WAAK,YAAY;AACjB,UAAI;AAEF,cAAM,EAAE,eAAe,YAAc,IAAEC,qBAAa,cAAC;AAAA,UACnD,KAAK,KAAK;AAAA,UACV,KAAK,KAAK;AAAA;AAIZ,cAAM,SAAS,MAAMA,mCAAc;AAGnC,cAAM,WAAW,MAAMA,qBAAa,cAAC,YAAY,QAAQ,aAAa;AAGtE,YAAI,qCAAU,OAAO;AACnBD,wBAAA,MAAA,MAAA,OAAA,gCAAY,oBAAoB,SAAS,KAAK;AAC9C,gBAAM,WAAWE,wBAAAA,iBAAiB;AAAA,YAChC;AAAA,YACA;AAAA,YACA,SAAS;AAAA;AAGXA,kCAAAA,iBAAiB,oBAAoB,SAAS,OAAO,QAAQ;AAE7DC,8BAAAA,aAAa,QAAQ,MAAM,aAAa,SAAS;AACjD,qBAAW,MAAM;AACfH,0BAAAA,MAAI,UAAU,EAAE,KAAK,sBAAsB;AAAA,UAC5C,GAAE,GAAI;AAAA,eACF;AACL,gBAAM,IAAI,OAAM,qCAAU,QAAO,kBAAkB;AAAA,QACrD;AAAA,MAEA,SAAO,KAAK;AACZA,sBAAAA,MAAc,MAAA,SAAA,gCAAA,WAAW,GAAG;AAC5BG,4BAAY,aAAC,QAAQ,MAAM,IAAI,WAAW,YAAY,OAAO;AAAA,MAC/D,UAAU;AACR,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AAAA,EACD;AAAA,EACD,WAAW;AACTH,kBAAAA,MAAA,MAAA,OAAA,gCAAY,mBAAmB;AAC/BG,qCAAa,cAAc,IAAI;AAAA,EACjC;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtLA,GAAG,WAAW,eAAe;"}