{"version":3,"file":"my.js","sources":["pages/my/my.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbXkvbXkudnVl"],"sourcesContent":["<template>\n  <view class=\"my-container\">\n    <!-- 个人信息区域 -->\n    <view class=\"profile-section\" @tap=\"goToProfile\" :hover-class=\"'profile-tap'\"> \n      <view class=\"avatar-container\">\n        <image \n          class=\"avatar\" \n          :src=\"userInfo.avatar\" \n          mode=\"aspectFill\"\n          lazy-load \n          @error=\"handleAvatarError\" \n        ></image>\n      </view>\n      <view class=\"user-info-wrapper\">\n        <view class=\"user-info\">\n          <text class=\"nickname\">{{ userInfo.name || '未设置昵称' }}</text>\n          <text class=\"desc\">当前身份：{{ userRole || '未登录' }}</text>\n        </view>\n      </view>\n    </view>\n\n    <!-- 消息列表区域 -->\n    <view class=\"message-section\">\n      <view class=\"section-title\">\n        <text>消息列表</text>\n        <view class=\"unread-count\" v-if=\"unreadMsgCount > 0\">\n          {{ unreadMsgCount }}\n        </view>\n      </view>\n\n      <!-- 空状态 -->\n      <view class=\"empty-container\" v-if=\"messageList.length === 0\">\n        <image class=\"empty-icon\" src=\"/static/icons/empty-msg.png\" mode=\"widthFix\"></image>\n        <text class=\"empty-tip\">暂无消息，快去看看吧~</text>\n      </view>\n\n      <!-- 消息项 -->\n      <view \n        class=\"message-item\"\n        :class=\"{ unread: item.unread }\"\n        @tap=\"handleItemTap(item, index)\"\n        @longpress=\"handleLongPress(item, index)\"\n        :hover-class=\"'msg-item-tap'\"\n        v-for=\"(item, index) in messageList\" \n        :key=\"`msg-${item.id}`\"\n      >\n        <view class=\"unread-dot\" v-if=\"item.unread\"></view>\n        \n        <view class=\"msg-content\">\n          <text class=\"message-title\">{{ item.title || '无标题消息' }}</text>\n          <text class=\"message-content\">{{ item.content || '无内容' }}</text>\n        </view>\n\n        <!-- 操作按钮 -->\n        <view class=\"action-buttons\" v-if=\"item.unread\">\n          <button \n            class=\"btn cancel-unread\" \n            size=\"mini\" \n            @tap.stop=\"cancelUnread(index)\"\n          >\n            取消标红\n          </button>\n          <button \n            class=\"btn delete-msg\" \n            size=\"mini\" \n            @tap.stop=\"deleteMessage(index)\"\n          >\n            删除\n          </button>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\r\n<script setup>\r\nimport { reactive, onMounted,  ref, computed } from 'vue';\r\nimport { onShow, onUnload } from '@dcloudio/uni-app';\r\nimport { userInfoManager } from '../../utils/my/userInfoManager';\r\nimport { messageHandler } from '../../utils/my/messageHandler';\r\nimport { navigationService } from '../../utils/my/navigationService';\r\nimport { errorHandler } from '../../utils/my/errorHandler.js';\r\n\r\n// 1. 响应式数据\r\nconst userInfo = reactive({\r\n  avatar: '/static/default-avatar.png', \r\n  name: '未设置',\r\n  identity: '未登录', // 身份标识：领导/督导/教师/学生/未登录\r\n  gender: '未设置',\r\n  college: '未设置',\r\n  className: '未设置',\r\n  major: '未设置',\r\n  studentID: '未设置',\r\n  teacherID: '未设置',\r\n  department: '未设置'\r\n});\r\n\r\n// 2. 计算属性\r\nconst userRole = computed(() => {\r\n  return userInfoManager.getValidIdentity(userInfo.identity);\r\n});\r\n\r\nconst unreadMsgCount = computed(() => {\r\n  return messageHandler.getUnreadCount(messageList.value);\r\n});\r\n\r\n// 3. 消息列表\r\nconst messageList = ref([\r\n  { id: 1, title: '系统通知', content: '新系统通知已送达', unread: true },\r\n  { id: 2, title: '互动消息', content: '有学生提交了反馈', unread: true }, \r\n  { id: 3, title: '待办提醒', content: '请及时完善个人信息', unread: true }\r\n]);\r\n\r\nconst refreshUserInfo = async () => {\r\n  try {\r\n    const initSuccess = await userInfoManager.initUserInfo(userInfo);\r\n    if (!initSuccess) {\r\n      console.warn('用户信息刷新失败，使用默认值');\r\n      userInfo.identity = '未登录';\r\n    }\r\n  } catch (err) {\r\n    errorHandler.handleUserInitError(\r\n      userInfo, \r\n      err, \r\n      () => navigationService.goToLogin()\r\n    );\r\n  }\r\n};\r\n\r\n// 4. 页面首次挂载：初始化一次\r\nonMounted(async () => {\r\n  await refreshUserInfo();\r\n});\r\n\r\n// 5. 新增：每次页面显示（如登录后返回），重新刷新信息\r\nonShow(async () => {\r\n  await refreshUserInfo();\r\n});\r\n\r\n// 6. 新增：监听全局“登录成功”事件（登录后主动触发刷新）\r\nonMounted(() => {\r\n  // 监听登录成功事件（需在登录页触发此事件）\r\n  uni.$on('loginSuccess', async () => {\r\n    console.log('收到登录成功事件，刷新用户信息');\r\n    await refreshUserInfo();\r\n  });\r\n});\r\n\r\n// 7. 新增：页面卸载时移除事件监听（避免内存泄漏）\r\nonUnload(() => {\r\n  uni.$off('loginSuccess'); // 清除监听，防止重复触发\r\n});\r\n\r\n// 5. 头像加载失败处理\r\nconst handleAvatarError = (e) => {\r\n  errorHandler.handleAvatarError(e);\r\n};\r\n\r\n// 6. 消息处理函数\r\nconst handleItemTap = (item, index) => {\r\n  messageHandler.handleItemTap(messageList.value, item, index);\r\n};\r\n\r\nconst cancelUnread = (index) => {\r\n  messageHandler.cancelUnread(messageList.value, index);\r\n};\r\n\r\nconst deleteMessage = async (index) => {\r\n  await messageHandler.deleteMessage(messageList.value, index);\r\n};\r\n\r\nconst handleLongPress = (item, index) => {\r\n  messageHandler.handleLongPress(messageList.value, item, index);\r\n};\r\n\r\n// 7. 跳转个人信息编辑页\r\nconst goToProfile = async () => {\r\n  await navigationService.goToProfileEdit(\r\n    userRole.value, \r\n    userInfo, \r\n    [] // 如需排除敏感字段，在此添加，例如['token']\r\n  );\r\n};\r\n</script>\n\n<style scoped>\n/* 全局容器：优化背景色梯度，增加页面呼吸感 */\n.my-container {\n  display: flex;\n  flex-direction: column;\n  background-color: #fafdff; /* 更柔和的底色，替代原#f8fef8 */\n  min-height: 100vh;\r\n  padding-top: 30rpx;\n  padding-bottom: 15rpx; /* 增加底部留白，避免内容贴边 */\n  transition: background-color 0.3s ease; /* 背景色过渡，提升页面切换流畅度 */\n}\n\n/* 个人信息区域：强化视觉焦点，优化渐变质感 */\n.profile-section {\n  width: 100%;\n  min-height: 220rpx; /* 适当增高，提升空间感 */\n  background: linear-gradient(135deg, #e6f7ff, #fafdff); /* 改135°渐变，更自然 */\n  display: flex;\n  align-items: center;\n  padding: 32rpx 40rpx; /* 调整内边距，更均匀 */\r\n   padding-top: 100rpx;\n  box-sizing: border-box;\n  margin-bottom: 24rpx;\n  border-bottom-left-radius: 36rpx; /* 增大圆角，更显柔和 */\n  border-bottom-right-radius: 36rpx;\n  box-shadow: 0 8rpx 20rpx rgba(180, 225, 255, 0.15); /* 增加轻微阴影，提升层次感 */\n  transition: all 0.3s ease; /* 整体过渡，优化点击反馈 */\n}\n\n/* 头像容器：增加精致感，避免扁平 */\n.avatar-container {\n  width: 130rpx; /* 适当增大头像，提升视觉权重 */\n  height: 130rpx;\n  border-radius: 50%;\n  border: 4rpx solid #fff; /* 改白色边框，与渐变背景对比更清晰 */\n  overflow: hidden;\n  margin-right: 30rpx;\n  box-shadow: 0 4rpx 12rpx rgba(120, 200, 255, 0.2); /* 头像加阴影，更立体 */\n}\n\n.avatar {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease; /* 头像 hover 放大，增加交互感 */\n}\n.avatar-container:hover .avatar {\n  transform: scale(1.05); /* 轻微放大，不突兀 */\n}\n\n/* 用户信息容器：优化对齐和间距 */\n.user-info-wrapper {\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  gap: 12rpx; /* 增大间距，避免文字拥挤 */\n}\n\n/* 昵称样式：强化视觉层级 */\n.nickname {\n  font-size: 38rpx; /* 适当增大字体 */\n  font-weight: 600;\n  color: #2d3748; /* 深灰色，替代原#333，更显高级 */\n  line-height: 1.5;\n  text-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.05); /* 轻微文字阴影，提升清晰度 */\n}\n\n/* 身份描述：优化颜色和字体 */\n.desc {\n  font-size: 28rpx; /* 增大字体，提升可读性 */\n  color: #718096; /* 柔和的灰色，替代原#666 */\n  line-height: 1.5;\n}\n\n/* 箭头图标：优化大小和透明度 */\n.arrow-icon {\n  width: 32rpx;\n  height: 32rpx;\n  opacity: 0.7;\n  transition: all 0.3s ease; /* 箭头 hover 效果 */\n}\n.profile-section:hover .arrow-icon {\n  opacity: 1;\n  transform: translateX(4rpx); /* 箭头轻微右移，引导用户点击 */\n}\n\n/* 个人信息区域点击态：更柔和的反馈 */\n.profile-tap {\n  opacity: 0.95;\n  background: linear-gradient(135deg, #d9f0ff, #f5faff); /* 点击时渐变加深 */\n  box-shadow: 0 6rpx 18rpx rgba(180, 225, 255, 0.1);\n}\n\n/* 消息列表区域：优化内边距和背景 */\n.message-section {\n  flex: 1;\n  padding: 0 24rpx; /* 调整内边距，与个人信息区域呼应 */\n  box-sizing: border-box;\n}\n\n/* 列表标题：强化视觉引导 */\n.section-title {\n  font-size: 34rpx; /* 增大字体 */\n  font-weight: 600;\n  color: #2d3748;\n  margin-bottom: 24rpx;\n  padding-left: 18rpx; /* 调整左内边距 */\n  border-left: 12rpx solid #87e8de; /* 更清新的青色，替代原#90ee90 */\n  display: flex;\n  align-items: center;\n  gap: 12rpx; /* 增大间距 */\n}\n\n/* 未读数量：优化大小和颜色，更醒目但不刺眼 */\n.unread-count {\n  width: 40rpx; /* 增大尺寸 */\n  height: 40rpx;\n  border-radius: 50%;\n  background-color: #ff6b6b; /* 柔和的珊瑚红，替代原#ff4d4f */\n  color: #fff;\n  font-size: 24rpx; /* 增大字体 */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2rpx 8rpx rgba(255, 107, 107, 0.3); /* 小红点加阴影，更立体 */\n  animation: pulse 2s infinite ease-in-out; /* 轻微脉冲动画，提醒用户 */\n}\n\n/* 未读红点脉冲动画 */\n@keyframes pulse {\n  0%, 100% {\n    transform: scale(1);\n    box-shadow: 0 2rpx 8rpx rgba(255, 107, 107, 0.3);\n  }\n  50% {\n    transform: scale(1.05);\n    box-shadow: 0 3rpx 12rpx rgba(255, 107, 107, 0.4);\n  }\n}\n\n/* 空状态：优化视觉舒适度，避免单调 */\n.empty-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 120rpx 0; /* 增加上下留白 */\n  gap: 28rpx; /* 增大间距 */\n}\n\n.empty-icon {\n  width: 180rpx; /* 增大图标 */\n  height: 180rpx;\n  opacity: 0.35; /* 降低透明度，更柔和 */\n  transition: opacity 0.3s ease;\n}\n.empty-container:hover .empty-icon {\n  opacity: 0.45; /* hover 时提升透明度，增加交互感 */\n}\n\n.empty-tip {\n  font-size: 30rpx; /* 增大字体 */\n  color: #a0aec0; /* 更柔和的灰色 */\n  line-height: 1.6;\n  padding: 0 40rpx;\n  text-align: center; /* 文字居中，避免左对齐的生硬 */\n}\n\n/* 消息项：核心优化，提升卡片质感 */\n.message-item {\n  padding: 28rpx 24rpx; /* 调整内边距 */\n  border: 1px solid #f0f4f8; /* 更浅的边框色 */\n  border-radius: 18rpx; /* 增大圆角 */\n  margin-bottom: 22rpx; /* 增大间距，避免拥挤 */\n  background-color: #fff;\n  display: flex;\n  align-items: flex-start;\n  gap: 18rpx; /* 增大间距 */\n  transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1); /* 更流畅的过渡曲线 */\n  box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.02); /* 轻微阴影，提升层次感 */\n}\n\n/* 未读消息卡片：优化颜色，更显区分度 */\n.message-item.unread {\n  background-color: #fff8f9; /* 更柔和的未读底色 */\n  border-color: #ffe5e8; /* 更浅的未读边框 */\n  box-shadow: 0 4rpx 16rpx rgba(255, 107, 107, 0.03); /* 未读卡片加淡红色阴影 */\n}\n\n/* 未读小点：优化大小和位置 */\n.unread-dot {\n  width: 18rpx; /* 增大尺寸 */\n  height: 18rpx;\n  border-radius: 50%;\n  background-color: #ff6b6b; /* 与未读数量颜色统一 */\n  margin-top: 10rpx; /* 调整位置，与文字对齐更协调 */\n}\n\n/* 消息内容容器：优化间距 */\n.msg-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 12rpx; /* 增大间距 */\n}\n\n/* 消息标题：强化视觉层级 */\n.message-title {\n  font-size: 30rpx; /* 增大字体 */\n  font-weight: 600;\n  color: #2d3748;\n  line-height: 1.5;\n}\n\n/* 消息内容：优化换行和颜色 */\n.message-content {\n  font-size: 26rpx; /* 增大字体，提升可读性 */\n  color: #718096; /* 与身份描述颜色统一，保持风格一致 */\n  line-height: 1.7; /* 增大行高，提升阅读舒适度 */\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* 消息项点击态：更自然的反馈 */\n.msg-item-tap {\n  background-color: #f9fafb !important;\n  border-color: #e2e8f0;\n  box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.01);\n  transform: translateY(2rpx); /* 轻微下移，模拟按压感 */\n}\n\n/* 操作按钮容器：优化间距 */\n.action-buttons {\n  display: flex;\n  gap: 18rpx; /* 增大间距，避免按钮拥挤 */\n  margin-top: 12rpx; /* 调整位置 */\n}\n\n/* 按钮基础样式：优化圆角和内边距 */\n.btn {\n  padding: 12rpx 24rpx; /* 调整内边距，按钮更饱满 */\n  border-radius: 12rpx; /* 增大圆角，更柔和 */\n  font-size: 26rpx; /* 增大字体 */\n  border: none;\n  min-width: 130rpx; /* 增大最小宽度 */\n  transition: all 0.25s ease; /* 按钮过渡，提升交互感 */\n}\n\n/* 取消标红按钮：优化颜色，更清新 */\n.cancel-unread {\n  background-color: #edf7ff; /* 更淡的蓝色底 */\n  color: #1890ff;\n}\n.cancel-unread:hover {\n  background-color: #e6f4ff; /* hover 时加深底色 */\n}\n.cancel-unread:active {\n  background-color: #d1eaff; /* 点击时进一步加深 */\n}\n\n/* 删除按钮：优化颜色，更柔和 */\n.delete-msg {\n  background-color: #fff5f5; /* 更淡的红色底 */\n  color: #ff6b6b;\n}\n.delete-msg:hover {\n  background-color: #fff0f0; /* hover 时加深底色 */\n}\n.delete-msg:active {\n  background-color: #ffe6e6; /* 点击时进一步加深 */\n}\n\n/* 按钮点击态：统一缩放效果 */\n.btn:active {\n  opacity: 0.9;\n  transform: scale(0.95); /* 轻微缩放，模拟按压感 */\n  transition: transform 0.1s ease;\n}\n\n/* 响应式优化：分档适配，覆盖更多设备 */\n/* 小屏手机（320px以下） */\n@media (max-width: 320px) {\n  .nickname { font-size: 34rpx; }\n  .desc { font-size: 26rpx; }\n  .message-title { font-size: 28rpx; }\n  .message-content { font-size: 24rpx; }\n  .avatar-container { width: 120rpx; height: 120rpx; }\n  .btn { font-size: 24rpx; min-width: 120rpx; }\n}\n\n/* 大屏手机/平板（750px以上） */\n@media (min-width: 750px) {\n  .my-container {\n    max-width: 700rpx; /* 限制最大宽度，避免平板端内容过宽 */\n    margin: 0 auto; /* 水平居中 */\n    box-shadow: 0 0 30rpx rgba(0, 0, 0, 0.02); /* 加外阴影，模拟卡片效果 */\n  }\n  .profile-section {\n    border-radius: 0 0 36rpx 36rpx; /* 保持顶部通栏，底部圆角 */\n  }\n}\n</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/Uniapp/pages/my/my.vue'\nwx.createPage(MiniProgramPage)"],"names":["reactive","computed","userInfoManager","messageHandler","ref","uni","errorHandler","navigationService","onMounted","onShow","onUnload"],"mappings":";;;;;;;;;;AAoFA,UAAM,WAAWA,cAAAA,SAAS;AAAA,MACxB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,MACV,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC;AAGD,UAAM,WAAWC,cAAQ,SAAC,MAAM;AAC9B,aAAOC,yCAAgB,iBAAiB,SAAS,QAAQ;AAAA,IAC3D,CAAC;AAED,UAAM,iBAAiBD,cAAQ,SAAC,MAAM;AACpC,aAAOE,uCAAe,eAAe,YAAY,KAAK;AAAA,IACxD,CAAC;AAGD,UAAM,cAAcC,cAAAA,IAAI;AAAA,MACtB,EAAE,IAAI,GAAG,OAAO,QAAQ,SAAS,YAAY,QAAQ,KAAM;AAAA,MAC3D,EAAE,IAAI,GAAG,OAAO,QAAQ,SAAS,YAAY,QAAQ,KAAM;AAAA,MAC3D,EAAE,IAAI,GAAG,OAAO,QAAQ,SAAS,aAAa,QAAQ,KAAM;AAAA,IAC9D,CAAC;AAED,UAAM,kBAAkB,YAAY;AAClC,UAAI;AACF,cAAM,cAAc,MAAMF,yBAAAA,gBAAgB,aAAa,QAAQ;AAC/D,YAAI,CAAC,aAAa;AAChBG,wBAAAA,8CAAa,gBAAgB;AAC7B,mBAAS,WAAW;AAAA,QACrB;AAAA,MACF,SAAQ,KAAK;AACZC,8BAAAA,aAAa;AAAA,UACX;AAAA,UACA;AAAA,UACA,MAAMC,2BAAAA,kBAAkB,UAAW;AAAA,QACzC;AAAA,MACG;AAAA,IACH;AAGAC,kBAAAA,UAAU,YAAY;AACpB,YAAM,gBAAe;AAAA,IACvB,CAAC;AAGDC,kBAAAA,OAAO,YAAY;AACjB,YAAM,gBAAe;AAAA,IACvB,CAAC;AAGDD,kBAAAA,UAAU,MAAM;AAEdH,0BAAI,IAAI,gBAAgB,YAAY;AAClCA,sBAAAA,MAAA,MAAA,OAAA,0BAAY,iBAAiB;AAC7B,cAAM,gBAAe;AAAA,MACzB,CAAG;AAAA,IACH,CAAC;AAGDK,kBAAAA,SAAS,MAAM;AACbL,0BAAI,KAAK,cAAc;AAAA,IACzB,CAAC;AAGD,UAAM,oBAAoB,CAAC,MAAM;AAC/BC,yCAAa,kBAAkB,CAAC;AAAA,IAClC;AAGA,UAAM,gBAAgB,CAAC,MAAM,UAAU;AACrCH,8BAAc,eAAC,cAAc,YAAY,OAAO,MAAM,KAAK;AAAA,IAC7D;AAEA,UAAM,eAAe,CAAC,UAAU;AAC9BA,8BAAAA,eAAe,aAAa,YAAY,OAAO,KAAK;AAAA,IACtD;AAEA,UAAM,gBAAgB,OAAO,UAAU;AACrC,YAAMA,wBAAc,eAAC,cAAc,YAAY,OAAO,KAAK;AAAA,IAC7D;AAEA,UAAM,kBAAkB,CAAC,MAAM,UAAU;AACvCA,8BAAc,eAAC,gBAAgB,YAAY,OAAO,MAAM,KAAK;AAAA,IAC/D;AAGA,UAAM,cAAc,YAAY;AAC9B,YAAMI,2BAAiB,kBAAC;AAAA,QACtB,SAAS;AAAA,QACT;AAAA,QACA,CAAE;AAAA;AAAA,MACN;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrLA,GAAG,WAAW,eAAe;"}