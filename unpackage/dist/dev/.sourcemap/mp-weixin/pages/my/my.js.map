{"version":3,"file":"my.js","sources":["pages/my/my.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbXkvbXkudnVl"],"sourcesContent":["\r\n<template>\n  <view class=\"my-container\">\n    <!-- 个人信息区域，绑定点击跳转事件 -->\n    <view class=\"profile-section\" @tap=\"goToProfile\"> \n      <image \n        class=\"avatar\" \n        :src=\"userInfo.avatarUrl\" \n        mode=\"aspectFill\"\n      ></image>\n      <view class=\"user-info-wrapper\">\n        <view class=\"user-info\">\n          <text class=\"nickname\">{{ userInfo.nickname }}</text>\n          <text class=\"desc\">用户身份</text>\n        </view>\n      </view>\n    </view>\n\n    <!-- 消息列表区域 -->\n    <view class=\"message-section\">\n      <view class=\"section-title\">消息列表</view>\n      <template v-for=\"(item, index) in messageList\" :key=\"item.id\"> <!-- 改用item.id作为key更规范 -->\n        <view \n          class=\"message-item\" \n          :class=\"{ unread: item.unread }\"\n          @tap=\"handleItemTap(item)\"\n        >\n          <text class=\"message-title\">{{ item.title }}</text>\n          <text class=\"message-content\">{{ item.content }}</text>\n          <view class=\"action-buttons\" v-if=\"item.unread\">\n            <button \n              class=\"btn cancel-unread\" \n              size=\"mini\" \n              @tap.stop=\"cancelUnread(index)\"\n            >\n              取消标红\n            </button>\n            <button \n              class=\"btn delete-msg\" \n              size=\"mini\" \n              @tap.stop=\"deleteMessage(index)\"\n            >\n              删除\n            </button>\n          </view>\n        </view>\n      </template>\n    </view>\n  </view>\n</template>\n<script setup lang=\"ts\">\nimport { reactive } from 'vue';\nimport { navigateToWithLoading } from '@/utils/navigate/navigate';\n\n// 类型定义集中管理\ninterface UserInfo {\n  avatarUrl: string;\n  nickname: string;\n}\n\ninterface MessageItem {\n  id: number;\n  title: string;\n  content: string;\n  unread: boolean;\n}\n\n// 响应式数据\nconst userInfo = reactive<UserInfo>({\n  avatarUrl: '/static/default-avatar.png', \n  nickname: '用户姓名' \n});\n\nconst messageList = reactive<MessageItem[]>([\n  { id: 1, title: '系统通知', content: '新系统通知...', unread: true },\n  { id: 2, title: '互动消息', content: '收到点赞', unread: false },\n  { id: 3, title: '测试消息', content: '未读测试', unread: true }\n]);\n\n// 方法逻辑\nconst handleItemTap = (item: MessageItem) => {\n  uni.__f__('log','at pages/my/my.vue:82','点击消息:', item);\n  // 可扩展：跳转到消息详情页\n};\n\nconst cancelUnread = (index: number) => {\n  messageList[index].unread = false;\n};\n\nconst deleteMessage = (index: number) => {\n  messageList.splice(index, 1);\n};\n\nconst goToProfile = async () => {\n  try {\n    await navigateToWithLoading('/pages/personnalMsg/personnalMsg', {\n      loadingText: '加载中...',\n      onError: (err) => {\n        uni.__f__('warn','at pages/my/my.vue:99','跳转异常:', err);\n      }\n    });\n  } catch (err) {\n    // 统一错误捕获\n  }\n};\n</script>\n\n<style scoped>\n/* 保持原有样式不变 */\n.my-container {\n  display: flex;\n  flex-direction: column;\n  background-color: #F0FFF0;\n  min-height: 100vh;\n}\n\n.profile-section {\n  position: relative;\n  width: 100%;\n  height: 30vh;\n  background: linear-gradient(to bottom , #87CEEB, #F0FFF0);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 40rpx;\n  box-sizing: border-box;\n}\n\n.avatar {\n  width: 120rpx;\n  height: 120rpx;\n  border-radius: 50%;\n  border: 3rpx solid #87CEEB;\n  margin-right: 10rpx;\n}\n\n.user-info-wrapper {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.nickname {\n  font-size: 36rpx;\n  font-weight: bold;\n  color: #333;\n  text-align: center;\n}\n\n.desc {\n  font-size: 28rpx;\n  color: #666;\n  margin-top: 5rpx;\n  text-align: center;\n}\n\n.message-section {\n  flex: 1;\n  padding: 20rpx;\n  box-sizing: border-box;\n}\n\n.section-title {\n  font-size: 32rpx;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 20rpx;\n  border-left: 10rpx solid #0f0;\n  padding-left: 10rpx;\n}\n\n.message-item {\n  padding: 20rpx;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  flex-direction: column;\n}\n\n.unread {\n  background-color: #ffe6e6;\n}\n\n.message-title {\n  font-size: 30rpx;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 10rpx;\n}\n\n.message-content {\n  font-size: 26rpx;\n  color: #666;\n}\n\n.action-buttons {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10rpx;\n}\n\n.btn {\n  margin-left: 20rpx;\n  padding: 10rpx 20rpx;\n  border-radius: 8rpx;\n}\n\n.cancel-unread {\n  background-color: #0f0;\n  color: #fff;\n}\n\n.delete-msg {\n  background-color: #f00;\n  color: #fff;\n}\n</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/dxuniapp/pages/my/my.vue'\nwx.createPage(MiniProgramPage)"],"names":["reactive","uni","navigateToWithLoading"],"mappings":";;;;;;AAoEA,UAAM,WAAWA,cAAAA,SAAmB;AAAA,MAClC,WAAW;AAAA,MACX,UAAU;AAAA,IAAA,CACX;AAED,UAAM,cAAcA,cAAAA,SAAwB;AAAA,MAC1C,EAAE,IAAI,GAAG,OAAO,QAAQ,SAAS,YAAY,QAAQ,KAAK;AAAA,MAC1D,EAAE,IAAI,GAAG,OAAO,QAAQ,SAAS,QAAQ,QAAQ,MAAM;AAAA,MACvD,EAAE,IAAI,GAAG,OAAO,QAAQ,SAAS,QAAQ,QAAQ,KAAK;AAAA,IAAA,CACvD;AAGK,UAAA,gBAAgB,CAAC,SAAsB;AAC3CC,oBAAA,MAAI,MAAM,OAAM,yBAAwB,SAAS,IAAI;AAAA,IAAA;AAIjD,UAAA,eAAe,CAAC,UAAkB;AAC1B,kBAAA,KAAK,EAAE,SAAS;AAAA,IAAA;AAGxB,UAAA,gBAAgB,CAAC,UAAkB;AAC3B,kBAAA,OAAO,OAAO,CAAC;AAAA,IAAA;AAG7B,UAAM,cAAc,YAAY;AAC1B,UAAA;AACF,cAAMC,wBAAAA,sBAAsB,oCAAoC;AAAA,UAC9D,aAAa;AAAA,UACb,SAAS,CAAC,QAAQ;AAChBD,0BAAA,MAAI,MAAM,QAAO,yBAAwB,SAAS,GAAG;AAAA,UACvD;AAAA,QAAA,CACD;AAAA,eACM,KAAK;AAAA,MAEd;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACtGF,GAAG,WAAW,eAAe;"}