{"version":3,"file":"questionnaire-detail.js","sources":["pages/questionnaire/questionnaire-detail.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcXVlc3Rpb25uYWlyZS9xdWVzdGlvbm5haXJlLWRldGFpbC52dWU"],"sourcesContent":["<template>\n  <view class=\"questionnaire-detail-page\">\n    <!-- 顶部导航栏 -->\n    <view class=\"page-header\" v-if=\"questionnaire\">\n      <view class=\"back-button\" @click=\"handleBack\">\n        <text class=\"back-icon\">←</text>\n      </view>\n      <view class=\"header-title\">{{ questionnaire.title }}</view>\n    </view>\n\n    <!-- 加载中状态 -->\n    <view class=\"loading-state\" v-else>\n      <text>加载中...</text>\n    </view>\n\n    <!-- 问卷内容区域 -->\n    <view class=\"questionnaire-content\" v-if=\"questionnaire\">\n      <view class=\"question-item\" v-for=\"(question, qIndex) in questionnaire.questions\" :key=\"qIndex\">\n        <view class=\"question-number\">{{ qIndex + 1 }}.</view>\n        <view class=\"question-text\">{{ question.text }}</view>\n        \n        <!-- 四种题型区分渲染 -->\n        <view class=\"question-options\">\n          <!-- 1. 单选（圆圈） -->\n          <view v-if=\"question.type === 'single'\" class=\"options-single\">\n            <view \n              class=\"option-single\" \n              v-for=\"(option, oIndex) in question.options\" \n              :key=\"oIndex\"\n              :class=\"{ selected: isOptionSelected(question.id, option.id) }\"\n              @click=\"selectOption(question.id, option.id)\"\n            >\n              <view class=\"radio-marker\">\n                <view class=\"radio-dot\" v-if=\"isOptionSelected(question.id, option.id)\"></view>\n              </view>\n              <text>{{ option.text }}</text>\n            </view>\n          </view>\n\n          <!-- 2. 多选（方块） -->\n          <view v-if=\"question.type === 'multiple'\" class=\"options-multiple\">\n            <view \n              class=\"option-multiple\" \n              v-for=\"(option, oIndex) in question.options\" \n              :key=\"oIndex\"\n              :class=\"{ selected: isOptionSelected(question.id, option.id) }\"\n              @click=\"selectOption(question.id, option.id)\"\n            >\n              <view class=\"checkbox-marker\">\n                <text class=\"check-icon\" v-if=\"isOptionSelected(question.id, option.id)\">✓</text>\n              </view>\n              <text>{{ option.text }}</text>\n            </view>\n          </view>\n\n          <!-- 3. 星级评分（打星） -->\n          <view v-if=\"question.type === 'rating'\" class=\"options-rating\">\n            <view \n              class=\"star-item\" \n              v-for=\"(option, oIndex) in question.options\" \n              :key=\"oIndex\"\n              :class=\"{ selected: isStarSelected(question.id, oIndex) }\"\n              @click=\"selectStar(question.id, option.id, oIndex)\"\n            >\n              ★\n              <view class=\"star-text\">{{ option.text }}</view>\n            </view>\n          </view>\n\n          <!-- 4. 滑动条打分（重点修复） -->\n          <view v-if=\"question.type === 'slider'\" class=\"options-slider\">\n            <view class=\"slider-container\">\n              <!-- 滑动提示气泡 -->\n              <view class=\"slider-tooltip-wrapper\" :style=\"{ left: getSliderPosition(question) }\">\n                <view class=\"slider-tooltip\">{{ getSliderText(question) }}</view>\n                <view class=\"tooltip-arrow\"></view>\n              </view>\n              \n              <!-- 滑块组件 -->\n              <slider \n                :min=\"question.min || 0\" \n                :max=\"question.max || 10\" \n                :step=\"question.step || 1\"\n                :value=\"question.answer !== null ? question.answer : (question.min || 0)\"\n                @changing=\"handleSliderChanging(question.id, $event)\"\n                @change=\"handleSliderChange(question.id, $event)\"\n                activeColor=\"#42b983\"\n                backgroundColor=\"#eaeaea\"\n                block-size=\"28rpx\"\n                block-color=\"#42b983\"\n              ></slider>\n            </view>\n            \n            <!-- 滑动条两端标签 -->\n            <view class=\"slider-labels\">\n              <text>{{ question.options[0]?.text || '最低' }}</text>\n              <text>{{ question.options[question.options.length - 1]?.text || '最高' }}</text>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n\n    <!-- 底部操作区 -->\n    <view class=\"bottom-actions\" v-if=\"questionnaire\">\n      <view \n        class=\"reset-btn\" \n        v-if=\"questionnaire.status === 'completed'\" \n        @click=\"resetQuestionnaire\"\n      >\n        重新填写\n      </view>\n      <button \n        class=\"submit-btn\" \n        v-if=\"questionnaire.status !== 'completed'\" \n        @click=\"submitQuestionnaire\"\n      >\n        提交问卷\n      </button>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst questionnaire = ref(null);\n\nonMounted(() => {\n  const pages = getCurrentPages();\n  const currentPage = pages[pages.length - 1];\n  const data = currentPage.options.data;\n  if (data) {\n    // 解析问卷数据\n    const currentQuestionnaire = JSON.parse(decodeURIComponent(data));\n    const allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\n    const storedQuestionnaire = allQuestionnaires.find(q => q.id === currentQuestionnaire.id);\n    questionnaire.value = storedQuestionnaire || currentQuestionnaire;\n    \n    // 初始化滑动条默认值（关键修复）\n    if (questionnaire.value) {\n      questionnaire.value.questions.forEach(question => {\n        if (question.type === 'slider' && question.answer === null) {\n          question.answer = question.min || 0; // 设置初始值\n        }\n      });\n    }\n  } else {\n    uni.navigateBack();\n  }\n});\n\nconst handleBack = () => {\n  uni.navigateBack({ delta: 1 });\n};\n\n// 判断选项是否选中\nconst isOptionSelected = (questionId, optionId) => {\n  if (!questionnaire.value) return false;\n  const question = questionnaire.value.questions.find(q => q.id === questionId);\n  if (!question || !question.answer) return false;\n  return question.type === 'single' ? question.answer === optionId : question.answer?.includes(optionId);\n};\n\n// 单选/多选选择选项\nconst selectOption = (questionId, optionId) => {\n  if (!questionnaire.value) return;\n  const question = questionnaire.value.questions.find(q => q.id === questionId);\n  if (!question) return;\n\n  if (question.type === 'single') {\n    question.answer = optionId;\n  } else if (question.type === 'multiple') {\n    if (!question.answer) question.answer = [];\n    const index = question.answer.indexOf(optionId);\n    if (index > -1) {\n      question.answer.splice(index, 1);\n    } else {\n      question.answer.push(optionId);\n    }\n  }\n};\n\n// 星级评分选中逻辑\nconst isStarSelected = (questionId, index) => {\n  if (!questionnaire.value) return false;\n  const question = questionnaire.value.questions.find(q => q.id === questionId);\n  if (!question || question.answer === null) return false;\n  const optionIndex = question.options.findIndex(opt => opt.id === question.answer);\n  return index <= optionIndex;\n};\n\n// 选择星级\nconst selectStar = (questionId, optionId, index) => {\n  if (!questionnaire.value) return;\n  const question = questionnaire.value.questions.find(q => q.id === questionId);\n  if (question) question.answer = optionId;\n};\n\n// 计算滑块位置百分比（关键修复）\nconst getSliderPosition = (question) => {\n  if (question.answer === null) question.answer = question.min || 0;\n  const value = question.answer;\n  const min = question.min || 0;\n  const max = question.max || 10;\n  const percent = ((value - min) / (max - min)) * 100;\n  // 限制在0%-100%之间\n  return `${Math.max(0, Math.min(100, percent))}%`;\n};\n\n// 获取滑动条显示文本（关键修复）\nconst getSliderText = (question) => {\n  if (question.answer === null) question.answer = question.min || 0;\n  // 优先显示数值，匹配不到选项时直接显示数值\n  const matchedOption = question.options.find(opt => opt.value === question.answer);\n  return matchedOption?.text || question.answer;\n};\n\n// 滑动过程中实时更新（关键修复）\nconst handleSliderChanging = (questionId, e) => {\n  if (!questionnaire.value) return;\n  const question = questionnaire.value.questions.find(q => q.id === questionId);\n  if (question) question.answer = e.detail.value;\n};\n\n// 滑动结束确认\nconst handleSliderChange = (questionId, e) => {\n  if (!questionnaire.value) return;\n  const question = questionnaire.value.questions.find(q => q.id === questionId);\n  if (question) question.answer = e.detail.value;\n};\n\n// 提交问卷\nconst submitQuestionnaire = () => {\n  if (!questionnaire.value) return;\n  const allAnswered = questionnaire.value.questions.every(question => {\n    if (question.type === 'slider') {\n      return question.answer !== null;\n    } else if (question.type === 'single' || question.type === 'rating') {\n      return question.answer !== null;\n    } else if (question.type === 'multiple') {\n      return question.answer && question.answer.length > 0;\n    }\n    return true;\n  });\n\n  if (!allAnswered) {\n    uni.showToast({ title: '请完成所有问题', icon: 'none' });\n    return;\n  }\n\n  uni.showLoading({ title: '提交中...' });\n  questionnaire.value.status = 'completed';\n  const allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\n  const index = allQuestionnaires.findIndex(q => q.id === questionnaire.value.id);\n  if (index !== -1) {\n    allQuestionnaires[index] = JSON.parse(JSON.stringify(questionnaire.value));\n  } else {\n    allQuestionnaires.push(JSON.parse(JSON.stringify(questionnaire.value)));\n  }\n  uni.setStorageSync('questionnaires', JSON.stringify(allQuestionnaires));\n  uni.hideLoading();\n  uni.showToast({ title: '提交成功', icon: 'success' });\n  setTimeout(() => uni.navigateBack({ delta: 1 }), 800);\n};\n\n// 重置问卷\nconst resetQuestionnaire = () => {\n  uni.showModal({\n    title: '提示',\n    content: '确定重新填写？当前答案将清空',\n    success: (res) => {\n      if (res.confirm && questionnaire.value) {\n        questionnaire.value.questions.forEach(question => {\n          question.answer = null;\n          // 重置滑动条默认值\n          if (question.type === 'slider') {\n            question.answer = question.min || 0;\n          }\n        });\n        questionnaire.value.status = 'pending';\n        const allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\n        const index = allQuestionnaires.findIndex(q => q.id === questionnaire.value.id);\n        if (index !== -1) {\n          allQuestionnaires[index] = JSON.parse(JSON.stringify(questionnaire.value));\n          uni.setStorageSync('questionnaires', JSON.stringify(allQuestionnaires));\n        }\n        uni.showToast({ title: '已重置，可重新填写', icon: 'none' });\n      }\n    }\n  });\n};\r\n\r\n// onMounted(() => {\n//   const pages = getCurrentPages();\n//   const currentPage = pages[pages.length - 1];\n//   const data = currentPage.options.data;\n//   if (data) {\n//     const currentQuestionnaire = JSON.parse(decodeURIComponent(data));\n//     console.log('传递过来的问卷数据：', currentQuestionnaire.questions); // 打印1\n//     const allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\n//     console.log('本地存储的所有问卷：', allQuestionnaires); // 打印2\n//     const storedQuestionnaire = allQuestionnaires.find(q => q.id === currentQuestionnaire.id);\n//     questionnaire.value = storedQuestionnaire || currentQuestionnaire;\n//     console.log('最终使用的问卷问题：', questionnaire.value.questions); // 打印3\n//   }\n// });\n</script>\n\n<style scoped>\n.questionnaire-detail-page {\n  background-color: #f5f5f5;\n  min-height: 100vh;\n  font-size: 16px;\n  padding-bottom: 140rpx;\n}\n\n/* 顶部导航栏样式 */\n.page-header {\n  height: 120rpx;\n  background-color: #87CEEB;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 30rpx;\n  position: relative;\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\n}\n\n.back-button {\n  position: absolute;\n  left: 30rpx;\n  width: 60rpx;\n  height: 60rpx;\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n}\n\n.back-icon {\n  color: #fff;\n  font-size: 36rpx;\n  font-weight: bold;\n}\n\n.header-title {\n  color: #fff;\n  font-size: 36rpx;\n  font-weight: 500;\n  text-align: center;\n  max-width: calc(100% - 120rpx);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 问卷内容样式 */\n.questionnaire-content {\n  padding: 30rpx;\n}\n\n.question-item {\n  background-color: #fff;\n  border-radius: 16rpx;\n  padding: 30rpx;\n  margin-bottom: 20rpx;\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\n}\n\n.question-number {\n  font-size: 28rpx;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 15rpx;\n}\n\n.question-text {\n  font-size: 28rpx;\n  color: #333;\n  margin-bottom: 25rpx;\n  line-height: 1.6;\n}\n\n/* 单选样式 */\n.options-single {\n  display: flex;\n  flex-direction: column;\n  gap: 15rpx;\n}\n\n.option-single {\n  display: flex;\n  align-items: center;\n  padding: 25rpx 30rpx;\n  border: 1rpx solid #eaeaea;\n  border-radius: 12rpx;\n  font-size: 26rpx;\n  color: #666;\n  transition: all 0.2s;\n}\n\n.option-single.selected {\n  border-color: #42b983;\n  background-color: #f6ffed;\n}\n\n.radio-marker {\n  width: 30rpx;\n  height: 30rpx;\n  border: 2rpx solid #999;\n  border-radius: 50%;\n  margin-right: 20rpx;\n  position: relative;\n}\n\n.option-single.selected .radio-marker {\n  border-color: #42b983;\n}\n\n.radio-dot {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 16rpx;\n  height: 16rpx;\n  background-color: #42b983;\n  border-radius: 50%;\n}\n\n/* 多选样式 */\n.options-multiple {\n  display: flex;\n  flex-direction: column;\n  gap: 15rpx;\n}\n\n.option-multiple {\n  display: flex;\n  align-items: center;\n  padding: 25rpx 30rpx;\n  border: 1rpx solid #eaeaea;\n  border-radius: 12rpx;\n  font-size: 26rpx;\n  color: #666;\n  transition: all 0.2s;\n}\n\n.option-multiple.selected {\n  border-color: #42b983;\n  background-color: #f6ffed;\n}\n\n.checkbox-marker {\n  width: 30rpx;\n  height: 30rpx;\n  border: 2rpx solid #999;\n  border-radius: 6rpx;\n  margin-right: 20rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.option-multiple.selected .checkbox-marker {\n  background-color: #42b983;\n  border-color: #42b983;\n}\n\n.check-icon {\n  color: white;\n  font-size: 20rpx;\n  font-weight: bold;\n}\n\n/* 星级评分样式 */\n.options-rating {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15rpx;\n  padding: 10rpx 0;\n}\n\n.star-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15rpx 20rpx;\n  font-size: 40rpx;\n  color: #ccc;\n  transition: all 0.2s;\n  cursor: pointer;\n}\n\n.star-item.selected {\n  color: #faad14;\n}\n\n.star-text {\n  font-size: 22rpx;\n  margin-top: 8rpx;\n}\n\n/* 滑动条样式（重点修复） */\n.options-slider {\n  padding: 40rpx 0 20rpx; /* 增加顶部空间容纳气泡 */\n  position: relative;\n}\n\n.slider-container {\n  padding: 0 10rpx;\n  position: relative;\n  height: 80rpx; /* 增加高度容纳气泡 */\n}\n\n/* 滑动提示气泡 */\n.slider-tooltip-wrapper {\n  position: absolute;\n  top: -50rpx; /* 气泡位置 */\n  transform: translateX(-50%);\n  pointer-events: none;\n  z-index: 10;\n}\n\n.slider-tooltip {\n  background-color: #42b983;\n  color: white;\n  padding: 8rpx 16rpx;\n  border-radius: 8rpx;\n  font-size: 26rpx;\n  white-space: nowrap;\n  box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.2);\n}\n\n.tooltip-arrow {\n  width: 0;\n  height: 0;\n  border-left: 10rpx solid transparent;\n  border-right: 10rpx solid transparent;\n  border-top: 10rpx solid #42b983;\n  margin: 0 auto;\n}\n\nslider {\n  width: 100%;\n  height: 80rpx;\n}\n\n.slider-labels {\n  display: flex;\n  justify-content: space-between;\n  font-size: 22rpx;\n  color: #999;\n  margin-top: 10rpx;\n}\n\n/* 底部操作区 */\n.bottom-actions {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding: 20rpx 30rpx;\n  background-color: #fff;\n  border-top: 1rpx solid #eaeaea;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n  box-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\n}\n\n.submit-btn {\n  background-color: #42b983;\n  color: #fff;\n  border: none;\n  border-radius: 60rpx;\n  width: 600rpx;\n  padding: 25rpx 0;\n  text-align: center;\n  font-size: 30rpx;\n  box-shadow: 0 4rpx 10rpx rgba(66, 185, 131, 0.3);\n}\n\n.reset-btn {\n  width: 600rpx;\n  padding: 25rpx 0;\n  text-align: center;\n  color: #42b983;\n  border: 1rpx solid #42b983;\n  border-radius: 60rpx;\n  font-size: 30rpx;\n  background-color: #fff;\n}\n\n/* 加载状态 */\n.loading-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 300rpx;\n  color: #999;\n  font-size: 28rpx;\n}\n</style>","import MiniProgramPage from 'D:/PJ-system/dxUniapp/pages/questionnaire/questionnaire-detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","onMounted","uni"],"mappings":";;;;;AA8HA,UAAM,gBAAgBA,cAAAA,IAAI,IAAI;AAE9BC,kBAAAA,UAAU,MAAM;AACd,YAAM,QAAQ;AACd,YAAM,cAAc,MAAM,MAAM,SAAS,CAAC;AAC1C,YAAM,OAAO,YAAY,QAAQ;AACjC,UAAI,MAAM;AAER,cAAM,uBAAuB,KAAK,MAAM,mBAAmB,IAAI,CAAC;AAChE,cAAM,oBAAoB,KAAK,MAAMC,cAAAA,MAAI,eAAe,gBAAgB,KAAK,IAAI;AACjF,cAAM,sBAAsB,kBAAkB,KAAK,OAAK,EAAE,OAAO,qBAAqB,EAAE;AACxF,sBAAc,QAAQ,uBAAuB;AAG7C,YAAI,cAAc,OAAO;AACvB,wBAAc,MAAM,UAAU,QAAQ,cAAY;AAChD,gBAAI,SAAS,SAAS,YAAY,SAAS,WAAW,MAAM;AAC1D,uBAAS,SAAS,SAAS,OAAO;AAAA,YACnC;AAAA,UACT,CAAO;AAAA,QACF;AAAA,MACL,OAAS;AACLA,sBAAG,MAAC,aAAY;AAAA,MACjB;AAAA,IACH,CAAC;AAED,UAAM,aAAa,MAAM;AACvBA,oBAAAA,MAAI,aAAa,EAAE,OAAO,EAAG,CAAA;AAAA,IAC/B;AAGA,UAAM,mBAAmB,CAAC,YAAY,aAAa;;AACjD,UAAI,CAAC,cAAc;AAAO,eAAO;AACjC,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,CAAC,YAAY,CAAC,SAAS;AAAQ,eAAO;AAC1C,aAAO,SAAS,SAAS,WAAW,SAAS,WAAW,YAAW,cAAS,WAAT,mBAAiB,SAAS;AAAA,IAC/F;AAGA,UAAM,eAAe,CAAC,YAAY,aAAa;AAC7C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,CAAC;AAAU;AAEf,UAAI,SAAS,SAAS,UAAU;AAC9B,iBAAS,SAAS;AAAA,MACtB,WAAa,SAAS,SAAS,YAAY;AACvC,YAAI,CAAC,SAAS;AAAQ,mBAAS,SAAS,CAAA;AACxC,cAAM,QAAQ,SAAS,OAAO,QAAQ,QAAQ;AAC9C,YAAI,QAAQ,IAAI;AACd,mBAAS,OAAO,OAAO,OAAO,CAAC;AAAA,QACrC,OAAW;AACL,mBAAS,OAAO,KAAK,QAAQ;AAAA,QAC9B;AAAA,MACF;AAAA,IACH;AAGA,UAAM,iBAAiB,CAAC,YAAY,UAAU;AAC5C,UAAI,CAAC,cAAc;AAAO,eAAO;AACjC,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,CAAC,YAAY,SAAS,WAAW;AAAM,eAAO;AAClD,YAAM,cAAc,SAAS,QAAQ,UAAU,SAAO,IAAI,OAAO,SAAS,MAAM;AAChF,aAAO,SAAS;AAAA,IAClB;AAGA,UAAM,aAAa,CAAC,YAAY,UAAU,UAAU;AAClD,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI;AAAU,iBAAS,SAAS;AAAA,IAClC;AAGA,UAAM,oBAAoB,CAAC,aAAa;AACtC,UAAI,SAAS,WAAW;AAAM,iBAAS,SAAS,SAAS,OAAO;AAChE,YAAM,QAAQ,SAAS;AACvB,YAAM,MAAM,SAAS,OAAO;AAC5B,YAAM,MAAM,SAAS,OAAO;AAC5B,YAAM,WAAY,QAAQ,QAAQ,MAAM,OAAQ;AAEhD,aAAO,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,OAAO,CAAC,CAAC;AAAA,IAC/C;AAGA,UAAM,gBAAgB,CAAC,aAAa;AAClC,UAAI,SAAS,WAAW;AAAM,iBAAS,SAAS,SAAS,OAAO;AAEhE,YAAM,gBAAgB,SAAS,QAAQ,KAAK,SAAO,IAAI,UAAU,SAAS,MAAM;AAChF,cAAO,+CAAe,SAAQ,SAAS;AAAA,IACzC;AAGA,UAAM,uBAAuB,CAAC,YAAY,MAAM;AAC9C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI;AAAU,iBAAS,SAAS,EAAE,OAAO;AAAA,IAC3C;AAGA,UAAM,qBAAqB,CAAC,YAAY,MAAM;AAC5C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI;AAAU,iBAAS,SAAS,EAAE,OAAO;AAAA,IAC3C;AAGA,UAAM,sBAAsB,MAAM;AAChC,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,cAAc,cAAc,MAAM,UAAU,MAAM,cAAY;AAClE,YAAI,SAAS,SAAS,UAAU;AAC9B,iBAAO,SAAS,WAAW;AAAA,QACjC,WAAe,SAAS,SAAS,YAAY,SAAS,SAAS,UAAU;AACnE,iBAAO,SAAS,WAAW;AAAA,QACjC,WAAe,SAAS,SAAS,YAAY;AACvC,iBAAO,SAAS,UAAU,SAAS,OAAO,SAAS;AAAA,QACpD;AACD,eAAO;AAAA,MACX,CAAG;AAED,UAAI,CAAC,aAAa;AAChBA,sBAAG,MAAC,UAAU,EAAE,OAAO,WAAW,MAAM,OAAM,CAAE;AAChD;AAAA,MACD;AAEDA,oBAAAA,MAAI,YAAY,EAAE,OAAO,SAAU,CAAA;AACnC,oBAAc,MAAM,SAAS;AAC7B,YAAM,oBAAoB,KAAK,MAAMA,cAAAA,MAAI,eAAe,gBAAgB,KAAK,IAAI;AACjF,YAAM,QAAQ,kBAAkB,UAAU,OAAK,EAAE,OAAO,cAAc,MAAM,EAAE;AAC9E,UAAI,UAAU,IAAI;AAChB,0BAAkB,KAAK,IAAI,KAAK,MAAM,KAAK,UAAU,cAAc,KAAK,CAAC;AAAA,MAC7E,OAAS;AACL,0BAAkB,KAAK,KAAK,MAAM,KAAK,UAAU,cAAc,KAAK,CAAC,CAAC;AAAA,MACvE;AACDA,oBAAG,MAAC,eAAe,kBAAkB,KAAK,UAAU,iBAAiB,CAAC;AACtEA,oBAAG,MAAC,YAAW;AACfA,oBAAG,MAAC,UAAU,EAAE,OAAO,QAAQ,MAAM,UAAS,CAAE;AAChD,iBAAW,MAAMA,cAAG,MAAC,aAAa,EAAE,OAAO,EAAG,CAAA,GAAG,GAAG;AAAA,IACtD;AAGA,UAAM,qBAAqB,MAAM;AAC/BA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS,CAAC,QAAQ;AAChB,cAAI,IAAI,WAAW,cAAc,OAAO;AACtC,0BAAc,MAAM,UAAU,QAAQ,cAAY;AAChD,uBAAS,SAAS;AAElB,kBAAI,SAAS,SAAS,UAAU;AAC9B,yBAAS,SAAS,SAAS,OAAO;AAAA,cACnC;AAAA,YACX,CAAS;AACD,0BAAc,MAAM,SAAS;AAC7B,kBAAM,oBAAoB,KAAK,MAAMA,cAAAA,MAAI,eAAe,gBAAgB,KAAK,IAAI;AACjF,kBAAM,QAAQ,kBAAkB,UAAU,OAAK,EAAE,OAAO,cAAc,MAAM,EAAE;AAC9E,gBAAI,UAAU,IAAI;AAChB,gCAAkB,KAAK,IAAI,KAAK,MAAM,KAAK,UAAU,cAAc,KAAK,CAAC;AACzEA,4BAAG,MAAC,eAAe,kBAAkB,KAAK,UAAU,iBAAiB,CAAC;AAAA,YACvE;AACDA,0BAAG,MAAC,UAAU,EAAE,OAAO,aAAa,MAAM,OAAM,CAAE;AAAA,UACnD;AAAA,QACF;AAAA,MACL,CAAG;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClSA,GAAG,WAAW,eAAe;"}