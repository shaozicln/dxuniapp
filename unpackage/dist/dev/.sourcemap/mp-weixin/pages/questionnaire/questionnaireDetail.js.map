{"version":3,"file":"questionnaireDetail.js","sources":["pages/questionnaire/questionnaireDetail.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcXVlc3Rpb25uYWlyZS9xdWVzdGlvbm5haXJlRGV0YWlsLnZ1ZQ"],"sourcesContent":["<template>\r\n\t<view class=\"questionnaire-detail-page\">\r\n\t\t<view class=\"page-header\" v-if=\"questionnaire\">\r\n\t\t\t<view class=\"back-button\" @click=\"handleBack\">\r\n\t\t\t\t<text class=\"back-icon\">←</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"header-title\">{{ questionnaire.title }}</view>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"loading-state\" v-else>\r\n\t\t\t<text>加载中...</text>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"questionnaire-content\" v-if=\"questionnaire\">\r\n\t\t\t<view class=\"question-item\" v-for=\"(question, qIndex) in questionnaire.questions\" :key=\"qIndex\">\r\n\t\t\t\t<view class=\"question-number\">{{ qIndex + 1 }}. {{ getQuestionTag(question) }}</view>\r\n\t\t\t\t<view class=\"question-text\">{{ question.text }}</view>\r\n\r\n\t\t\t\t<view class=\"question-options\">\r\n\t\t\t\t\t<!-- 1. 单选（圆圈） -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'single'\" class=\"options-single\">\r\n\t\t\t\t\t\t<view class=\"option-single\" v-for=\"(option, oIndex) in question.options\" :key=\"oIndex\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: isOptionSelected(question.id, option.id) }\"\r\n\t\t\t\t\t\t\t@click=\"selectOption(question.id, option.id)\">\r\n\t\t\t\t\t\t\t<view class=\"radio-marker\">\r\n\t\t\t\t\t\t\t\t<view class=\"radio-dot\" v-if=\"isOptionSelected(question.id, option.id)\"></view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text>{{ option.text }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 2. 多选（方块） -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'multiple'\" class=\"options-multiple\">\r\n\t\t\t\t\t\t<view class=\"option-multiple\" v-for=\"(option, oIndex) in question.options\" :key=\"oIndex\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: isOptionSelected(question.id, option.id) }\"\r\n\t\t\t\t\t\t\t@click=\"selectOption(question.id, option.id)\">\r\n\t\t\t\t\t\t\t<view class=\"checkbox-marker\">\r\n\t\t\t\t\t\t\t\t<text class=\"check-icon\" v-if=\"isOptionSelected(question.id, option.id)\">✓</text>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text>{{ option.text }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 3. 星级评分（打星） -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'rating'\" class=\"options-rating\">\r\n\t\t\t\t\t\t<view class=\"star-item\" v-for=\"star in 5\" :key=\"star\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: question.answer !== null && star <= question.answer }\"\r\n\t\t\t\t\t\t\t@click=\"selectStar(question.id, star)\">\r\n\t\t\t\t\t\t\t★\r\n\t\t\t\t\t\t\t<view class=\"star-text\">{{ getStarScore(star) }}分</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 4. 滑动条打分 -->\r\n\t\t\t\t\t<view v-if=\"question.type === 'slider'\" class=\"options-slider\">\r\n\t\t\t\t\t\t<view class=\"slider-container\">\r\n\t\t\t\t\t\t\t<view class=\"slider-tooltip-wrapper\" :style=\"{ left: getSliderPosition(question) }\">\r\n\t\t\t\t\t\t\t\t<view class=\"slider-tooltip\">{{ question.answer }}分</view>\r\n\t\t\t\t\t\t\t\t<view class=\"tooltip-arrow\"></view>\r\n\t\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t\t<slider :min=\"1\" :max=\"10\" :step=\"1\" :value=\"question.answer || 1\"\r\n\t\t\t\t\t\t\t\t@changing=\"handleSliderChanging(question.id, $event)\"\r\n\t\t\t\t\t\t\t\t@change=\"handleSliderChange(question.id, $event)\" activeColor=\"#42b983\"\r\n\t\t\t\t\t\t\t\tbackgroundColor=\"#eaeaea\" block-size=\"32rpx\" block-color=\"#42b983\"\r\n\t\t\t\t\t\t\t\tblock-border-radius=\"50%\"></slider>\r\n\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t<view class=\"slider-labels\">\r\n\t\t\t\t\t\t\t<text>1分</text>\r\n\t\t\t\t\t\t\t<text>10分</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 5. 是否选择题（关键修改：添加条件判断） -->\r\n\t\t\t\t\t<view v-if=\"isBooleanQuestion(question)\" class=\"options-boolean\">\r\n\t\t\t\t\t\t<view class=\"option-boolean\" v-for=\"(option, oIndex) in question.options\" :key=\"oIndex\"\r\n\t\t\t\t\t\t\t:class=\"{ selected: isOptionSelected(question.id, option.id) }\"\r\n\t\t\t\t\t\t\t@click=\"selectOption(question.id, option.id)\">\r\n\t\t\t\t\t\t\t<view class=\"radio-marker\">\r\n\t\t\t\t\t\t\t\t<view class=\"radio-dot\" v-if=\"isOptionSelected(question.id, option.id)\"></view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<text>{{ option.text }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 6. 特殊问题的文本框逻辑（只对特定类型显示） -->\r\n\t\t\t\t\t<view class=\"options-open\" v-if=\"question.qtype === 4 && question.scoringTypeId === 5 && \r\n\t\t\t\t\t                isOptionSelected(question.id, 1)\">\r\n\t\t\t\t\t\t<textarea v-model=\"question.textAnswer\" placeholder=\"请输入相关问题...\" class=\"open-textarea\"\r\n\t\t\t\t\t\t\t@input=\"handleTextInput(question.id, $event)\"></textarea>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<!-- 7. 纯文本框问题 -->\r\n\t\t\t\t\t<view class=\"options-open\" v-if=\"question.qtype === 4 && question.scoringTypeId === 6\">\r\n\t\t\t\t\t\t<textarea v-model=\"question.textAnswer\" placeholder=\"请输入文本...\" class=\"open-textarea\"\r\n\t\t\t\t\t\t\t@input=\"handleTextInput(question.id, $event)\"></textarea>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"bottom-actions\" v-if=\"questionnaire\">\r\n\t\t\t<view class=\"reset-btn\" v-if=\"questionnaire.status === 'completed'\" @click=\"resetQuestionnaire\">\r\n\t\t\t\t重新填写\r\n\t\t\t</view>\r\n\t\t\t<button class=\"submit-btn\" v-if=\"questionnaire.status !== 'completed'\" @click=\"submitQuestionnaire\"\r\n\t\t\t\t:disabled=\"submitting\">\r\n\t\t\t\t{{ submitting ? '提交中...' : '提交问卷' }}\r\n\t\t\t</button>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup>\r\n\timport {\r\n\t\tref,\r\n\t\tonMounted\r\n\t} from 'vue';\r\n\timport {\r\n\t\tpost\r\n\t} from '@/utils/request/request.js'\r\n\r\n\tconst questionnaire = ref(null);\r\n\tconst submitting = ref(false);\r\n\r\n\tconst currentCourse = ref(JSON.parse(uni.getStorageSync('currentCourse') || '{}'));\r\n\r\n\tonMounted(() => {\r\n\t\tconst pages = getCurrentPages();\r\n\t\tconst currentPage = pages[pages.length - 1];\r\n\t\tconst data = currentPage.options.data;\r\n\t\tif (data) {\r\n\t\t\tconst currentQuestionnaire = JSON.parse(decodeURIComponent(data));\r\n\t\t\tconst allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\r\n\t\t\tconst storedQuestionnaire = allQuestionnaires.find(q => q.id === currentQuestionnaire.id);\r\n\t\t\tquestionnaire.value = storedQuestionnaire || currentQuestionnaire;\r\n\r\n\t\t\tif (questionnaire.value) {\r\n\t\t\t\tquestionnaire.value.questions.forEach(question => {\r\n\t\t\t\t\tif (question.answer === null || question.answer === undefined) {\r\n\t\t\t\t\t\tif (question.type === 'slider') {\r\n\t\t\t\t\t\t\tquestion.answer = question.min || 0;\r\n\t\t\t\t\t\t} else if (question.type === 'rating') {\r\n\t\t\t\t\t\t\tquestion.answer = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 初始化文本答案字段\r\n\t\t\t\t\tif (question.textAnswer === undefined) {\r\n\t\t\t\t\t\tquestion.textAnswer = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tuni.navigateBack();\r\n\t\t}\r\n\t});\r\n\r\n\tconst handleBack = () => {\r\n\t\tuni.navigateBack({\r\n\t\t\tdelta: 1\r\n\t\t});\r\n\t};\r\n\r\n\tconst getQuestionTag = (question) => {\r\n\t\tswitch (question.scoringTypeId) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn '[单选题]';\r\n\t\t\tcase 2:\r\n\t\t\t\treturn '[多选题]';\r\n\t\t\tcase 3:\r\n\t\t\t\treturn '[打星题]';\r\n\t\t\tcase 4:\r\n\t\t\t\treturn '[滑动打分题]';\r\n\t\t\tcase 5:\r\n\t\t\t\treturn '[反馈问题指标题]';\r\n\t\t\tcase 6:\r\n\t\t\t\treturn '[文本题]';\r\n\t\t\tdefault:\r\n\t\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\r\n\t// 判断是否为是否题（包括通用和特殊是否题）\r\n\tconst isBooleanQuestion = (question) => {\r\n\t\t// 只对需要显示是否选项的题目返回true\r\n\t\treturn question.type === 'boolean' ||\r\n\t\t\t(question.qtype === 4 && question.scoringTypeId === 5);\r\n\t};\r\n\r\n\tconst isOptionSelected = (questionId, optionId) => {\r\n\t\tif (!questionnaire.value) return false;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (!question || !question.answer) return false;\r\n\t\treturn question.type === 'single' || question.type === 'boolean' ?\r\n\t\t\tquestion.answer === optionId :\r\n\t\t\tquestion.answer?.includes(optionId);\r\n\t};\r\n\r\n\tconst handleTextInput = (questionId, e) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) {\r\n\t\t\tquestion.textAnswer = e.detail.value;\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectOption = (questionId, optionId) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (!question) return;\r\n\r\n\t\tif (question.type === 'single' || question.type === 'boolean') {\r\n\t\t\tquestion.answer = optionId;\r\n\t\t\tconst selectedOption = question.options.find(opt => opt.id === optionId);\r\n\t\t\t// if (selectedOption) {\r\n\t\t\t// \tsubmitScore(questionId, selectedOption.value || 0);\r\n\t\t\t// }\r\n\t\t} else if (question.type === 'multiple') {\r\n\t\t\tif (!question.answer) question.answer = [];\r\n\t\t\tconst index = question.answer.indexOf(optionId);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tquestion.answer.splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tquestion.answer.push(optionId);\r\n\t\t\t}\r\n\t\t\tconst selectedOptions = question.options.filter(opt => question.answer.includes(opt.id));\r\n\t\t\t// const score = selectedOptions.length ?\r\n\t\t\t// \tMath.round(selectedOptions.reduce((sum, opt) => sum + (opt.value || 0), 0) / selectedOptions.length) :\r\n\t\t\t// \t0;\r\n\t\t\t// submitScore(questionId, score);\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectStar = (questionId, star) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) {\r\n\t\t\tquestion.answer = star;\r\n\t\t\t// const score = Math.round((star / 5) * 100);\r\n\t\t\t// submitScore(questionId, score);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getSliderPosition = (question) => {\r\n\t\tconst value = question.answer || 1;\r\n\t\tconst min = 1;\r\n\t\tconst max = 10;\r\n\t\tconst percent = ((value - min) / (max - min)) * 100;\r\n\t\treturn `${Math.max(0, Math.min(100, percent))}%`;\r\n\t};\r\n\r\n\tconst handleSliderChanging = (questionId, e) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) question.answer = e.detail.value;\r\n\t};\r\n\r\n\tconst handleSliderChange = (questionId, e) => {\r\n\t\tif (!questionnaire.value) return;\r\n\t\tconst question = questionnaire.value.questions.find(q => q.id === questionId);\r\n\t\tif (question) {\r\n\t\t\tquestion.answer = e.detail.value;\r\n\t\t\t// const score = Math.round((e.detail.value / 10) * 100);\r\n\t\t\t// submitScore(questionId, score);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStarScore = (star) => {\r\n\t\treturn star * 2;\r\n\t};\r\n\r\n\tconst userInfo = uni.getStorageSync('userInfo') || '[]';\r\n\r\n\t// 计算试卷得分\r\n\tconst calculateTotalScore = () => {\r\n\t\tlet total = 0;\r\n\t\tquestionnaire.value.questions.forEach(question => {\r\n\t\t\tif (question.type === 'single') {\r\n\t\t\t\tconst selectedOption = question.options.find(opt => opt.id === question.answer);\r\n\t\t\t\ttotal += selectedOption?.value || 0;\r\n\t\t\t}\r\n\t\t\t// TODO：其他题型的得分计算逻辑\r\n\t\t});\r\n\t\treturn total;\r\n\t};\r\n\r\n\r\n\t// 评分等级计算函数\r\n\tconst getScoreLevel = (score) => {\r\n\t\tif (!score) return null;\r\n\t\tif (score === 10) return 'A';\r\n\t\tif (score === 8) return 'B';\r\n\t\tif (score === 6) return 'C';\r\n\t\tif (score === 4) return 'D';\r\n\t\treturn 'E';\r\n\t};\r\n\r\n\t// 在submitQuestionnaire方法中添加\r\n\tconst submitQuestionnaire = async () => {\r\n\t\tif (!questionnaire.value || submitting.value) return;\r\n\r\n\t\t// 验证所有问题是否已回答（保持原有的验证逻辑）\r\n\t\tconst allAnswered = questionnaire.value.questions.every(question => {\r\n\t\t\t// 可选问题可以不回答\r\n\t\t\tif (question.qtype === 3) return true;\r\n\r\n\t\t\t// 特殊类型验证\r\n\t\t\tif (question.qtype === 4) {\r\n\t\t\t\tif (question.scoringTypeId === 5) {\r\n\t\t\t\t\t// 必须选择是/否，选是则文本框必填\r\n\t\t\t\t\tif (question.answer === null || question.answer === undefined) return false;\r\n\t\t\t\t\treturn question.answer !== 1 || (question.textAnswer && question.textAnswer.trim() !==\r\n\t\t\t\t\t\t'');\r\n\t\t\t\t}\r\n\t\t\t\tif (question.scoringTypeId === 6) {\r\n\t\t\t\t\t// 文本框必填\r\n\t\t\t\t\treturn question.textAnswer && question.textAnswer.trim() !== '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 其他问题必须回答\r\n\t\t\treturn question.answer !== null && question.answer !== undefined &&\r\n\t\t\t\t(question.type !== 'multiple' || question.answer.length > 0);\r\n\t\t});\r\n\r\n\r\n\t\tif (!allAnswered) {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '请完成所有必填问题',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsubmitting.value = true;\r\n\r\n\t\t\t// 1. 构建提交数据\r\n\t\t\tconst submitData = {\r\n\t\t\t\tmainData: {\r\n\t\t\t\t\tquestionnaireId: questionnaire.value.id,\r\n\t\t\t\t\tpublishId: questionnaire.value.publishId || \"202305001\",\r\n\t\t\t\t\tacademicYearSemester: questionnaire.value.academicYearSemester || \"2025-2026学年 第一学期\",\r\n\t\t\t\t\tquestionnaireName: questionnaire.value.title,\r\n\t\t\t\t\tquestionnaireType: \"课程评估\",\r\n\t\t\t\t\tquestionnaireCategory: '',\r\n\t\t\t\t\tevalType: \"绩效评估\",\r\n\t\t\t\t\tevalTarget: \"课堂教师\",\r\n\t\t\t\t\tevaluationRequirement: \"必修课评估\",\r\n\t\t\t\t\tkclx: questionnaire.value.kclx,\r\n\t\t\t\t\tskdd: questionnaire.value.skdd,\r\n\t\t\t\t\tcourseNo: questionnaire.value.courseNo,\r\n\t\t\t\t\tclassSerial: questionnaire.value.classSerial,\r\n\t\t\t\t\tcourseName: questionnaire.value.courseName,\r\n\t\t\t\t\tstudentClass: '',\r\n\t\t\t\t\tcourseDepartment: '',\r\n\t\t\t\t\tteacherId: \"T1001\",\r\n\t\t\t\t\tteacherName: questionnaire.value.teacherName,\r\n\t\t\t\t\tteacherDepartment: \"计算机学院\",\r\n\t\t\t\t\tteacherTitle: \"副教授\",\r\n\t\t\t\t\tevaluatorId: userInfo.teacherId,\r\n\t\t\t\t\tevaluatorName: userInfo.name,\r\n\t\t\t\t\tevaluatorType: \"教师\",\r\n\t\t\t\t\tevaluatorDepartment: \"计算机学院\",\r\n\t\t\t\t\ttotalScore: 100.00,\r\n\t\t\t\t\tobtainedScore: calculateTotalScore(),\r\n\t\t\t\t\tevaluationTime: \"2024-03-15T14:30:00\"\r\n\t\t\t\t},\r\n\t\t\t\ttargetScores: questionnaire.value.questions.map(question => {\r\n\t\t\t\t\t// 根据问题类型构建不同的得分数据\r\n\t\t\t\t\tlet scoreValue = null;\r\n\t\t\t\t\tlet singleChoice = null;\r\n\t\t\t\t\tlet fillInBlank = null;\r\n\r\n\t\t\t\t\tif (question.type === 'slider') {\r\n\t\t\t\t\t\tscoreValue = question.answer;\r\n\t\t\t\t\t} else if (question.type === 'rating') {\r\n\t\t\t\t\t\tscoreValue = question.answer * 2; // 转换为10分制\r\n\t\t\t\t\t} else if (question.type === 'single' || question.type === 'boolean') {\r\n\t\t\t\t\t\tsingleChoice = question.answer;\r\n\t\t\t\t\t\t// 如果选项有分值，使用选项分值\r\n\t\t\t\t\t\tconst selectedOption = question.options.find(opt => opt.id === question\r\n\t\t\t\t\t\t\t.answer);\r\n\t\t\t\t\t\tif (selectedOption && selectedOption.value) {\r\n\t\t\t\t\t\t\tscoreValue = selectedOption.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (question.type === 'multiple') {\r\n\t\t\t\t\t\t// 多选可以计算选中项的平均分\r\n\t\t\t\t\t\tconst selectedOptions = question.options.filter(opt => question.answer\r\n\t\t\t\t\t\t\t.includes(opt.id));\r\n\t\t\t\t\t\tif (selectedOptions.length > 0) {\r\n\t\t\t\t\t\t\tscoreValue = Math.round(selectedOptions.reduce((sum, opt) => sum + (opt\r\n\t\t\t\t\t\t\t\t.value || 0), 0) / selectedOptions.length);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (question.textAnswer) {\r\n\t\t\t\t\t\tfillInBlank = question.textAnswer;\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttargetUserId: userInfo.teacherId || '', // 被评估教师ID\r\n\t\t\t\t\t\tscoreLevel: getScoreLevel(scoreValue), // 计算评分等级\r\n\t\t\t\t\t\tquestionnaireId: questionnaire.value.id,\r\n\t\t\t\t\t\tquestionId: question.id,\r\n\t\t\t\t\t\tgradingMethodId: question.gmtype || 1,\r\n\t\t\t\t\t\tscoreValue,\r\n\t\t\t\t\t\tsingleChoice,\r\n\t\t\t\t\t\tfillInBlank,\r\n\t\t\t\t\t\tscoreTime: new Date().toISOString()\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t};\r\n\r\n\r\n\t\t\t// 2. 调用提交接口\r\n\t\t\tconst res = await post('/result/submit', submitData);\r\n\r\n\t\t\tif (res.code === 200) {\r\n\t\t\t\t// 3. 提交成功处理\r\n\t\t\t\tquestionnaire.value.status = 'completed';\r\n\r\n\t\t\t\tconsole.log(\"ok\");\r\n\r\n\t\t\t\t// 更新本地存储\r\n\t\t\t\tconst allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\r\n\t\t\t\tconst index = allQuestionnaires.findIndex(q => q.id === questionnaire.value.id);\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tallQuestionnaires[index] = questionnaire.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tallQuestionnaires.push(questionnaire.value);\r\n\t\t\t\t}\r\n\t\t\t\tuni.setStorageSync('questionnaires', JSON.stringify(allQuestionnaires));\r\n\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '问卷提交成功',\r\n\t\t\t\t\ticon: 'success'\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetTimeout(() => uni.navigateBack({\r\n\t\t\t\t\tdelta: 1\r\n\t\t\t\t}), 800);\r\n\t\t\t} else {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: `提交失败: ${res.msg || '未知错误'}`,\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('提交问卷异常:', err);\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '网络错误，提交失败',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tsubmitting.value = false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst resetQuestionnaire = () => {\r\n\t\tuni.showModal({\r\n\t\t\ttitle: '提示',\r\n\t\t\tcontent: '确定重新填写？当前答案将清空',\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.confirm && questionnaire.value) {\r\n\t\t\t\t\tquestionnaire.value.questions.forEach(question => {\r\n\t\t\t\t\t\tquestion.answer = null;\r\n\t\t\t\t\t\tquestion.textAnswer = ''; // 清空文本答案\r\n\t\t\t\t\t\tif (question.type === 'slider') {\r\n\t\t\t\t\t\t\tquestion.answer = question.min || 0;\r\n\t\t\t\t\t\t} else if (question.type === 'rating') {\r\n\t\t\t\t\t\t\tquestion.answer = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tquestionnaire.value.status = 'pending';\r\n\t\t\t\t\tconst allQuestionnaires = JSON.parse(uni.getStorageSync('questionnaires') || '[]');\r\n\t\t\t\t\tconst index = allQuestionnaires.findIndex(q => q.id === questionnaire.value.id);\r\n\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\tallQuestionnaires[index] = JSON.parse(JSON.stringify(questionnaire.value));\r\n\t\t\t\t\t\tuni.setStorageSync('questionnaires', JSON.stringify(allQuestionnaires));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '已重置，可重新填写',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.questionnaire-detail-page {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tmin-height: 100vh;\r\n\t\tfont-size: 16px;\r\n\t\tpadding-bottom: 140rpx;\r\n\t}\r\n\r\n\t.page-header {\r\n\t\theight: 120rpx;\r\n\t\tbackground-color: #87CEEB;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 0 30rpx;\r\n\t\tposition: relative;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.back-button {\r\n\t\tposition: absolute;\r\n\t\tleft: 30rpx;\r\n\t\twidth: 60rpx;\r\n\t\theight: 60rpx;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.back-icon {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.header-title {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: 500;\r\n\t\ttext-align: center;\r\n\t\tmax-width: calc(100% - 120rpx);\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.questionnaire-content {\r\n\t\tpadding: 30rpx;\r\n\t}\r\n\r\n\t.question-item {\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 16rpx;\r\n\t\tpadding: 30rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tfont-size: 28rpx;\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 15rpx;\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tcolor: #f56c6c;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tcolor: #409eff;\r\n\t}\r\n\r\n\t.question-number {\r\n\t\tcolor: #faad14;\r\n\t}\r\n\r\n\t.question-text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #333;\r\n\t\tmargin-bottom: 25rpx;\r\n\t\tline-height: 1.6;\r\n\t}\r\n\r\n\t/* 单选样式 */\r\n\t.options-single {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 15rpx;\r\n\t}\r\n\r\n\t.option-single {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 25rpx 30rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.option-single.selected {\r\n\t\tborder-color: #42b983;\r\n\t\tbackground-color: #f6ffed;\r\n\t}\r\n\r\n\t.radio-marker {\r\n\t\twidth: 30rpx;\r\n\t\theight: 30rpx;\r\n\t\tborder: 2rpx solid #999;\r\n\t\tborder-radius: 50%;\r\n\t\tmargin-right: 20rpx;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.option-single.selected .radio-marker,\r\n\t.option-boolean.selected .radio-marker {\r\n\t\tborder-color: #42b983;\r\n\t}\r\n\r\n\t.radio-dot {\r\n\t\tposition: absolute;\r\n\t\tleft: 50%;\r\n\t\ttop: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 16rpx;\r\n\t\theight: 16rpx;\r\n\t\tbackground-color: #42b983;\r\n\t\tborder-radius: 50%;\r\n\t}\r\n\r\n\t/* 多选样式 */\r\n\t.options-multiple {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 15rpx;\r\n\t}\r\n\r\n\t.option-multiple {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 25rpx 30rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.option-multiple.selected {\r\n\t\tborder-color: #42b983;\r\n\t\tbackground-color: #f6ffed;\r\n\t}\r\n\r\n\t.checkbox-marker {\r\n\t\twidth: 30rpx;\r\n\t\theight: 30rpx;\r\n\t\tborder: 2rpx solid #999;\r\n\t\tborder-radius: 6rpx;\r\n\t\tmargin-right: 20rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.option-multiple.selected .checkbox-marker {\r\n\t\tbackground-color: #42b983;\r\n\t\tborder-color: #42b983;\r\n\t}\r\n\r\n\t.check-icon {\r\n\t\tcolor: white;\r\n\t\tfont-size: 20rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t/* 星级评分样式 */\r\n\t.options-rating {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\twidth: 100%;\r\n\t\tpadding: 10rpx 0;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.star-item {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tpadding: 15rpx 5rpx;\r\n\t\tfont-size: 40rpx;\r\n\t\tcolor: #ccc;\r\n\t\ttransition: all 0.2s;\r\n\t\tcursor: pointer;\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.star-item.selected {\r\n\t\tcolor: #faad14;\r\n\t}\r\n\r\n\t.star-text {\r\n\t\tfont-size: 22rpx;\r\n\t\tmargin-top: 8rpx;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t/* 滑动条样式 */\r\n\t.options-slider {\r\n\t\tpadding: 40rpx 20rpx 20rpx;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.slider-container {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 600rpx;\r\n\t\tpadding: 0 10rpx;\r\n\t\tposition: relative;\r\n\t\theight: 80rpx;\r\n\t}\r\n\r\n\t.slider-tooltip-wrapper {\r\n\t\tposition: absolute;\r\n\t\ttop: -50rpx;\r\n\t\ttransform: translateX(-50%);\r\n\t\tpointer-events: none;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t.slider-tooltip {\r\n\t\tbackground-color: #42b983;\r\n\t\tcolor: white;\r\n\t\tpadding: 8rpx 16rpx;\r\n\t\tborder-radius: 8rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\twhite-space: nowrap;\r\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.2);\r\n\t}\r\n\r\n\t.tooltip-arrow {\r\n\t\twidth: 0;\r\n\t\theight: 0;\r\n\t\tborder-left: 10rpx solid transparent;\r\n\t\tborder-right: 10rpx solid transparent;\r\n\t\tborder-top: 10rpx solid #42b983;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\tslider {\r\n\t\twidth: 100%;\r\n\t\theight: 80rpx;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\t.slider-labels {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 600rpx;\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #666;\r\n\t\tmargin-top: 10rpx;\r\n\t\tpadding: 0 10rpx;\r\n\t}\r\n\r\n\t/* 是否题样式（一行显示，均匀分布） */\r\n\t.options-boolean {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\tgap: 20rpx;\r\n\t\tpadding: 10rpx 0;\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.option-boolean {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 25rpx 30rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #666;\r\n\t\ttransition: all 0.2s;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.option-boolean.selected {\r\n\t\tborder-color: #42b983;\r\n\t\tbackground-color: #f6ffed;\r\n\t}\r\n\r\n\t/* 开放问题样式 */\r\n\t.options-open {\r\n\t\tpadding: 10rpx 0;\r\n\t}\r\n\r\n\t.open-textarea {\r\n\t\twidth: 100%;\r\n\t\tmin-height: 200rpx;\r\n\t\tpadding: 20rpx;\r\n\t\tborder: 1rpx solid #eaeaea;\r\n\t\tborder-radius: 12rpx;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #333;\r\n\t\tline-height: 1.6;\r\n\t\tresize: vertical;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.bottom-actions {\r\n\t\tposition: fixed;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\tpadding: 20rpx 30rpx;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-top: 1rpx solid #eaeaea;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tz-index: 99;\r\n\t\tbox-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t}\r\n\r\n\t.submit-btn {\r\n\t\tbackground-color: #42b983;\r\n\t\tcolor: #fff;\r\n\t\tborder: none;\r\n\t\tborder-radius: 60rpx;\r\n\t\twidth: 600rpx;\r\n\t\tpadding: 25rpx 0;\r\n\t\ttext-align: center;\r\n\t\tfont-size: 30rpx;\r\n\t\tbox-shadow: 0 4rpx 10rpx rgba(66, 185, 131, 0.3);\r\n\t}\r\n\r\n\t.submit-btn:disabled {\r\n\t\tbackground-color: #a0d9b9;\r\n\t\tcursor: not-allowed;\r\n\t}\r\n\r\n\t.reset-btn {\r\n\t\twidth: 600rpx;\r\n\t\tpadding: 25rpx 0;\r\n\t\ttext-align: center;\r\n\t\tcolor: #42b983;\r\n\t\tborder: 1rpx solid #42b983;\r\n\t\tborder-radius: 60rpx;\r\n\t\tfont-size: 30rpx;\r\n\t\tbackground-color: #fff;\r\n\t}\r\n\r\n\t.loading-state {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\theight: 300rpx;\r\n\t\tcolor: #999;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/Uniapp/pages/questionnaire/questionnaireDetail.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","onMounted","post"],"mappings":";;;;;;AA2HC,UAAM,gBAAgBA,kBAAI,IAAI;AAC9B,UAAM,aAAaA,kBAAI,KAAK;AAENA,kBAAG,IAAC,KAAK,MAAMC,cAAAA,MAAI,eAAe,eAAe,KAAK,IAAI,CAAC;AAEjFC,kBAAAA,UAAU,MAAM;AACf,YAAM,QAAQ;AACd,YAAM,cAAc,MAAM,MAAM,SAAS,CAAC;AAC1C,YAAM,OAAO,YAAY,QAAQ;AACjC,UAAI,MAAM;AACT,cAAM,uBAAuB,KAAK,MAAM,mBAAmB,IAAI,CAAC;AAChE,cAAM,oBAAoB,KAAK,MAAMD,cAAAA,MAAI,eAAe,gBAAgB,KAAK,IAAI;AACjF,cAAM,sBAAsB,kBAAkB,KAAK,OAAK,EAAE,OAAO,qBAAqB,EAAE;AACxF,sBAAc,QAAQ,uBAAuB;AAE7C,YAAI,cAAc,OAAO;AACxB,wBAAc,MAAM,UAAU,QAAQ,cAAY;AACjD,gBAAI,SAAS,WAAW,QAAQ,SAAS,WAAW,QAAW;AAC9D,kBAAI,SAAS,SAAS,UAAU;AAC/B,yBAAS,SAAS,SAAS,OAAO;AAAA,cACzC,WAAiB,SAAS,SAAS,UAAU;AACtC,yBAAS,SAAS;AAAA,cAClB;AAAA,YACD;AAED,gBAAI,SAAS,eAAe,QAAW;AACtC,uBAAS,aAAa;AAAA,YACtB;AAAA,UACN,CAAK;AAAA,QACD;AAAA,MACJ,OAAS;AACNA,sBAAG,MAAC,aAAY;AAAA,MAChB;AAAA,IACH,CAAE;AAED,UAAM,aAAa,MAAM;AACxBA,oBAAAA,MAAI,aAAa;AAAA,QAChB,OAAO;AAAA,MACV,CAAG;AAAA,IACH;AAEC,UAAM,iBAAiB,CAAC,aAAa;AACpC,cAAQ,SAAS,eAAa;AAAA,QAC7B,KAAK;AACJ,iBAAO;AAAA,QACR,KAAK;AACJ,iBAAO;AAAA,QACR,KAAK;AACJ,iBAAO;AAAA,QACR,KAAK;AACJ,iBAAO;AAAA,QACR,KAAK;AACJ,iBAAO;AAAA,QACR,KAAK;AACJ,iBAAO;AAAA,QACR;AACC,iBAAO;AAAA,MACR;AAAA,IACH;AAGC,UAAM,oBAAoB,CAAC,aAAa;AAEvC,aAAO,SAAS,SAAS,aACvB,SAAS,UAAU,KAAK,SAAS,kBAAkB;AAAA,IACvD;AAEC,UAAM,mBAAmB,CAAC,YAAY,aAAa;;AAClD,UAAI,CAAC,cAAc;AAAO,eAAO;AACjC,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,CAAC,YAAY,CAAC,SAAS;AAAQ,eAAO;AAC1C,aAAO,SAAS,SAAS,YAAY,SAAS,SAAS,YACtD,SAAS,WAAW,YACpB,cAAS,WAAT,mBAAiB,SAAS;AAAA,IAC7B;AAEC,UAAM,kBAAkB,CAAC,YAAY,MAAM;AAC1C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,UAAU;AACb,iBAAS,aAAa,EAAE,OAAO;AAAA,MAC/B;AAAA,IACH;AAEC,UAAM,eAAe,CAAC,YAAY,aAAa;AAC9C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,CAAC;AAAU;AAEf,UAAI,SAAS,SAAS,YAAY,SAAS,SAAS,WAAW;AAC9D,iBAAS,SAAS;AACK,iBAAS,QAAQ,KAAK,SAAO,IAAI,OAAO,QAAQ;AAAA,MAI1E,WAAa,SAAS,SAAS,YAAY;AACxC,YAAI,CAAC,SAAS;AAAQ,mBAAS,SAAS,CAAA;AACxC,cAAM,QAAQ,SAAS,OAAO,QAAQ,QAAQ;AAC9C,YAAI,QAAQ,IAAI;AACf,mBAAS,OAAO,OAAO,OAAO,CAAC;AAAA,QACnC,OAAU;AACN,mBAAS,OAAO,KAAK,QAAQ;AAAA,QAC7B;AACuB,iBAAS,QAAQ,OAAO,SAAO,SAAS,OAAO,SAAS,IAAI,EAAE,CAAC;AAAA,MAKvF;AAAA,IACH;AAEC,UAAM,aAAa,CAAC,YAAY,SAAS;AACxC,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,UAAU;AACb,iBAAS,SAAS;AAAA,MAGlB;AAAA,IACH;AAEC,UAAM,oBAAoB,CAAC,aAAa;AACvC,YAAM,QAAQ,SAAS,UAAU;AACjC,YAAM,MAAM;AACZ,YAAM,MAAM;AACZ,YAAM,WAAY,QAAQ,QAAQ,MAAM,OAAQ;AAChD,aAAO,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,OAAO,CAAC,CAAC;AAAA,IAC/C;AAEC,UAAM,uBAAuB,CAAC,YAAY,MAAM;AAC/C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI;AAAU,iBAAS,SAAS,EAAE,OAAO;AAAA,IAC3C;AAEC,UAAM,qBAAqB,CAAC,YAAY,MAAM;AAC7C,UAAI,CAAC,cAAc;AAAO;AAC1B,YAAM,WAAW,cAAc,MAAM,UAAU,KAAK,OAAK,EAAE,OAAO,UAAU;AAC5E,UAAI,UAAU;AACb,iBAAS,SAAS,EAAE,OAAO;AAAA,MAG3B;AAAA,IACH;AAEC,UAAM,eAAe,CAAC,SAAS;AAC9B,aAAO,OAAO;AAAA,IAChB;AAEC,UAAM,WAAWA,cAAG,MAAC,eAAe,UAAU,KAAK;AAGnD,UAAM,sBAAsB,MAAM;AACjC,UAAI,QAAQ;AACZ,oBAAc,MAAM,UAAU,QAAQ,cAAY;AACjD,YAAI,SAAS,SAAS,UAAU;AAC/B,gBAAM,iBAAiB,SAAS,QAAQ,KAAK,SAAO,IAAI,OAAO,SAAS,MAAM;AAC9E,oBAAS,iDAAgB,UAAS;AAAA,QAClC;AAAA,MAEJ,CAAG;AACD,aAAO;AAAA,IACT;AAIC,UAAM,gBAAgB,CAAC,UAAU;AAChC,UAAI,CAAC;AAAO,eAAO;AACnB,UAAI,UAAU;AAAI,eAAO;AACzB,UAAI,UAAU;AAAG,eAAO;AACxB,UAAI,UAAU;AAAG,eAAO;AACxB,UAAI,UAAU;AAAG,eAAO;AACxB,aAAO;AAAA,IACT;AAGC,UAAM,sBAAsB,YAAY;AACvC,UAAI,CAAC,cAAc,SAAS,WAAW;AAAO;AAG9C,YAAM,cAAc,cAAc,MAAM,UAAU,MAAM,cAAY;AAEnE,YAAI,SAAS,UAAU;AAAG,iBAAO;AAGjC,YAAI,SAAS,UAAU,GAAG;AACzB,cAAI,SAAS,kBAAkB,GAAG;AAEjC,gBAAI,SAAS,WAAW,QAAQ,SAAS,WAAW;AAAW,qBAAO;AACtE,mBAAO,SAAS,WAAW,KAAM,SAAS,cAAc,SAAS,WAAW,KAAM,MACjF;AAAA,UACD;AACD,cAAI,SAAS,kBAAkB,GAAG;AAEjC,mBAAO,SAAS,cAAc,SAAS,WAAW,KAAM,MAAK;AAAA,UAC7D;AAAA,QACD;AAGD,eAAO,SAAS,WAAW,QAAQ,SAAS,WAAW,WACrD,SAAS,SAAS,cAAc,SAAS,OAAO,SAAS;AAAA,MAC9D,CAAG;AAGD,UAAI,CAAC,aAAa;AACjBA,sBAAAA,MAAI,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACV,CAAI;AACD;AAAA,MACA;AAED,UAAI;AACH,mBAAW,QAAQ;AAGnB,cAAM,aAAa;AAAA,UAClB,UAAU;AAAA,YACT,iBAAiB,cAAc,MAAM;AAAA,YACrC,WAAW,cAAc,MAAM,aAAa;AAAA,YAC5C,sBAAsB,cAAc,MAAM,wBAAwB;AAAA,YAClE,mBAAmB,cAAc,MAAM;AAAA,YACvC,mBAAmB;AAAA,YACnB,uBAAuB;AAAA,YACvB,UAAU;AAAA,YACV,YAAY;AAAA,YACZ,uBAAuB;AAAA,YACvB,MAAM,cAAc,MAAM;AAAA,YAC1B,MAAM,cAAc,MAAM;AAAA,YAC1B,UAAU,cAAc,MAAM;AAAA,YAC9B,aAAa,cAAc,MAAM;AAAA,YACjC,YAAY,cAAc,MAAM;AAAA,YAChC,cAAc;AAAA,YACd,kBAAkB;AAAA,YAClB,WAAW;AAAA,YACX,aAAa,cAAc,MAAM;AAAA,YACjC,mBAAmB;AAAA,YACnB,cAAc;AAAA,YACd,aAAa,SAAS;AAAA,YACtB,eAAe,SAAS;AAAA,YACxB,eAAe;AAAA,YACf,qBAAqB;AAAA,YACrB,YAAY;AAAA,YACZ,eAAe,oBAAqB;AAAA,YACpC,gBAAgB;AAAA,UAChB;AAAA,UACD,cAAc,cAAc,MAAM,UAAU,IAAI,cAAY;AAE3D,gBAAI,aAAa;AACjB,gBAAI,eAAe;AACnB,gBAAI,cAAc;AAElB,gBAAI,SAAS,SAAS,UAAU;AAC/B,2BAAa,SAAS;AAAA,YAC5B,WAAgB,SAAS,SAAS,UAAU;AACtC,2BAAa,SAAS,SAAS;AAAA,YACrC,WAAgB,SAAS,SAAS,YAAY,SAAS,SAAS,WAAW;AACrE,6BAAe,SAAS;AAExB,oBAAM,iBAAiB,SAAS,QAAQ,KAAK,SAAO,IAAI,OAAO,SAC7D,MAAM;AACR,kBAAI,kBAAkB,eAAe,OAAO;AAC3C,6BAAa,eAAe;AAAA,cAC5B;AAAA,YACP,WAAgB,SAAS,SAAS,YAAY;AAExC,oBAAM,kBAAkB,SAAS,QAAQ,OAAO,SAAO,SAAS,OAC9D,SAAS,IAAI,EAAE,CAAC;AAClB,kBAAI,gBAAgB,SAAS,GAAG;AAC/B,6BAAa,KAAK,MAAM,gBAAgB,OAAO,CAAC,KAAK,QAAQ,OAAO,IAClE,SAAS,IAAI,CAAC,IAAI,gBAAgB,MAAM;AAAA,cAC1C;AAAA,YACP,WAAgB,SAAS,YAAY;AAC/B,4BAAc,SAAS;AAAA,YACvB;AAGD,mBAAO;AAAA,cACN,cAAc,SAAS,aAAa;AAAA;AAAA,cACpC,YAAY,cAAc,UAAU;AAAA;AAAA,cACpC,iBAAiB,cAAc,MAAM;AAAA,cACrC,YAAY,SAAS;AAAA,cACrB,iBAAiB,SAAS,UAAU;AAAA,cACpC;AAAA,cACA;AAAA,cACA;AAAA,cACA,YAAW,oBAAI,KAAM,GAAC,YAAa;AAAA,YACzC;AAAA,UACA,CAAK;AAAA,QACL;AAIG,cAAM,MAAM,MAAME,sBAAAA,KAAK,kBAAkB,UAAU;AAEnD,YAAI,IAAI,SAAS,KAAK;AAErB,wBAAc,MAAM,SAAS;AAE7BF,wBAAAA,MAAY,MAAA,OAAA,sDAAA,IAAI;AAGhB,gBAAM,oBAAoB,KAAK,MAAMA,cAAAA,MAAI,eAAe,gBAAgB,KAAK,IAAI;AACjF,gBAAM,QAAQ,kBAAkB,UAAU,OAAK,EAAE,OAAO,cAAc,MAAM,EAAE;AAC9E,cAAI,UAAU,IAAI;AACjB,8BAAkB,KAAK,IAAI,cAAc;AAAA,UAC9C,OAAW;AACN,8BAAkB,KAAK,cAAc,KAAK;AAAA,UAC1C;AACDA,wBAAG,MAAC,eAAe,kBAAkB,KAAK,UAAU,iBAAiB,CAAC;AAEtEA,wBAAAA,MAAI,UAAU;AAAA,YACb,OAAO;AAAA,YACP,MAAM;AAAA,UACX,CAAK;AAED,qBAAW,MAAMA,cAAG,MAAC,aAAa;AAAA,YACjC,OAAO;AAAA,UACZ,CAAK,GAAG,GAAG;AAAA,QACX,OAAU;AACNA,wBAAAA,MAAI,UAAU;AAAA,YACb,OAAO,SAAS,IAAI,OAAO,MAAM;AAAA,YACjC,MAAM;AAAA,UACX,CAAK;AAAA,QACD;AAAA,MACD,SAAQ,KAAK;AACbA,sBAAA,MAAA,MAAA,SAAA,sDAAc,WAAW,GAAG;AAC5BA,sBAAAA,MAAI,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACV,CAAI;AAAA,MACJ,UAAY;AACT,mBAAW,QAAQ;AAAA,MACnB;AAAA,IACH;AAEC,UAAM,qBAAqB,MAAM;AAChCA,oBAAAA,MAAI,UAAU;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS,CAAC,QAAQ;AACjB,cAAI,IAAI,WAAW,cAAc,OAAO;AACvC,0BAAc,MAAM,UAAU,QAAQ,cAAY;AACjD,uBAAS,SAAS;AAClB,uBAAS,aAAa;AACtB,kBAAI,SAAS,SAAS,UAAU;AAC/B,yBAAS,SAAS,SAAS,OAAO;AAAA,cACzC,WAAiB,SAAS,SAAS,UAAU;AACtC,yBAAS,SAAS;AAAA,cAClB;AAAA,YACP,CAAM;AACD,0BAAc,MAAM,SAAS;AAC7B,kBAAM,oBAAoB,KAAK,MAAMA,cAAAA,MAAI,eAAe,gBAAgB,KAAK,IAAI;AACjF,kBAAM,QAAQ,kBAAkB,UAAU,OAAK,EAAE,OAAO,cAAc,MAAM,EAAE;AAC9E,gBAAI,UAAU,IAAI;AACjB,gCAAkB,KAAK,IAAI,KAAK,MAAM,KAAK,UAAU,cAAc,KAAK,CAAC;AACzEA,4BAAG,MAAC,eAAe,kBAAkB,KAAK,UAAU,iBAAiB,CAAC;AAAA,YACtE;AACDA,0BAAAA,MAAI,UAAU;AAAA,cACb,OAAO;AAAA,cACP,MAAM;AAAA,YACZ,CAAM;AAAA,UACD;AAAA,QACD;AAAA,MACJ,CAAG;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACveA,GAAG,WAAW,eAAe;"}