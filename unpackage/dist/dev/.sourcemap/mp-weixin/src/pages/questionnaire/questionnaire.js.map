{"version":3,"file":"questionnaire.js","sources":["src/pages/questionnaire/questionnaire.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/c3JjL3BhZ2VzL3F1ZXN0aW9ubmFpcmUvcXVlc3Rpb25uYWlyZS52dWU"],"sourcesContent":["·<template>\r\n\t<view class=\"questionnaire-page\">\r\n\r\n\t\t<view class=\"page-header\">\r\n\t\t\t<!-- 返回按钮 -->\r\n\t\t\t<view class=\"back-button\" @click=\"handleBack\">\r\n\t\t\t\t<text class=\"back-icon\">←</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"header-title\">我的问卷</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 筛选栏 -->\r\n\t\t<view class=\"filter-bar\">\r\n\t\t\t<view class=\"filter-item\" :class=\"{ active: currentFilter === 'all' }\" @click=\"currentFilter = 'all'\">全部\r\n\t\t\t</view>\r\n\t\t\t<view class=\"filter-item\" :class=\"{ active: currentFilter === 'pending' }\"\r\n\t\t\t\t@click=\"currentFilter = 'pending'\">未完成</view>\r\n\t\t\t<view class=\"filter-item\" :class=\"{ active: currentFilter === 'completed' }\"\r\n\t\t\t\t@click=\"currentFilter = 'completed'\">已完成</view>\r\n\t\t</view>\r\n\r\n\t\t<view v-if=\"isInitialState\" class=\"initial-hint\">\r\n\t\t\t点击左下角左下角选择对应课程问卷\r\n\t\t</view>\r\n\t\t<!-- 问卷列表区域 -->\r\n\t\t<view v-else class=\"questionnaire-list\">\r\n\t\t\t<view class=\"questionnaire-item\" v-for=\"(questionnaire, index) in filteredQuestionnaires\" :key=\"index\"\r\n\t\t\t\t@click=\"navigateToDetail(questionnaire)\">\r\n\t\t\t\t<view class=\"questionnaire-header\">\r\n\t\t\t\t\t<view class=\"questionnaire-title\">{{ questionnaire.title }}</view>\r\n\t\t\t\t\t<view class=\"questionnaire-status\"\r\n\t\t\t\t\t\t:class=\"questionnaire.status === 'completed' ? 'status-completed' : 'status-pending'\">\r\n\t\t\t\t\t\t{{ questionnaire.status === 'completed' ? '已完成' : '未完成' }}\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"questionnaire-meta\">\r\n\t\t\t\t\t<view class=\"questionnaire-grade\">分级: {{ questionnaire.grade }}</view>\r\n\t\t\t\t\t<view class=\"questionnaire-date\">{{ questionnaire.date }}</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"questionnaire-desc\">{{ questionnaire.description }}</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 左下角悬浮按钮（三条杠图标） -->\r\n\t\t<view class=\"float-button\" @click=\"showCheckCourse = true\">\r\n\t\t\t<view class=\"bar\"></view>\r\n\t\t\t<view class=\"bar\"></view>\r\n\t\t\t<view class=\"bar\"></view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 弹窗容器（包含checkCourseOnr组件） -->\r\n\t\t<view v-if=\"showCheckCourse\" class=\"modal-overlay\" @click=\"showCheckCourse = false\">\r\n\t\t\t<view class=\"modal-content\" @click.stop>\r\n\t\t\t\t<check-course-qnr @close=\"showCheckCourse = false\" @selectCourse=\"handleSelectCourse\" />\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t</view>\r\n</template>\r\n\r\n<script setup>\r\n\timport {\r\n\t\tref,\r\n\t\treactive,\r\n\t\tcomputed,\r\n\t\tonMounted,\r\n\t} from 'vue';\r\n\r\n\timport {\r\n\t\tonShow\r\n\t} from '@dcloudio/uni-app';\r\n\timport checkCourseQnr from './checkCourseQnr.vue';\r\n\r\n\timport {\r\n\t\tget\r\n\t} from '@/src/utils/request/request';\r\n\r\n\tconst questionnaires = ref([]);\r\n\t// 初始状态控制变量\r\n\tconst isInitialState = ref(true);\r\n\r\n\t// 抽离的加载数据方法（通用逻辑）\r\n\tconst loadQuestionnaires = () => {\r\n\t\tconst savedQuestionnaires = uni.getStorageSync('questionnaires');\r\n\t\tif (savedQuestionnaires) {\r\n\t\t\tconst loadedData = JSON.parse(savedQuestionnaires);\r\n\t\t\t// 清空原有数据并替换为最新数据（确保响应式更新）\r\n\t\t\tquestionnaires.value.splice(0, questionnaires.value.length);\r\n\t\t\tloadedData.forEach(item => {\r\n\t\t\t\tquestionnaires.push(item);\r\n\t\t\t});\r\n\t\t\t// 有数据则退出初始状态\r\n\t\t\tisInitialState.value = loadedData.length === 0;\r\n\t\t} else {\r\n\t\t\t// 首次加载且无本地数据时，保存初始数据\r\n\t\t\tuni.setStorageSync('questionnaires', JSON.stringify(questionnaires));\r\n\t\t}\r\n\t};\r\n\r\n\t//通过课程信息获取问卷数据\r\n\tconst fetchCourseQuestionnaires = async (courseNo, classSerial) => {\r\n\t\ttry {\r\n\t\t\tuni.showLoading({\r\n\t\t\t\ttitle: '获取问卷中...'\r\n\t\t\t});\r\n\r\n\t\t\tconst res = await get('/qnr/getCourseQnrCon', {\r\n\t\t\t\tcourseNo,\r\n\t\t\t\tclassSerial\r\n\t\t\t});\r\n\r\n\t\t\tuni.hideLoading();\r\n\t\t\tif (res.code === 200) {\r\n\t\t\t\t// 转换API返回数据格式\r\n\t\t\t\tconst formattedData = res.data.map(item => ({\r\n\t\t\t\t\tid: item.questionnaireId,\r\n\t\t\t\t\ttitle: item.questionnaireName,\r\n\t\t\t\t\tgrade: '课程问卷', // 可根据实际需求调整\r\n\t\t\t\t\tdescription: `课程: ${item.courseName} 教师: ${item.teacherName}`,\r\n\t\t\t\t\tdate: new Date().toLocaleDateString(), // 使用当前日期或接口返回的日期\r\n\t\t\t\t\tstatus: 'pending', // 默认为未完成状态\r\n\t\t\t\t\tquestions: item.questions.map(question => ({\r\n\t\t\t\t\t\tid: question.id,\r\n\t\t\t\t\t\ttext: question.name,\r\n\t\t\t\t\t\ttype: mapQuestionType(question.scoringTypeId),\r\n\t\t\t\t\t\t//options: getDefaultOptions(question.scoringTypeId),\r\n\t\t\t\t\t\t// 为滑动条和星级设置范围属性\r\n\t\t\t\t\t\tmin: question.scoringTypeId === 3 ? 0 : (question\r\n\t\t\t\t\t\t\t.scoringTypeId === 4 ? 1 : undefined),\r\n\t\t\t\t\t\tmax: question.scoringTypeId === 3 ? 5 : (question\r\n\t\t\t\t\t\t\t.scoringTypeId === 4 ? 10 : undefined),\r\n\t\t\t\t\t\tstep: question.scoringTypeId === 4 ? 1 : undefined,\r\n\t\t\t\t\t\tanswer: null\r\n\t\t\t\t\t}))\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// questionnaires.value = res.rows || [];\r\n\t\t\t\tquestionnaires.value = formattedData;\r\n\t\t\t\tconsole.log(questionnaires.value);\r\n\t\t\t\t// 保存到本地存储\r\n\t\t\t\tuni.setStorageSync('questionnaires', JSON.stringify(formattedData));\r\n\r\n\t\t\t\t// 获取数据后退出初始状态\r\n\t\t\t\tisInitialState.value = false;\r\n\t\t\t} else {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: res.msg || '未找到相关问卷',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tuni.hideLoading();\r\n\t\t\tconsole.error('获取课程问卷失败:', err);\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '获取问卷失败，请重试',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// 辅助函数：映射题型（根据实际业务调整）\r\n\tconst mapQuestionType = (typeId) => {\r\n\t\t// 假设1:单选题, 2:多选题, 3:评分题, 4:滑动条\r\n\t\tconst typeMap = {\r\n\t\t\t1: 'single',\r\n\t\t\t2: 'multiple',\r\n\t\t\t3: 'rating',\r\n\t\t\t4: 'slider'\r\n\t\t};\r\n\t\treturn typeMap[typeId] || 'single';\r\n\t};\r\n\r\n\t// 辅助函数：根据题型生成默认选项（根据实际业务调整）\r\n\tconst getDefaultOptions = (typeId) => {\r\n\t\tswitch (typeId) {\r\n\t\t\tcase 1: // 单选题\r\n\t\t\t\treturn [{\r\n\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\ttext: '选项1'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 2,\r\n\t\t\t\t\t\ttext: '选项2'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 3,\r\n\t\t\t\t\t\ttext: '选项3'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 4,\r\n\t\t\t\t\t\ttext: '选项4'\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\tcase 2: // 多选题\r\n\t\t\t\treturn [{\r\n\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\ttext: '选项A'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 2,\r\n\t\t\t\t\t\ttext: '选项B'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 3,\r\n\t\t\t\t\t\ttext: '选项C'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 4,\r\n\t\t\t\t\t\ttext: '选项D'\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\tcase 3: // 打星题\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: 0, max: 5\r\n\t\t\t\t};\r\n\t\t\tcase 4: // 滑动条\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: 1, max: 10, step: 1\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn [];\r\n\t\t}\r\n\t};\r\n\r\n\t// 页面加载时初始化数据\r\n\tonMounted(() => {\r\n\t\tloadQuestionnaires();\r\n\t});\r\n\r\n\tonShow(() => {\r\n\t\tloadQuestionnaires(); // 从详情页返回时重新加载数据\r\n\t});\r\n\r\n\r\n\t// 当前筛选条件\r\n\tconst currentFilter = ref('all');\r\n\r\n\t// 显示的问卷列表\r\n\tconst filteredQuestionnaires = computed(() => {\r\n\t\tif (currentFilter.value === 'all') {\r\n\t\t\treturn questionnaires.value;\r\n\t\t} else if (currentFilter.value === 'pending') {\r\n\t\t\treturn questionnaires.value.filter(q => q.status === 'pending');\r\n\t\t} else {\r\n\t\t\treturn questionnaires.value.filter(q => q.status === 'completed');\r\n\t\t}\r\n\t});\r\n\r\n\t// 跳转到问卷详情页（小程序路由）\r\n\tconst navigateToDetail = (questionnaire) => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: `/pages/questionnaire/questionnaireDetail?data=${encodeURIComponent(JSON.stringify(questionnaire))}`\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleBack = () => {\r\n\t\tuni.navigateBack({\r\n\t\t\tdelta: 1 // 返回上一级页面\r\n\t\t});\r\n\t};\r\n\r\n\t// 控制弹窗显示\r\n\tconst showCheckCourse = ref(false);\r\n\r\n\t// 接收课程选择事件\r\n\tconst handleSelectCourse = (courseNo, classSerial) => {\r\n\t\tshowCheckCourse.value = false;\r\n\t\t// 这里可以处理课程选择后的逻辑（如更新问卷数据）\r\n\t\tfetchCourseQuestionnaires(courseNo, classSerial);\r\n\t\tconsole.log('选中课程：', courseNo, classSerial);\r\n\t};\r\n</script>\r\n\r\n<style scoped>\r\n\t.initial-hint {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tfont-size: 32rpx;\r\n\t\tcolor: #999;\r\n\t\ttext-align: center;\r\n\t\tpadding: 0 30rpx;\r\n\t}\r\n\r\n\t.questionnaire-page {\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tmin-height: 100vh;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\t.page-header {\r\n\t\theight: 120rpx;\r\n\t\tbackground-color: #c9edf5;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 30rpx 30rpx 15rpx;\r\n\t\tposition: relative;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\r\n\r\n\r\n\t.filter-bar {\r\n\t\tdisplay: flex;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-bottom: 1rpx solid #eaeaea;\r\n\t}\r\n\r\n\t.filter-item {\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t\tpadding: 25rpx 0;\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #666;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.filter-item.active {\r\n\t\tcolor: #42b983;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.filter-item.active::after {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\twidth: 40rpx;\r\n\t\theight: 6rpx;\r\n\t\tbackground-color: #42b983;\r\n\t\tborder-radius: 3rpx;\r\n\t}\r\n\r\n\t.questionnaire-list {\r\n\t\tpadding: 20rpx;\r\n\t}\r\n\r\n\t.questionnaire-item {\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 16rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tpadding: 30rpx;\r\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n\t\ttransition: transform 0.2s;\r\n\t}\r\n\r\n\t.questionnaire-item:active {\r\n\t\ttransform: scale(0.99);\r\n\t}\r\n\r\n\t.questionnaire-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\r\n\t.questionnaire-title {\r\n\t\tfont-size: 32rpx;\r\n\t\tfont-weight: 500;\r\n\t\tcolor: #333;\r\n\t\tmax-width: 80%;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.questionnaire-status {\r\n\t\tpadding: 8rpx 16rpx;\r\n\t\tborder-radius: 16rpx;\r\n\t\tfont-size: 24rpx;\r\n\t}\r\n\r\n\t.status-completed {\r\n\t\tbackground-color: #e8f5e9;\r\n\t\tcolor: #4caf50;\r\n\t}\r\n\r\n\t.status-pending {\r\n\t\tbackground-color: #f3f3f3;\r\n\t\tcolor: #999;\r\n\t}\r\n\r\n\t.questionnaire-meta {\r\n\t\tdisplay: flex;\r\n\t\tcolor: #666;\r\n\t\tfont-size: 24rpx;\r\n\t\tmargin-bottom: 15rpx;\r\n\t}\r\n\r\n\t.questionnaire-grade {\r\n\t\tmargin-right: 20rpx;\r\n\t}\r\n\r\n\t.questionnaire-desc {\r\n\t\tcolor: #888;\r\n\t\tfont-size: 26rpx;\r\n\t\tline-height: 1.5;\r\n\t\tmax-height: 80rpx;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\tdisplay: -webkit-box;\r\n\t\t-webkit-line-clamp: 2;\r\n\t\t-webkit-box-orient: vertical;\r\n\t}\r\n\r\n\t.back-icon {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.back-button {\r\n\t\tposition: absolute;\r\n\t\tleft: 20rpx;\r\n\t\ttop: 60rpx;\r\n\t\twidth: 60rpx;\r\n\t\theight: 60rpx;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tz-index: 10;\r\n\t\ttransition: background-color 0.2s;\r\n\t}\r\n\r\n\t.back-button:active {\r\n\t\tbackground-color: rgba(255, 255, 255, 0.3);\r\n\t}\r\n\r\n\t.back-icon {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\r\n\t/* 标题样式（保持居中） */\r\n\t.header-title {\r\n\t\tcolor: #777;\r\n\t\tfont-size: 36rpx;\r\n\t\tfont-weight: 500;\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t\tmargin-left: -100rpx;\r\n\t\t/* 抵消返回按钮宽度，确保标题居中 */\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t/* 悬浮按钮样式 */\r\n\t.float-button {\r\n\t\tposition: fixed;\r\n\t\tleft: 30rpx;\r\n\t\tbottom: 30rpx;\r\n\t\twidth: 80rpx;\r\n\t\theight: 80rpx;\r\n\t\tbackground-color: #42b983;\r\n\t\tborder-radius: 50%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tbox-shadow: 0 4rpx 10rpx rgba(0, 0, 0, 0.2);\r\n\t\tz-index: 999;\r\n\t}\r\n\r\n\t.bar {\r\n\t\twidth: 40rpx;\r\n\t\theight: 6rpx;\r\n\t\tbackground-color: white;\r\n\t\tborder-radius: 3rpx;\r\n\t\tmargin: 4rpx 0;\r\n\t}\r\n\r\n\t/* 弹窗遮罩层 */\r\n\t.modal-overlay {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t\tz-index: 1000;\r\n\t\tdisplay: flex;\r\n\t\talign-items: flex-end;\r\n\t}\r\n\r\n\t/* 弹窗内容（占屏幕下方70%） */\r\n\t.modal-content {\r\n\t\twidth: 100%;\r\n\t\theight: 85vh;\r\n\t\tbackground-color: white;\r\n\t\tborder-top-left-radius: 30rpx;\r\n\t\tborder-top-right-radius: 30rpx;\r\n\t\toverflow: hidden;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/小程序/HBuilderX.4.75.2025071105/dx-project/dxuniapp/src/pages/questionnaire/questionnaire.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","get","onMounted","onShow","computed"],"mappings":"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"}