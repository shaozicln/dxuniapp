{"version":3,"file":"request.js","sources":["src/utils/request/request.js"],"sourcesContent":["import {getCurrentInstance} from 'vue';\r\n\r\nexport const getBaseURL = () => {\r\n  let baseUrl = 'https://jxpj.neau.edu.cn/api/v1'; // 初始值设为空字符串，避免 undefined\r\n  const instance = getCurrentInstance();\r\n\r\n  /* // 1. 尝试从 Vue 3 实例获取全局 URL\r\n  if (instance && instance.appContext?.config?.globalProperties?.$URL) {\r\n    baseUrl = instance.appContext.config.globalProperties.$URL;\r\n    console.log('从 Vue 3 实例获取到全局 URL:', baseUrl); \r\n  } \r\n  // 2. 兼容 Vue 2 环境\r\n  else if (window.Vue && window.Vue.prototype.$URL) {\r\n    baseUrl = window.Vue.prototype.$URL;\r\n    console.log('从 Vue 2 原型获取到全局 URL:', baseUrl); \r\n  } \r\n  // 3. 兜底默认值，防止 baseUrl 为空\r\n  else {\r\n    baseUrl = 'http://localhost:8080'; // 默认地址，可根据实际修改\r\n    console.warn('未获取到全局 URL，使用默认值:', baseUrl); \r\n  }\r\n\r\n  // 此时 baseUrl 一定有值，再调用 replace 方法 */\r\n  const formattedUrl = baseUrl.replace(/\\/$/, ''); \r\n  console.log('格式化后的基础 URL:', formattedUrl); // 输出最终使用的 URL\r\n  return formattedUrl;\r\n};\r\n\r\n\r\n\r\nexport const request = (options) => {\r\n\t// 1. 获取基础URL并拼接完整路径\r\n\tconst baseURL = getBaseURL();\r\n\tlet fullUrl = options.url;\r\n\r\n\tif (!fullUrl.startsWith('http://') && !fullUrl.startsWith('https://')) {\r\n\t\tconst path = fullUrl.replace(/^\\/+/, ''); // 移除路径开头的斜杠\r\n\t\tfullUrl = `${baseURL}/${path}`;\r\n\t}\r\n\r\n\t// 2. 自动获取本地存储的Token\r\n\tconst token = uni.getStorageSync('Admin-Token') || '';\r\n\r\n\t// 3. 构建请求头（自动携带Token）\r\n\tconst defaultHeaders = {\r\n\t\t'Accept': '*/*',\r\n\t\t'Connection': 'keep-alive',\r\n\t\t...(token && {\r\n\t\t\t'Authorization': token\r\n\t\t}), // 有Token时才添加\r\n\t\t...options.headers // 允许用户传入自定义头（可覆盖默认值）\r\n\t};\r\n\r\n\tconsole.log('请求URL:', fullUrl);\r\n\tconsole.log('请求头:', defaultHeaders);\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.request({\r\n\t\t\t...options,\r\n\t\t\turl: fullUrl,\r\n\t\t\theader: defaultHeaders, // 注意uni-app中是header而非headers\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\t// 统一处理401 Token失效\r\n\t\t\t\tif (res.statusCode === 401) {\r\n\t\t\t\t\tuni.removeStorageSync('Admin-Token');\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '登录已过期，请重新登录',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treject(new Error('Token失效'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tresolve(res.data);\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\treject(new Error(`请求失败: ${err.errMsg}`));\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n\r\n// 快捷请求方法\r\nexport const get = (url, data = {}, options = {}) => {\r\n\treturn request({\r\n\t\t...options,\r\n\t\turl,\r\n\t\tdata,\r\n\t\tmethod: 'GET'\r\n\t});\r\n};\r\n\r\nexport const post = (url, data = {}, options = {}) => {\r\n\treturn request({\r\n\t\t...options,\r\n\t\turl,\r\n\t\tdata,\r\n\t\tmethod: 'POST'\r\n\t});\r\n};\r\n\r\nexport const put = (url, data = {}, options = {}) => {\r\n\treturn request({\r\n\t\t...options,\r\n\t\turl,\r\n\t\tdata,\r\n\t\tmethod: 'PUT'\r\n\t});\r\n};\r\n\r\nexport const del = (url, data = {}, options = {}) => {\r\n\treturn request({\r\n\t\t...options,\r\n\t\turl,\r\n\t\tdata,\r\n\t\tmethod: 'DELETE'\r\n\t});\r\n};"],"names":["uni"],"mappings":";;AAEO,MAAM,aAAa,MAAM;AAC9B,MAAI,UAAU;AAoBd,QAAM,eAAe,QAAQ,QAAQ,OAAO,EAAE;AAC9CA,yEAAY,gBAAgB,YAAY;AACxC,SAAO;AACT;AAIO,MAAM,UAAU,CAAC,YAAY;AAEnC,QAAM,UAAU;AAChB,MAAI,UAAU,QAAQ;AAEtB,MAAI,CAAC,QAAQ,WAAW,SAAS,KAAK,CAAC,QAAQ,WAAW,UAAU,GAAG;AACtE,UAAM,OAAO,QAAQ,QAAQ,QAAQ,EAAE;AACvC,cAAU,GAAG,OAAO,IAAI,IAAI;AAAA,EAC5B;AAGD,QAAM,QAAQA,cAAG,MAAC,eAAe,aAAa,KAAK;AAGnD,QAAM,iBAAiB;AAAA,IACtB,UAAU;AAAA,IACV,cAAc;AAAA,IACd,GAAI,SAAS;AAAA,MACZ,iBAAiB;AAAA,IACjB;AAAA;AAAA,IACD,GAAG,QAAQ;AAAA;AAAA,EACb;AAECA,gBAAA,MAAA,MAAA,OAAA,sCAAY,UAAU,OAAO;AAC7BA,gBAAA,MAAA,MAAA,OAAA,sCAAY,QAAQ,cAAc;AAElC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvCA,kBAAAA,MAAI,QAAQ;AAAA,MACX,GAAG;AAAA,MACH,KAAK;AAAA,MACL,QAAQ;AAAA;AAAA,MACR,SAAS,CAAC,QAAQ;AAEjB,YAAI,IAAI,eAAe,KAAK;AAC3BA,8BAAI,kBAAkB,aAAa;AACnCA,wBAAAA,MAAI,UAAU;AAAA,YACb,OAAO;AAAA,YACP,MAAM;AAAA,UACZ,CAAM;AACD,iBAAO,IAAI,MAAM,SAAS,CAAC;AAC3B;AAAA,QACA;AACD,gBAAQ,IAAI,IAAI;AAAA,MAChB;AAAA,MACD,MAAM,CAAC,QAAQ;AACd,eAAO,IAAI,MAAM,SAAS,IAAI,MAAM,EAAE,CAAC;AAAA,MACvC;AAAA,IACJ,CAAG;AAAA,EACH,CAAE;AACF;AAYY,MAAC,OAAO,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AACrD,SAAO,QAAQ;AAAA,IACd,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EACV,CAAE;AACF;;"}