{"version":3,"file":"getInfo.js","sources":["utils/login/getInfo.js"],"sourcesContent":["import { get } from '../request/request.js';\nexport const getInfo = {\n  // 登出清理方法：补充清理 userInfo 中的身份信息，确保状态彻底重置\n  _clearLoginState(redirectCb) {\n    uni.removeStorageSync('autoToken');\n    uni.removeStorageSync('token');\n    uni.removeStorageSync('userIdentity');\n    const existingUserInfo = uni.getStorageSync('userInfo') || {};\n    if (existingUserInfo.userIdentity) {\n      delete existingUserInfo.userIdentity;\n      uni.setStorageSync('userInfo', existingUserInfo);\n    }\n    uni.removeStorageSync('isLogin');\n    redirectCb && redirectCb();\n  },\n\n  async _handleGetInfoRequest(redirectCb) {\n    try {\n      // 获取本地 Token\n      const token = uni.getStorageSync('autoToken') || uni.getStorageSync('token');\n      if (!token) {\n        console.warn('getInfo: 本地无有效Token，需重新登录');\n        this._clearLoginState(redirectCb);\n        return;\n      }\n\n      // 发起接口请求\n      const res = await get(\n        'https://jxpj.neau.edu.cn/api/v1/getInfo',\n        { headers: { 'Authorization': `${token}` } }\n      );\n\n      // 响应格式校验\n      if (!res || typeof res.code === 'undefined') {\n        console.error('getInfo: 接口返回格式异常', res);\n        uni.showToast({ title: '获取身份信息失败：接口格式错误', icon: 'none', duration: 2000 });\n        return;\n      }\n\n      // 业务逻辑处理\n      if (res.code === 200) {\n        if (!Array.isArray(res.roles) || res.roles.length === 0) {\n          console.error('getInfo: 角色信息缺失或格式错误', res);\n          uni.showToast({ title: '获取身份信息失败：角色数据无效', icon: 'none', duration: 2000 });\n          this._clearLoginState(redirectCb);\n          return;\n        }\n        let userIdentity = '';\n        if (res.roles.includes('leader')) {\n          userIdentity = '领导';\n        } else if (res.roles.includes('supervisor')) {\n          userIdentity = '督导';\n        } else if (res.roles.includes('teacher')) {\n          userIdentity = '教师'; \n        } else if (res.roles.includes('student')) {\n          userIdentity = '学生';\n        } else {\n          console.warn('getInfo: 不支持的用户角色', res.roles);\n          uni.showToast({ title: '当前身份不允许登录', icon: 'none', duration: 2000 });\n          this._clearLoginState(redirectCb);\n          return;\n        }\n        const existingUserInfo = uni.getStorageSync('userInfo') || {};\n        const updatedUserInfo = {\n          ...existingUserInfo,\n          userIdentity: userIdentity, \n          roles: res.roles \n        };\n        uni.setStorageSync('userInfo', updatedUserInfo); \n        uni.setStorageSync('isLogin', true);\n        uni.setStorageSync('userIdentity', userIdentity);\n        \n        console.log('getInfo: 身份信息获取成功', { userIdentity, updatedUserInfo });\n\n      } else {\n        console.warn('getInfo: 获取身份信息失败', { code: res.code, msg: res.msg });\n        uni.showToast({\n          title: res.msg || `获取失败（错误码：${res.code}）`,\n          icon: 'none',\n          duration: 2000\n        });\n\n        // Token失效处理\n        if (res.code === 401) {\n          this._clearLoginState(redirectCb);\n        }\n      }\n\n    } catch (err) {\n      console.error('getInfo文件下的_handleGetInfoRequest代码出现问题: 向后端getinfo接口发送请求接收异常', { errMsg: err.message, stack: err.stack });\n      uni.showToast({ title: '网络异常，无法获取身份信息', icon: 'none', duration: 2000 });\n    }\n  }\n};"],"names":["uni","get"],"mappings":"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"}