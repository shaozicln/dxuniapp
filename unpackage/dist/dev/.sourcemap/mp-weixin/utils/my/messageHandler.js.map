{"version":3,"file":"messageHandler.js","sources":["utils/my/messageHandler.js"],"sourcesContent":["// 消息处理工具\nexport const messageHandler = {\n  /**\n   * 处理消息点击事件\n   * @param {Array} messageList - 消息列表数组\n   * @param {Object} item - 消息项\n   * @param {number} index - 消息索引\n   */\n  handleItemTap(messageList, item, index) {\n    if (!this.isValidMessageIndex(messageList, item, index)) return;\n    \n    console.log('点击消息：', item);\n    if (item.unread) {\n      messageList[index].unread = false;\n    }\n  },\n\n  /**\n   * 取消消息标红\n   * @param {Array} messageList - 消息列表数组\n   * @param {number} index - 消息索引\n   */\n  cancelUnread(messageList, index) {\n    if (!this.isValidIndex(messageList, index)) return;\n    \n    messageList[index].unread = false;\n    uni.showToast({ title: '已取消标红', icon: 'none', duration: 1200 });\n  },\n\n  /**\n   * 显示删除确认弹窗\n   * @param {number} index - 消息索引\n   * @returns {Promise<boolean>} 是否确认删除\n   */\n  showDeleteConfirm(index) {\n    return new Promise((resolve) => {\n      uni.showModal({\n        title: '确认删除',\n        content: '此消息删除后不可恢复，是否继续？',\n        mask: true,\n        success: (res) => resolve(res.confirm),\n        fail: (err) => {\n          console.warn('删除确认弹窗调用失败：', err);\n          resolve(false);\n        }\n      });\n    });\n  },\n\n  /**\n   * 删除消息\n   * @param {Array} messageList - 消息列表数组\n   * @param {number} index - 消息索引\n   * @returns {Promise<void>}\n   */\n  async deleteMessage(messageList, index) {\n    if (!this.isValidIndex(messageList, index)) return;\n    \n    const confirm = await this.showDeleteConfirm(index);\n    if (!confirm) return;\n    \n    messageList.splice(index, 1);\n    uni.showToast({ title: '消息已删除', icon: 'none', duration: 1200 });\n  },\n\n  /**\n   * 处理消息长按事件\n   * @param {Array} messageList - 消息列表数组\n   * @param {Object} item - 消息项\n   * @param {number} index - 消息索引\n   */\n  handleLongPress(messageList, item, index) {\n    if (!this.isValidMessageIndex(messageList, item, index)) return;\n    \n    // 未读消息禁止长按操作\n    if (item.unread) {\n      uni.showToast({ \n        title: '未读消息暂不支持长按操作', \n        icon: 'none', \n        duration: 1500 \n      });\n      return;\n    }\n\n    uni.showActionSheet({\n      itemList: ['恢复标红', '删除'],\n      itemColor: '#333',\n      mask: true,\n      success: (res) => {\n        if (res.cancel) return;\n        \n        switch (res.tapIndex) {\n          case 0: // 恢复标红\n            messageList[index].unread = true;\n            uni.showToast({ title: '已恢复标红', icon: 'none', duration: 1200 });\n            break;\n          case 1: // 删除\n            this.deleteMessage(messageList, index);\n            break;\n        }\n      },\n      fail: (err) => {\n        console.warn('长按操作菜单调用失败：', err);\n      }\n    });\n  },\n\n  /**\n   * 计算未读消息数量\n   * @param {Array} messageList - 消息列表数组\n   * @returns {number} 未读消息数量\n   */\n  getUnreadCount(messageList) {\n    return (messageList || []).filter(item => item?.unread).length;\n  },\n\n  /**\n   * 验证消息索引有效性\n   * @param {Array} messageList - 消息列表数组\n   * @param {Object} item - 消息项\n   * @param {number} index - 消息索引\n   * @returns {boolean} 索引是否有效\n   */\n  isValidMessageIndex(messageList, item, index) {\n    return !!item && this.isValidIndex(messageList, index);\n  },\n\n  /**\n   * 验证索引有效性\n   * @param {Array} list - 数组\n   * @param {number} index - 索引\n   * @returns {boolean} 索引是否有效\n   */\n  isValidIndex(list, index) {\n    return Array.isArray(list) && index >= 0 && index < list.length;\n  }\n};\n"],"names":["uni"],"mappings":"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"}