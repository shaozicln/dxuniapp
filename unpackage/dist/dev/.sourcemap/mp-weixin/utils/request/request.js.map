{"version":3,"file":"request.js","sources":["utils/request/request.js"],"sourcesContent":["import {\n\tgetCurrentInstance\n} from 'vue';\n\nexport const getBaseURL = () => {\n  const instance = getCurrentInstance();\n  let baseUrl = instance?.appContext?.config?.globalProperties?.$URL ;\n  return baseUrl.replace(/\\/$/, '');\n};\n\n\nexport const request = (options) => {\n\t// 1. 获取基础URL并拼接完整路径\n\tconst baseURL = getBaseURL();\n\tlet fullUrl = options.url;\n\n\tif (!fullUrl.startsWith('http://') && !fullUrl.startsWith('https://')) {\n\t\tconst path = fullUrl.replace(/^\\/+/, ''); // 移除路径开头的斜杠\n\t\tfullUrl = `${baseURL}/${path}`;\n\t}\n\n\t// 2. 自动获取本地存储的Token\n\tconst token = uni.getStorageSync('Admin-Token') || '';\n\n\t// 3. 构建请求头（自动携带Token）\n\tconst defaultHeaders = {\n\t\t'Accept': '*/*',\n\t\t'Connection': 'keep-alive',\n\t\t...(token && {\n\t\t\t'Authorization': token\n\t\t}), // 有Token时才添加\n\t\t...options.headers // 允许用户传入自定义头（可覆盖默认值）\n\t};\n\n\tconsole.log('请求URL:', fullUrl);\n\tconsole.log('请求头:', defaultHeaders);\n\n\treturn new Promise((resolve, reject) => {\n\t\tuni.request({\n\t\t\t...options,\n\t\t\turl: fullUrl,\n\t\t\theader: defaultHeaders, // 注意uni-app中是header而非headers\n\t\t\tsuccess: (res) => {\n\t\t\t\t// 统一处理401 Token失效\n\t\t\t\tif (res.statusCode === 401) {\n\t\t\t\t\tuni.removeStorageSync('Admin-Token');\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '登录已过期，请重新登录',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treject(new Error('Token失效'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(res.data);\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\treject(new Error(`请求失败: ${err.errMsg}`));\n\t\t\t}\n\t\t});\n\t});\n};\n\n// 快捷请求方法\nexport const get = (url, data = {}, options = {}) => {\n\treturn request({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'GET'\n\t});\n};\n\nexport const post = (url, data = {}, options = {}) => {\n\treturn request({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'POST'\n\t});\n};\n\nexport const put = (url, data = {}, options = {}) => {\n\treturn request({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'PUT'\n\t});\n};\n\nexport const del = (url, data = {}, options = {}) => {\n\treturn request({\n\t\t...options,\n\t\turl,\n\t\tdata,\n\t\tmethod: 'DELETE'\n\t});\n};"],"names":["getCurrentInstance","uni"],"mappings":";;AAIO,MAAM,aAAa,MAAM;;AAC9B,QAAM,WAAWA,cAAAA;AACjB,MAAI,WAAU,sDAAU,eAAV,mBAAsB,WAAtB,mBAA8B,qBAA9B,mBAAgD;AAC9D,SAAO,QAAQ,QAAQ,OAAO,EAAE;AAClC;AAGY,MAAC,UAAU,CAAC,YAAY;AAEnC,QAAM,UAAU;AAChB,MAAI,UAAU,QAAQ;AAEtB,MAAI,CAAC,QAAQ,WAAW,SAAS,KAAK,CAAC,QAAQ,WAAW,UAAU,GAAG;AACtE,UAAM,OAAO,QAAQ,QAAQ,QAAQ,EAAE;AACvC,cAAU,GAAG,OAAO,IAAI,IAAI;AAAA,EAC5B;AAGD,QAAM,QAAQC,cAAG,MAAC,eAAe,aAAa,KAAK;AAGnD,QAAM,iBAAiB;AAAA,IACtB,UAAU;AAAA,IACV,cAAc;AAAA,IACd,GAAI,SAAS;AAAA,MACZ,iBAAiB;AAAA,IACjB;AAAA;AAAA,IACD,GAAG,QAAQ;AAAA;AAAA,EACb;AAECA,qEAAY,UAAU,OAAO;AAC7BA,gBAAA,MAAA,MAAA,OAAA,kCAAY,QAAQ,cAAc;AAElC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvCA,kBAAAA,MAAI,QAAQ;AAAA,MACX,GAAG;AAAA,MACH,KAAK;AAAA,MACL,QAAQ;AAAA;AAAA,MACR,SAAS,CAAC,QAAQ;AAEjB,YAAI,IAAI,eAAe,KAAK;AAC3BA,8BAAI,kBAAkB,aAAa;AACnCA,wBAAAA,MAAI,UAAU;AAAA,YACb,OAAO;AAAA,YACP,MAAM;AAAA,UACZ,CAAM;AACD,iBAAO,IAAI,MAAM,SAAS,CAAC;AAC3B;AAAA,QACA;AACD,gBAAQ,IAAI,IAAI;AAAA,MAChB;AAAA,MACD,MAAM,CAAC,QAAQ;AACd,eAAO,IAAI,MAAM,SAAS,IAAI,MAAM,EAAE,CAAC;AAAA,MACvC;AAAA,IACJ,CAAG;AAAA,EACH,CAAE;AACF;AAGY,MAAC,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AACpD,SAAO,QAAQ;AAAA,IACd,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EACV,CAAE;AACF;AAEY,MAAC,OAAO,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AACrD,SAAO,QAAQ;AAAA,IACd,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EACV,CAAE;AACF;AAEY,MAAC,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AACpD,SAAO,QAAQ;AAAA,IACd,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EACV,CAAE;AACF;AAEY,MAAC,MAAM,CAAC,KAAK,OAAO,CAAA,GAAI,UAAU,CAAA,MAAO;AACpD,SAAO,QAAQ;AAAA,IACd,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EACV,CAAE;AACF;;;;;;"}